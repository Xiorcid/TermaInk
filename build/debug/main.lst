ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_DMA_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_DMA_Init:
  27              	.LFB330:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "EPD.h"
  26:Core/Src/main.c **** #include "EPD_GUI.h"
  27:Core/Src/main.c **** #include "../Fonts/fonts.h"
  28:Core/Src/main.c **** #include "bitmaps.h"
  29:Core/Src/main.c **** #include "stdlib.h"
  30:Core/Src/main.c **** #include "stdbool.h"
  31:Core/Src/main.c **** #include "ds18b20.h"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 2


  32:Core/Src/main.c **** #include "queue.h"
  33:Core/Src/main.c **** #include "buttons.h"
  34:Core/Src/main.c **** #include "time.h"
  35:Core/Src/main.c **** #include "usbd_cdc_if.h"
  36:Core/Src/main.c **** #include "USB_storage.h"
  37:Core/Src/main.c **** // #include "USB_storage.h"
  38:Core/Src/main.c **** /* USER CODE END Includes */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PTD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PD */
  47:Core/Src/main.c **** // #define VREFINT_CAL_ADDR    ((uint32_t*)0x1FFF75AA)
  48:Core/Src/main.c **** #define MEASURMENTS_DELTA_SEC 10
  49:Core/Src/main.c **** #define SAMPLES_PER_GRAPH 48
  50:Core/Src/main.c **** #define IMG_SIZE  ((EPD_WIDTH % 8 == 0)? (EPD_WIDTH / 8 ): (EPD_WIDTH / 8 + 1)) * EPD_HEIGHT
  51:Core/Src/main.c **** /* USER CODE END PD */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  54:Core/Src/main.c **** /* USER CODE BEGIN PM */
  55:Core/Src/main.c **** #define roundUpToDiv(x, div) (((x) + ((x) < 0 ? -(div - 1) : (div - 1))) / (div) * (div))
  56:Core/Src/main.c **** /* USER CODE END PM */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  59:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  60:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** LPTIM_HandleTypeDef hlptim1;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** UART_HandleTypeDef huart2;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE BEGIN PV */
  71:Core/Src/main.c **** // int16_t data[60];
  72:Core/Src/main.c **** // uint8_t data_write_ptr = 0;
  73:Core/Src/main.c **** // bool is_first_writing = true;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** float mcuVoltage = 0;
  76:Core/Src/main.c **** uint16_t adcData = 0;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** DS18B20 temperatureSensor;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** float temp;
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** //uint8_t *BlackImage;
  83:Core/Src/main.c **** // uint16_t Imagesize = ((EPD_WIDTH % 8 == 0)? (EPD_WIDTH / 8 ): (EPD_WIDTH / 8 + 1)) * EPD_HEIGHT;
  84:Core/Src/main.c **** uint8_t BlackImage[IMG_SIZE];
  85:Core/Src/main.c **** /* USER CODE END PV */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  88:Core/Src/main.c **** void SystemClock_Config(void);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 3


  89:Core/Src/main.c **** static void MX_GPIO_Init(void);
  90:Core/Src/main.c **** static void MX_DMA_Init(void);
  91:Core/Src/main.c **** static void MX_SPI1_Init(void);
  92:Core/Src/main.c **** static void MX_RTC_Init(void);
  93:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  94:Core/Src/main.c **** static void MX_ADC1_Init(void);
  95:Core/Src/main.c **** static void MX_LPTIM1_Init(void);
  96:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  97:Core/Src/main.c **** long map(long x, long in_min, long in_max, long out_min, long out_max);
  98:Core/Src/main.c **** void plot();
  99:Core/Src/main.c **** void shutdown(bool skipRTC);
 100:Core/Src/main.c **** void power_on();
 101:Core/Src/main.c **** float DS18_GET();
 102:Core/Src/main.c **** void DS18_INIT();
 103:Core/Src/main.c **** void set_time();
 104:Core/Src/main.c **** void get_data(bool goto_sleep);
 105:Core/Src/main.c **** void timestamp_to_time(uint32_t timestamp, uint8_t* hours, uint8_t* minutes);
 106:Core/Src/main.c **** bool USB_DEVICE_IsConnected();
 107:Core/Src/main.c **** void USB_SendAllData();
 108:Core/Src/main.c **** void syncRTC();
 109:Core/Src/main.c **** void Start_Timer();
 110:Core/Src/main.c **** void Start_Next_Interval();
 111:Core/Src/main.c **** /* USER CODE END PFP */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 114:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 115:Core/Src/main.c **** bool send_usb;
 116:Core/Src/main.c **** bool send_usb_data;
 117:Core/Src/main.c **** bool measure;
 118:Core/Src/main.c **** bool ready;
 119:Core/Src/main.c **** bool initialise_usb_connection;
 120:Core/Src/main.c **** bool go_to_sleep;
 121:Core/Src/main.c **** bool set_rtc;
 122:Core/Src/main.c **** char rtc_buf[30];
 123:Core/Src/main.c **** uint32_t usb_conn_tmr;
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** volatile uint32_t seconds_passed = 0;
 126:Core/Src/main.c **** #define TICKS_PER_SEC (32768 / 128) // = 256
 127:Core/Src/main.c **** /* USER CODE END 0 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /**
 130:Core/Src/main.c ****   * @brief  The application entry point.
 131:Core/Src/main.c ****   * @retval int
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c **** int main(void)
 134:Core/Src/main.c **** {
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 137:Core/Src/main.c ****   
 138:Core/Src/main.c ****   /* USER CODE END 1 */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 143:Core/Src/main.c ****   HAL_Init();
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* USER CODE END Init */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Configure the system clock */
 150:Core/Src/main.c ****   SystemClock_Config();
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE END SysInit */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* Initialize all configured peripherals */
 157:Core/Src/main.c ****   MX_GPIO_Init();
 158:Core/Src/main.c ****   MX_DMA_Init();
 159:Core/Src/main.c ****   MX_SPI1_Init();
 160:Core/Src/main.c ****   MX_RTC_Init();
 161:Core/Src/main.c ****   MX_USART2_UART_Init();
 162:Core/Src/main.c ****   MX_ADC1_Init();
 163:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 164:Core/Src/main.c ****   MX_LPTIM1_Init();
 165:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 166:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adcData, 1);
 167:Core/Src/main.c ****   DS18_INIT();
 168:Core/Src/main.c ****   EPD_Init();
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   q_init();
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****  bool is_RTC_retained = q_load();
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****  bool old_usb_state = false;
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   if (is_RTC_retained) {
 177:Core/Src/main.c ****     // shutdown(true);
 178:Core/Src/main.c ****     // power_on();
 179:Core/Src/main.c ****     // Start_Timer();
 180:Core/Src/main.c ****   }else{
 181:Core/Src/main.c ****     set_time();
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   // HAL_GPIO_WritePin(TEST_GPIO_Port, TEST_Pin, GPIO_PIN_SET);
 185:Core/Src/main.c ****   HAL_NVIC_SetPriority(LPTIM1_IRQn, 0, 0);
 186:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(LPTIM1_IRQn);
 187:Core/Src/main.c ****   Start_Timer();
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   q_push(DS18_GET()*100);
 190:Core/Src/main.c ****   // q_push(DS18_GET()*100);
 191:Core/Src/main.c ****   // q_push(DS18_GET()*100);
 192:Core/Src/main.c ****   // q_push(DS18_GET()*100);
 193:Core/Src/main.c ****   q_save();
 194:Core/Src/main.c ****   plot();
 195:Core/Src/main.c ****   if(!USB_DEVICE_IsConnected()){  
 196:Core/Src/main.c ****     shutdown(false);
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c ****   /* USER CODE END 2 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* Infinite loop */
 201:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 202:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 5


 203:Core/Src/main.c ****   { 
 204:Core/Src/main.c ****     if(measure){
 205:Core/Src/main.c ****       measure = false;
 206:Core/Src/main.c ****       get_data(!send_usb);
 207:Core/Src/main.c ****       send_usb = false;
 208:Core/Src/main.c ****       ready = true;
 209:Core/Src/main.c ****     }
 210:Core/Src/main.c ****     
 211:Core/Src/main.c ****     if(initialise_usb_connection){
 212:Core/Src/main.c ****       initialise_usb_connection = false;
 213:Core/Src/main.c ****       power_on();
 214:Core/Src/main.c ****       usb_conn_tmr = HAL_GetTick();
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****       // uint32_t usbinit_tmr = HAL_GetTick();
 217:Core/Src/main.c ****       // while(HAL_GetTick()-usbinit_tmr < 5000){
 218:Core/Src/main.c ****       //   if(measure){
 219:Core/Src/main.c ****       //     measure = false;
 220:Core/Src/main.c ****       //     get_data(!send_usb);
 221:Core/Src/main.c ****       //     send_usb = false;
 222:Core/Src/main.c ****       //   }
 223:Core/Src/main.c ****       //   if(USB_DEVICE_IsConnected()){break;}
 224:Core/Src/main.c ****       // }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****       // uint32_t sleep_time = HAL_RTCEx_GetWakeUpTimer(&hrtc);
 227:Core/Src/main.c ****       // HAL_RTCEx_SetWakeUpTimer_IT(&hrtc, sleep_time, RTC_WAKEUPCLOCK_CK_SPRE_16BITS, 0);
 228:Core/Src/main.c ****     }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****     if(send_usb_data){
 231:Core/Src/main.c ****       send_usb_data = false;
 232:Core/Src/main.c ****       USB_SendAllData();
 233:Core/Src/main.c ****     }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****     if(set_rtc){
 236:Core/Src/main.c ****       set_rtc = false;
 237:Core/Src/main.c ****       syncRTC();
 238:Core/Src/main.c ****     }
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****     // if(!USB_DEVICE_IsConnected() && old_usb_state && HAL_GetTick()-usb_conn_tmr>150){
 241:Core/Src/main.c ****     //   shutdown(true);
 242:Core/Src/main.c ****     //   // SleepForSeconds(10);
 243:Core/Src/main.c ****     // }
 244:Core/Src/main.c ****     // old_usb_state = USB_DEVICE_IsConnected();
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****     if(go_to_sleep){
 247:Core/Src/main.c ****       HAL_PWREx_EnterSTOP2Mode(PWR_STOPENTRY_WFI);
 248:Core/Src/main.c ****     }
 249:Core/Src/main.c ****     /* USER CODE END WHILE */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 252:Core/Src/main.c ****   }
 253:Core/Src/main.c ****   /* USER CODE END 3 */
 254:Core/Src/main.c **** }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /**
 257:Core/Src/main.c ****   * @brief System Clock Configuration
 258:Core/Src/main.c ****   * @retval None
 259:Core/Src/main.c ****   */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 6


 260:Core/Src/main.c **** void SystemClock_Config(void)
 261:Core/Src/main.c **** {
 262:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 263:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 266:Core/Src/main.c ****   */
 267:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****     Error_Handler();
 270:Core/Src/main.c ****   }
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /** Configure LSE Drive Capability
 273:Core/Src/main.c ****   */
 274:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 275:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 278:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 279:Core/Src/main.c ****   */
 280:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_LSE
 281:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_MSI;
 282:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 283:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 284:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 285:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 286:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_8;
 287:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 288:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****     Error_Handler();
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 296:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 297:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 298:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 299:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 300:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /** Enable MSI Auto calibration
 308:Core/Src/main.c ****   */
 309:Core/Src/main.c ****   HAL_RCCEx_EnableMSIPLLMode();
 310:Core/Src/main.c **** }
 311:Core/Src/main.c **** 
 312:Core/Src/main.c **** /**
 313:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 314:Core/Src/main.c ****   * @param None
 315:Core/Src/main.c ****   * @retval None
 316:Core/Src/main.c ****   */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 7


 317:Core/Src/main.c **** static void MX_ADC1_Init(void)
 318:Core/Src/main.c **** {
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 325:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /** Common config
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c ****   hadc1.Instance = ADC1;
 334:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 335:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 336:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 337:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 338:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 339:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 340:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 341:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 342:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 343:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 344:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 345:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 346:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 347:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 348:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****     Error_Handler();
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /** Configure the ADC multi-mode
 354:Core/Src/main.c ****   */
 355:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 356:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 357:Core/Src/main.c ****   {
 358:Core/Src/main.c ****     Error_Handler();
 359:Core/Src/main.c ****   }
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /** Configure Regular Channel
 362:Core/Src/main.c ****   */
 363:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_VREFINT;
 364:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 365:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 366:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 367:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 368:Core/Src/main.c ****   sConfig.Offset = 0;
 369:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 370:Core/Src/main.c ****   {
 371:Core/Src/main.c ****     Error_Handler();
 372:Core/Src/main.c ****   }
 373:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** }
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** /**
 380:Core/Src/main.c ****   * @brief LPTIM1 Initialization Function
 381:Core/Src/main.c ****   * @param None
 382:Core/Src/main.c ****   * @retval None
 383:Core/Src/main.c ****   */
 384:Core/Src/main.c **** static void MX_LPTIM1_Init(void)
 385:Core/Src/main.c **** {
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE BEGIN LPTIM1_Init 0 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE END LPTIM1_Init 0 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE BEGIN LPTIM1_Init 1 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE END LPTIM1_Init 1 */
 394:Core/Src/main.c ****   hlptim1.Instance = LPTIM1;
 395:Core/Src/main.c ****   hlptim1.Init.Clock.Source = LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC;
 396:Core/Src/main.c ****   hlptim1.Init.Clock.Prescaler = LPTIM_PRESCALER_DIV128;
 397:Core/Src/main.c ****   hlptim1.Init.Trigger.Source = LPTIM_TRIGSOURCE_SOFTWARE;
 398:Core/Src/main.c ****   hlptim1.Init.OutputPolarity = LPTIM_OUTPUTPOLARITY_HIGH;
 399:Core/Src/main.c ****   hlptim1.Init.UpdateMode = LPTIM_UPDATE_IMMEDIATE;
 400:Core/Src/main.c ****   hlptim1.Init.CounterSource = LPTIM_COUNTERSOURCE_INTERNAL;
 401:Core/Src/main.c ****   hlptim1.Init.Input1Source = LPTIM_INPUT1SOURCE_GPIO;
 402:Core/Src/main.c ****   hlptim1.Init.Input2Source = LPTIM_INPUT2SOURCE_GPIO;
 403:Core/Src/main.c ****   hlptim1.Init.RepetitionCounter = 0;
 404:Core/Src/main.c ****   if (HAL_LPTIM_Init(&hlptim1) != HAL_OK)
 405:Core/Src/main.c ****   {
 406:Core/Src/main.c ****     Error_Handler();
 407:Core/Src/main.c ****   }
 408:Core/Src/main.c ****   /* USER CODE BEGIN LPTIM1_Init 2 */
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /* USER CODE END LPTIM1_Init 2 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c **** }
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** /**
 415:Core/Src/main.c ****   * @brief RTC Initialization Function
 416:Core/Src/main.c ****   * @param None
 417:Core/Src/main.c ****   * @retval None
 418:Core/Src/main.c ****   */
 419:Core/Src/main.c **** static void MX_RTC_Init(void)
 420:Core/Src/main.c **** {
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 423:Core/Src/main.c ****   uint32_t RTC_key =  0xAAFF55FF;
 424:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 427:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 430:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 9


 431:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /** Initialize RTC Only
 434:Core/Src/main.c ****   */
 435:Core/Src/main.c ****   hrtc.Instance = RTC;
 436:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 437:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 438:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 439:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 440:Core/Src/main.c ****   hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 441:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 442:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 443:Core/Src/main.c ****   hrtc.Init.OutPutPullUp = RTC_OUTPUT_PULLUP_NONE;
 444:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 445:Core/Src/main.c ****   {
 446:Core/Src/main.c ****     Error_Handler();
 447:Core/Src/main.c ****   }
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 450:Core/Src/main.c ****   if (HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR6) == RTC_key){
 451:Core/Src/main.c ****     return;
 452:Core/Src/main.c ****   }
 453:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 456:Core/Src/main.c ****   */
 457:Core/Src/main.c ****   sTime.Hours = 0x0;
 458:Core/Src/main.c ****   sTime.Minutes = 0x0;
 459:Core/Src/main.c ****   sTime.Seconds = 0x0;
 460:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_ADD1H;
 461:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 462:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 463:Core/Src/main.c ****   {
 464:Core/Src/main.c ****     Error_Handler();
 465:Core/Src/main.c ****   }
 466:Core/Src/main.c ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 467:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 468:Core/Src/main.c ****   sDate.Date = 0x1;
 469:Core/Src/main.c ****   sDate.Year = 0x25;
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 472:Core/Src/main.c ****   {
 473:Core/Src/main.c ****     Error_Handler();
 474:Core/Src/main.c ****   }
 475:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 478:Core/Src/main.c **** 
 479:Core/Src/main.c **** }
 480:Core/Src/main.c **** 
 481:Core/Src/main.c **** /**
 482:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 483:Core/Src/main.c ****   * @param None
 484:Core/Src/main.c ****   * @retval None
 485:Core/Src/main.c ****   */
 486:Core/Src/main.c **** static void MX_SPI1_Init(void)
 487:Core/Src/main.c **** {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 496:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 497:Core/Src/main.c ****   hspi1.Instance = SPI1;
 498:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 499:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 500:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 501:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 502:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 503:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 504:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 505:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 506:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 507:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 508:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 509:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 510:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 511:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 512:Core/Src/main.c ****   {
 513:Core/Src/main.c ****     Error_Handler();
 514:Core/Src/main.c ****   }
 515:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 516:Core/Src/main.c **** 
 517:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 518:Core/Src/main.c **** 
 519:Core/Src/main.c **** }
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** /**
 522:Core/Src/main.c ****   * @brief USART2 Initialization Function
 523:Core/Src/main.c ****   * @param None
 524:Core/Src/main.c ****   * @retval None
 525:Core/Src/main.c ****   */
 526:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 527:Core/Src/main.c **** {
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 536:Core/Src/main.c ****   huart2.Instance = USART2;
 537:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 538:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 539:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 540:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 541:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 542:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 543:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 544:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 11


 545:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 546:Core/Src/main.c ****   if (HAL_HalfDuplex_Init(&huart2) != HAL_OK)
 547:Core/Src/main.c ****   {
 548:Core/Src/main.c ****     Error_Handler();
 549:Core/Src/main.c ****   }
 550:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 551:Core/Src/main.c **** 
 552:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** }
 555:Core/Src/main.c **** 
 556:Core/Src/main.c **** /**
 557:Core/Src/main.c ****   * Enable DMA controller clock
 558:Core/Src/main.c ****   */
 559:Core/Src/main.c **** static void MX_DMA_Init(void)
 560:Core/Src/main.c **** {
  28              		.loc 1 560 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****   /* DMA controller clock enable */
 563:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
  37              		.loc 1 563 3 view .LVU1
  38              	.LBB4:
  39              		.loc 1 563 3 view .LVU2
  40              		.loc 1 563 3 view .LVU3
  41 0004 0A4B     		ldr	r3, .L3
  42 0006 9A6C     		ldr	r2, [r3, #72]
  43 0008 42F00102 		orr	r2, r2, #1
  44 000c 9A64     		str	r2, [r3, #72]
  45              		.loc 1 563 3 view .LVU4
  46 000e 9B6C     		ldr	r3, [r3, #72]
  47 0010 03F00103 		and	r3, r3, #1
  48 0014 0193     		str	r3, [sp, #4]
  49              		.loc 1 563 3 view .LVU5
  50 0016 019B     		ldr	r3, [sp, #4]
  51              	.LBE4:
  52              		.loc 1 563 3 view .LVU6
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****   /* DMA interrupt init */
 566:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 567:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
  53              		.loc 1 567 3 view .LVU7
  54 0018 0022     		movs	r2, #0
  55 001a 1146     		mov	r1, r2
  56 001c 0B20     		movs	r0, #11
  57 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  58              	.LVL0:
 568:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
  59              		.loc 1 568 3 view .LVU8
  60 0022 0B20     		movs	r0, #11
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 12


  61 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  62              	.LVL1:
 569:Core/Src/main.c **** 
 570:Core/Src/main.c **** }
  63              		.loc 1 570 1 is_stmt 0 view .LVU9
  64 0028 03B0     		add	sp, sp, #12
  65              		.cfi_def_cfa_offset 4
  66              		@ sp needed
  67 002a 5DF804FB 		ldr	pc, [sp], #4
  68              	.L4:
  69 002e 00BF     		.align	2
  70              	.L3:
  71 0030 00100240 		.word	1073876992
  72              		.cfi_endproc
  73              	.LFE330:
  75              		.section	.text.MX_GPIO_Init,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	MX_GPIO_Init:
  82              	.LFB331:
 571:Core/Src/main.c **** 
 572:Core/Src/main.c **** /**
 573:Core/Src/main.c ****   * @brief GPIO Initialization Function
 574:Core/Src/main.c ****   * @param None
 575:Core/Src/main.c ****   * @retval None
 576:Core/Src/main.c ****   */
 577:Core/Src/main.c **** static void MX_GPIO_Init(void)
 578:Core/Src/main.c **** {
  83              		.loc 1 578 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 40
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  88              		.cfi_def_cfa_offset 32
  89              		.cfi_offset 4, -32
  90              		.cfi_offset 5, -28
  91              		.cfi_offset 6, -24
  92              		.cfi_offset 7, -20
  93              		.cfi_offset 8, -16
  94              		.cfi_offset 9, -12
  95              		.cfi_offset 10, -8
  96              		.cfi_offset 14, -4
  97 0004 8AB0     		sub	sp, sp, #40
  98              		.cfi_def_cfa_offset 72
 579:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  99              		.loc 1 579 3 view .LVU11
 100              		.loc 1 579 20 is_stmt 0 view .LVU12
 101 0006 05AD     		add	r5, sp, #20
 102 0008 0024     		movs	r4, #0
 103 000a 0594     		str	r4, [sp, #20]
 104 000c 0694     		str	r4, [sp, #24]
 105 000e 0794     		str	r4, [sp, #28]
 106 0010 0894     		str	r4, [sp, #32]
 107 0012 0994     		str	r4, [sp, #36]
 580:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 13


 581:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 584:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 108              		.loc 1 584 3 is_stmt 1 view .LVU13
 109              	.LBB5:
 110              		.loc 1 584 3 view .LVU14
 111              		.loc 1 584 3 view .LVU15
 112 0014 504B     		ldr	r3, .L7
 113 0016 DA6C     		ldr	r2, [r3, #76]
 114 0018 42F00402 		orr	r2, r2, #4
 115 001c DA64     		str	r2, [r3, #76]
 116              		.loc 1 584 3 view .LVU16
 117 001e DA6C     		ldr	r2, [r3, #76]
 118 0020 02F00402 		and	r2, r2, #4
 119 0024 0192     		str	r2, [sp, #4]
 120              		.loc 1 584 3 view .LVU17
 121 0026 019A     		ldr	r2, [sp, #4]
 122              	.LBE5:
 123              		.loc 1 584 3 view .LVU18
 585:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 124              		.loc 1 585 3 view .LVU19
 125              	.LBB6:
 126              		.loc 1 585 3 view .LVU20
 127              		.loc 1 585 3 view .LVU21
 128 0028 DA6C     		ldr	r2, [r3, #76]
 129 002a 42F00102 		orr	r2, r2, #1
 130 002e DA64     		str	r2, [r3, #76]
 131              		.loc 1 585 3 view .LVU22
 132 0030 DA6C     		ldr	r2, [r3, #76]
 133 0032 02F00102 		and	r2, r2, #1
 134 0036 0292     		str	r2, [sp, #8]
 135              		.loc 1 585 3 view .LVU23
 136 0038 029A     		ldr	r2, [sp, #8]
 137              	.LBE6:
 138              		.loc 1 585 3 view .LVU24
 586:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 139              		.loc 1 586 3 view .LVU25
 140              	.LBB7:
 141              		.loc 1 586 3 view .LVU26
 142              		.loc 1 586 3 view .LVU27
 143 003a DA6C     		ldr	r2, [r3, #76]
 144 003c 42F00202 		orr	r2, r2, #2
 145 0040 DA64     		str	r2, [r3, #76]
 146              		.loc 1 586 3 view .LVU28
 147 0042 DA6C     		ldr	r2, [r3, #76]
 148 0044 02F00202 		and	r2, r2, #2
 149 0048 0392     		str	r2, [sp, #12]
 150              		.loc 1 586 3 view .LVU29
 151 004a 039A     		ldr	r2, [sp, #12]
 152              	.LBE7:
 153              		.loc 1 586 3 view .LVU30
 587:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 154              		.loc 1 587 3 view .LVU31
 155              	.LBB8:
 156              		.loc 1 587 3 view .LVU32
 157              		.loc 1 587 3 view .LVU33
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 14


 158 004c DA6C     		ldr	r2, [r3, #76]
 159 004e 42F08002 		orr	r2, r2, #128
 160 0052 DA64     		str	r2, [r3, #76]
 161              		.loc 1 587 3 view .LVU34
 162 0054 DB6C     		ldr	r3, [r3, #76]
 163 0056 03F08003 		and	r3, r3, #128
 164 005a 0493     		str	r3, [sp, #16]
 165              		.loc 1 587 3 view .LVU35
 166 005c 049B     		ldr	r3, [sp, #16]
 167              	.LBE8:
 168              		.loc 1 587 3 view .LVU36
 588:Core/Src/main.c **** 
 589:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 590:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, RST_Pin|CS_Pin|DC_Pin, GPIO_PIN_RESET);
 169              		.loc 1 590 3 view .LVU37
 170 005e 2246     		mov	r2, r4
 171 0060 5821     		movs	r1, #88
 172 0062 4FF09040 		mov	r0, #1207959552
 173 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 174              	.LVL2:
 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 593:Core/Src/main.c ****   HAL_GPIO_WritePin(PWR_GPIO_Port, PWR_Pin, GPIO_PIN_RESET);
 175              		.loc 1 593 3 view .LVU38
 176 006a 3C4F     		ldr	r7, .L7+4
 177 006c 2246     		mov	r2, r4
 178 006e 0221     		movs	r1, #2
 179 0070 3846     		mov	r0, r7
 180 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 181              	.LVL3:
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   /*Configure GPIO pin : OK_Pin */
 596:Core/Src/main.c ****   GPIO_InitStruct.Pin = OK_Pin;
 182              		.loc 1 596 3 view .LVU39
 183              		.loc 1 596 23 is_stmt 0 view .LVU40
 184 0076 0126     		movs	r6, #1
 185 0078 0596     		str	r6, [sp, #20]
 597:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 186              		.loc 1 597 3 is_stmt 1 view .LVU41
 187              		.loc 1 597 24 is_stmt 0 view .LVU42
 188 007a 4FF4881A 		mov	r10, #1114112
 189 007e CDF818A0 		str	r10, [sp, #24]
 598:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 190              		.loc 1 598 3 is_stmt 1 view .LVU43
 191              		.loc 1 598 24 is_stmt 0 view .LVU44
 192 0082 0794     		str	r4, [sp, #28]
 599:Core/Src/main.c ****   HAL_GPIO_Init(OK_GPIO_Port, &GPIO_InitStruct);
 193              		.loc 1 599 3 is_stmt 1 view .LVU45
 194 0084 2946     		mov	r1, r5
 195 0086 4FF09040 		mov	r0, #1207959552
 196 008a FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL4:
 600:Core/Src/main.c **** 
 601:Core/Src/main.c ****   /*Configure GPIO pin : RST_Pin */
 602:Core/Src/main.c ****   GPIO_InitStruct.Pin = RST_Pin;
 198              		.loc 1 602 3 view .LVU46
 199              		.loc 1 602 23 is_stmt 0 view .LVU47
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 15


 200 008e 4FF00809 		mov	r9, #8
 201 0092 CDF81490 		str	r9, [sp, #20]
 603:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 202              		.loc 1 603 3 is_stmt 1 view .LVU48
 203              		.loc 1 603 24 is_stmt 0 view .LVU49
 204 0096 0696     		str	r6, [sp, #24]
 604:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 205              		.loc 1 604 3 is_stmt 1 view .LVU50
 206              		.loc 1 604 24 is_stmt 0 view .LVU51
 207 0098 0796     		str	r6, [sp, #28]
 605:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 208              		.loc 1 605 3 is_stmt 1 view .LVU52
 209              		.loc 1 605 25 is_stmt 0 view .LVU53
 210 009a 0894     		str	r4, [sp, #32]
 606:Core/Src/main.c ****   HAL_GPIO_Init(RST_GPIO_Port, &GPIO_InitStruct);
 211              		.loc 1 606 3 is_stmt 1 view .LVU54
 212 009c 2946     		mov	r1, r5
 213 009e 4FF09040 		mov	r0, #1207959552
 214 00a2 FFF7FEFF 		bl	HAL_GPIO_Init
 215              	.LVL5:
 607:Core/Src/main.c **** 
 608:Core/Src/main.c ****   /*Configure GPIO pins : CS_Pin DC_Pin */
 609:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_Pin|DC_Pin;
 216              		.loc 1 609 3 view .LVU55
 217              		.loc 1 609 23 is_stmt 0 view .LVU56
 218 00a6 5023     		movs	r3, #80
 219 00a8 0593     		str	r3, [sp, #20]
 610:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 220              		.loc 1 610 3 is_stmt 1 view .LVU57
 221              		.loc 1 610 24 is_stmt 0 view .LVU58
 222 00aa 0696     		str	r6, [sp, #24]
 611:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 223              		.loc 1 611 3 is_stmt 1 view .LVU59
 224              		.loc 1 611 24 is_stmt 0 view .LVU60
 225 00ac 0794     		str	r4, [sp, #28]
 612:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 226              		.loc 1 612 3 is_stmt 1 view .LVU61
 227              		.loc 1 612 25 is_stmt 0 view .LVU62
 228 00ae 0894     		str	r4, [sp, #32]
 613:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 229              		.loc 1 613 3 is_stmt 1 view .LVU63
 230 00b0 2946     		mov	r1, r5
 231 00b2 4FF09040 		mov	r0, #1207959552
 232 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 233              	.LVL6:
 614:Core/Src/main.c **** 
 615:Core/Src/main.c ****   /*Configure GPIO pins : BUSY_Pin DOWN_Pin UP_Pin */
 616:Core/Src/main.c ****   GPIO_InitStruct.Pin = BUSY_Pin|DOWN_Pin|UP_Pin;
 234              		.loc 1 616 3 view .LVU64
 235              		.loc 1 616 23 is_stmt 0 view .LVU65
 236 00ba 4FF44873 		mov	r3, #800
 237 00be 0593     		str	r3, [sp, #20]
 617:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 238              		.loc 1 617 3 is_stmt 1 view .LVU66
 239              		.loc 1 617 24 is_stmt 0 view .LVU67
 240 00c0 0694     		str	r4, [sp, #24]
 618:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 16


 241              		.loc 1 618 3 is_stmt 1 view .LVU68
 242              		.loc 1 618 24 is_stmt 0 view .LVU69
 243 00c2 0794     		str	r4, [sp, #28]
 619:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 244              		.loc 1 619 3 is_stmt 1 view .LVU70
 245 00c4 2946     		mov	r1, r5
 246 00c6 4FF09040 		mov	r0, #1207959552
 247 00ca FFF7FEFF 		bl	HAL_GPIO_Init
 248              	.LVL7:
 620:Core/Src/main.c **** 
 621:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB4 PB6 PB7 */
 622:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_7;
 249              		.loc 1 622 3 view .LVU71
 250              		.loc 1 622 23 is_stmt 0 view .LVU72
 251 00ce D123     		movs	r3, #209
 252 00d0 0593     		str	r3, [sp, #20]
 623:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 253              		.loc 1 623 3 is_stmt 1 view .LVU73
 254              		.loc 1 623 24 is_stmt 0 view .LVU74
 255 00d2 4FF00308 		mov	r8, #3
 256 00d6 CDF81880 		str	r8, [sp, #24]
 624:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 257              		.loc 1 624 3 is_stmt 1 view .LVU75
 258              		.loc 1 624 24 is_stmt 0 view .LVU76
 259 00da 0794     		str	r4, [sp, #28]
 625:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 260              		.loc 1 625 3 is_stmt 1 view .LVU77
 261 00dc 2946     		mov	r1, r5
 262 00de 3846     		mov	r0, r7
 263 00e0 FFF7FEFF 		bl	HAL_GPIO_Init
 264              	.LVL8:
 626:Core/Src/main.c **** 
 627:Core/Src/main.c ****   /*Configure GPIO pin : PWR_Pin */
 628:Core/Src/main.c ****   GPIO_InitStruct.Pin = PWR_Pin;
 265              		.loc 1 628 3 view .LVU78
 266              		.loc 1 628 23 is_stmt 0 view .LVU79
 267 00e4 0223     		movs	r3, #2
 268 00e6 0593     		str	r3, [sp, #20]
 629:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 269              		.loc 1 629 3 is_stmt 1 view .LVU80
 270              		.loc 1 629 24 is_stmt 0 view .LVU81
 271 00e8 0696     		str	r6, [sp, #24]
 630:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 272              		.loc 1 630 3 is_stmt 1 view .LVU82
 273              		.loc 1 630 24 is_stmt 0 view .LVU83
 274 00ea 0794     		str	r4, [sp, #28]
 631:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 275              		.loc 1 631 3 is_stmt 1 view .LVU84
 276              		.loc 1 631 25 is_stmt 0 view .LVU85
 277 00ec 0894     		str	r4, [sp, #32]
 632:Core/Src/main.c ****   HAL_GPIO_Init(PWR_GPIO_Port, &GPIO_InitStruct);
 278              		.loc 1 632 3 is_stmt 1 view .LVU86
 279 00ee 2946     		mov	r1, r5
 280 00f0 3846     		mov	r0, r7
 281 00f2 FFF7FEFF 		bl	HAL_GPIO_Init
 282              	.LVL9:
 633:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 17


 634:Core/Src/main.c ****   /*Configure GPIO pins : PA10 PA15 */
 635:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_15;
 283              		.loc 1 635 3 view .LVU87
 284              		.loc 1 635 23 is_stmt 0 view .LVU88
 285 00f6 4FF40443 		mov	r3, #33792
 286 00fa 0593     		str	r3, [sp, #20]
 636:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 287              		.loc 1 636 3 is_stmt 1 view .LVU89
 288              		.loc 1 636 24 is_stmt 0 view .LVU90
 289 00fc CDF81880 		str	r8, [sp, #24]
 637:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 290              		.loc 1 637 3 is_stmt 1 view .LVU91
 291              		.loc 1 637 24 is_stmt 0 view .LVU92
 292 0100 0794     		str	r4, [sp, #28]
 638:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 293              		.loc 1 638 3 is_stmt 1 view .LVU93
 294 0102 2946     		mov	r1, r5
 295 0104 4FF09040 		mov	r0, #1207959552
 296 0108 FFF7FEFF 		bl	HAL_GPIO_Init
 297              	.LVL10:
 639:Core/Src/main.c **** 
 640:Core/Src/main.c ****   /*Configure GPIO pin : USB_WKUP_Pin */
 641:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_WKUP_Pin;
 298              		.loc 1 641 3 view .LVU94
 299              		.loc 1 641 23 is_stmt 0 view .LVU95
 300 010c 2023     		movs	r3, #32
 301 010e 0593     		str	r3, [sp, #20]
 642:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 302              		.loc 1 642 3 is_stmt 1 view .LVU96
 303              		.loc 1 642 24 is_stmt 0 view .LVU97
 304 0110 CDF818A0 		str	r10, [sp, #24]
 643:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 305              		.loc 1 643 3 is_stmt 1 view .LVU98
 306              		.loc 1 643 24 is_stmt 0 view .LVU99
 307 0114 0794     		str	r4, [sp, #28]
 644:Core/Src/main.c ****   HAL_GPIO_Init(USB_WKUP_GPIO_Port, &GPIO_InitStruct);
 308              		.loc 1 644 3 is_stmt 1 view .LVU100
 309 0116 2946     		mov	r1, r5
 310 0118 3846     		mov	r0, r7
 311 011a FFF7FEFF 		bl	HAL_GPIO_Init
 312              	.LVL11:
 645:Core/Src/main.c **** 
 646:Core/Src/main.c ****   /*Configure GPIO pin : PH3 */
 647:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3;
 313              		.loc 1 647 3 view .LVU101
 314              		.loc 1 647 23 is_stmt 0 view .LVU102
 315 011e CDF81490 		str	r9, [sp, #20]
 648:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 316              		.loc 1 648 3 is_stmt 1 view .LVU103
 317              		.loc 1 648 24 is_stmt 0 view .LVU104
 318 0122 CDF81880 		str	r8, [sp, #24]
 649:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 319              		.loc 1 649 3 is_stmt 1 view .LVU105
 320              		.loc 1 649 24 is_stmt 0 view .LVU106
 321 0126 0794     		str	r4, [sp, #28]
 650:Core/Src/main.c ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 322              		.loc 1 650 3 is_stmt 1 view .LVU107
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 18


 323 0128 2946     		mov	r1, r5
 324 012a 0D48     		ldr	r0, .L7+8
 325 012c FFF7FEFF 		bl	HAL_GPIO_Init
 326              	.LVL12:
 651:Core/Src/main.c **** 
 652:Core/Src/main.c ****   /* EXTI interrupt init*/
 653:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 327              		.loc 1 653 3 view .LVU108
 328 0130 2246     		mov	r2, r4
 329 0132 2146     		mov	r1, r4
 330 0134 0620     		movs	r0, #6
 331 0136 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 332              	.LVL13:
 654:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 333              		.loc 1 654 3 view .LVU109
 334 013a 0620     		movs	r0, #6
 335 013c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 336              	.LVL14:
 655:Core/Src/main.c **** 
 656:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 337              		.loc 1 656 3 view .LVU110
 338 0140 2246     		mov	r2, r4
 339 0142 2146     		mov	r1, r4
 340 0144 1720     		movs	r0, #23
 341 0146 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 342              	.LVL15:
 657:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 343              		.loc 1 657 3 view .LVU111
 344 014a 1720     		movs	r0, #23
 345 014c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 346              	.LVL16:
 658:Core/Src/main.c **** 
 659:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 660:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 661:Core/Src/main.c **** }
 347              		.loc 1 661 1 is_stmt 0 view .LVU112
 348 0150 0AB0     		add	sp, sp, #40
 349              		.cfi_def_cfa_offset 32
 350              		@ sp needed
 351 0152 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 352              	.L8:
 353 0156 00BF     		.align	2
 354              	.L7:
 355 0158 00100240 		.word	1073876992
 356 015c 00040048 		.word	1207960576
 357 0160 001C0048 		.word	1207966720
 358              		.cfi_endproc
 359              	.LFE331:
 361              		.section	.text.map,"ax",%progbits
 362              		.align	1
 363              		.global	map
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 368              	map:
 369              	.LVL17:
 370              	.LFB333:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 19


 662:Core/Src/main.c **** 
 663:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 664:Core/Src/main.c **** void plot(){
 665:Core/Src/main.c ****   EPD_NewImage(BlackImage, EPD_WIDTH, EPD_HEIGHT, 90, WHITE);  	
 666:Core/Src/main.c ****   EPD_SelectImage(BlackImage);
 667:Core/Src/main.c ****   EPD_Clear(WHITE);
 668:Core/Src/main.c ****   int16_t min = q_get(0);
 669:Core/Src/main.c ****   int16_t max = q_get(0);
 670:Core/Src/main.c **** 
 671:Core/Src/main.c ****   for (uint8_t i = 0; i < q_len(); i++){
 672:Core/Src/main.c ****     if(q_get(i) <= min){
 673:Core/Src/main.c ****       min = q_get(i);
 674:Core/Src/main.c ****     }
 675:Core/Src/main.c ****     if(q_get(i) >= max){
 676:Core/Src/main.c ****       max = q_get(i);
 677:Core/Src/main.c ****     }
 678:Core/Src/main.c ****   }
 679:Core/Src/main.c **** 
 680:Core/Src/main.c ****   if(min == max){
 681:Core/Src/main.c ****     min-=10;
 682:Core/Src/main.c ****     max+=10;
 683:Core/Src/main.c ****   }
 684:Core/Src/main.c **** 
 685:Core/Src/main.c ****   if(min < 0 && max > 0){
 686:Core/Src/main.c ****     EPD_DrawLine(10, map(0, min, max, 110, 22), 250, map(0, min, max, 110, 22), BLACK, DOT_PIXEL_1X
 687:Core/Src/main.c ****   }
 688:Core/Src/main.c **** 
 689:Core/Src/main.c ****   uint16_t dt;
 690:Core/Src/main.c ****   switch (max - min)
 691:Core/Src/main.c ****   {
 692:Core/Src/main.c ****   case 2000 ... 4000:
 693:Core/Src/main.c ****     dt = 1000;
 694:Core/Src/main.c ****     break;
 695:Core/Src/main.c ****   case 800 ... 1999:
 696:Core/Src/main.c ****     dt = 500;
 697:Core/Src/main.c ****     break;
 698:Core/Src/main.c ****   case 400 ... 799:
 699:Core/Src/main.c ****     dt = 200;
 700:Core/Src/main.c ****     break;
 701:Core/Src/main.c ****   case 250 ... 399:
 702:Core/Src/main.c ****     dt = 100;
 703:Core/Src/main.c ****     break;
 704:Core/Src/main.c ****   case 100 ... 249:
 705:Core/Src/main.c ****     dt = 50;
 706:Core/Src/main.c ****     break;
 707:Core/Src/main.c ****   case 50 ... 99:
 708:Core/Src/main.c ****     dt = 20;
 709:Core/Src/main.c ****     break;
 710:Core/Src/main.c ****   case 25 ... 49:
 711:Core/Src/main.c ****     dt = 10;
 712:Core/Src/main.c ****     break;
 713:Core/Src/main.c ****   case 0 ... 24:
 714:Core/Src/main.c ****     dt = 5;
 715:Core/Src/main.c ****     break;
 716:Core/Src/main.c ****   default:
 717:Core/Src/main.c ****     dt = 2000;
 718:Core/Src/main.c ****     break;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 20


 719:Core/Src/main.c ****   }
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****   for (int16_t x = roundUpToDiv(min, dt); x < max+dt; x += dt){
 722:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 723:Core/Src/main.c ****     if(x == 0){st = LINE_STYLE_SOLID;}
 724:Core/Src/main.c ****     if(x > max && map(x, min, max, 110, 22) < 22){break;}
 725:Core/Src/main.c ****     EPD_DrawLine(10, map(x, min, max, 110, 22), 250, map(x, min, max, 110, 22), BLACK, DOT_PIXEL_1X
 726:Core/Src/main.c ****     char buf[15];
 727:Core/Src/main.c ****     uint8_t ln;
 728:Core/Src/main.c ****     if(x%100 == 0){
 729:Core/Src/main.c ****       ln = sprintf(buf, "%d", x/100);
 730:Core/Src/main.c ****     }
 731:Core/Src/main.c ****     else if(x%10 == 0 && max-min < 100){
 732:Core/Src/main.c ****       uint16_t rounded = (x + 5) / 10;
 733:Core/Src/main.c ****       uint8_t int_part = rounded / 10;
 734:Core/Src/main.c ****       uint8_t frac_part = rounded % 10;
 735:Core/Src/main.c ****       ln = sprintf(buf, "%d.%d", int_part, frac_part);
 736:Core/Src/main.c ****     }else if(x%5 == 0 && max-min < 10){
 737:Core/Src/main.c ****       uint8_t int_part = x / 100;
 738:Core/Src/main.c ****       uint8_t frac_part = x % 100;
 739:Core/Src/main.c ****       ln = sprintf(buf, "%d.%d", int_part, frac_part);
 740:Core/Src/main.c ****     }
 741:Core/Src/main.c ****     else{continue;}
 742:Core/Src/main.c ****     
 743:Core/Src/main.c ****     EPD_SetRotate(0);
 744:Core/Src/main.c ****     EPD_DrawString_EN(map(x, min, max, 2, 88)+8-(2*ln), 0,  buf, &Font8, WHITE, BLACK);
 745:Core/Src/main.c ****     EPD_SetRotate(90);
 746:Core/Src/main.c ****   }
 747:Core/Src/main.c **** 
 748:Core/Src/main.c ****   // Plot graf
 749:Core/Src/main.c ****   uint32_t timestamp = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR5);
 750:Core/Src/main.c ****   for (uint8_t i = 0; i < q_len(); i++){
 751:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), map(q_get(i), min, max, 110, 22), 10+((i+1)*5), map(q_get(i+1), min, max
 752:Core/Src/main.c ****   }
 753:Core/Src/main.c ****   
 754:Core/Src/main.c ****   for (int8_t i = q_len(); i > 0; i-=8){
 755:Core/Src/main.c ****     if(i == q_len()){continue;}
 756:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), 20, 10+(i*5), 112, BLACK, DOT_PIXEL_1X1, LINE_STYLE_DOTTED);
 757:Core/Src/main.c ****     uint32_t this_time = timestamp - MEASURMENTS_DELTA_SEC*(q_len()-i-1);
 758:Core/Src/main.c ****     // struct tm  ts;
 759:Core/Src/main.c ****     // ts = *localtime((time_t*) &this_time);
 760:Core/Src/main.c ****     // char t_buf[15];
 761:Core/Src/main.c ****     // sprintf(t_buf, "%.2d:%.2d", ts.tm_hour, ts.tm_min); 
 762:Core/Src/main.c ****     // EPD_DrawString_EN(10+(i*5), 114, t_buf, &Font8, WHITE, BLACK);
 763:Core/Src/main.c **** 
 764:Core/Src/main.c ****     char timest_buf[15];
 765:Core/Src/main.c ****     // sprintf(timest_buf, "%d", this_time-1740000000);
 766:Core/Src/main.c ****     // EPD_DrawString_EN(10+(i*5), 114, timest_buf, &Font8, WHITE, BLACK);
 767:Core/Src/main.c **** 
 768:Core/Src/main.c ****     uint8_t hours, minutes;
 769:Core/Src/main.c ****     timestamp_to_time(this_time, &hours, &minutes);
 770:Core/Src/main.c ****     sprintf(timest_buf, "%02d:%02d", hours, minutes);
 771:Core/Src/main.c ****     EPD_DrawString_EN(10+(i*5), 114, timest_buf, &Font8, WHITE, BLACK);
 772:Core/Src/main.c ****   }
 773:Core/Src/main.c **** 
 774:Core/Src/main.c ****   char buf[12];
 775:Core/Src/main.c ****   if(dt < 100 && dt >= 10){
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 21


 776:Core/Src/main.c ****     sprintf(buf, "%d.%d*C/div", dt/100, dt-(dt/100));
 777:Core/Src/main.c ****   }else if(dt < 10){
 778:Core/Src/main.c ****     sprintf(buf, "%d.0%d*C/div", dt/100, dt-(dt/100));
 779:Core/Src/main.c ****   }else{
 780:Core/Src/main.c ****     sprintf(buf, "%d*C/div", dt/100);
 781:Core/Src/main.c ****   }
 782:Core/Src/main.c ****   EPD_DrawString_EN(0, 0, buf, &Font12, WHITE, BLACK);
 783:Core/Src/main.c **** 
 784:Core/Src/main.c ****   mcuVoltage = 0xFFF * 1.18 / adcData;
 785:Core/Src/main.c **** 
 786:Core/Src/main.c ****   // char v_buf[20];
 787:Core/Src/main.c ****   // sprintf(v_buf, "%d %d", (uint32_t)(mcuVoltage*100), adcData);
 788:Core/Src/main.c ****   // EPD_DrawString_EN(80, 0, v_buf, &Font12, WHITE, BLACK);
 789:Core/Src/main.c ****   if(mcuVoltage < 2.25){
 790:Core/Src/main.c ****     EPD_SetRotate(0);
 791:Core/Src/main.c ****     EPD_DrawBMP(107, 95, 16, 26, dead_batt_26x16);
 792:Core/Src/main.c ****     EPD_SetRotate(90);
 793:Core/Src/main.c ****   }
 794:Core/Src/main.c **** 
 795:Core/Src/main.c **** 
 796:Core/Src/main.c ****   EPD_DrawLine(10, 112, 250, 112, BLACK, DOT_PIXEL_1X1, LINE_STYLE_SOLID);
 797:Core/Src/main.c ****   EPD_DrawLine(10, 20, 10, 112, BLACK, DOT_PIXEL_1X1, LINE_STYLE_SOLID);
 798:Core/Src/main.c **** 
 799:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 800:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 801:Core/Src/main.c **** 
 802:Core/Src/main.c ****   HAL_RTC_GetTime(&hrtc, &sTime, RTC_FORMAT_BIN);
 803:Core/Src/main.c ****   HAL_RTC_GetDate(&hrtc, &sDate, RTC_FORMAT_BIN);
 804:Core/Src/main.c **** 
 805:Core/Src/main.c ****   EPD_TIME time;
 806:Core/Src/main.c ****   time.Day = sDate.Date;
 807:Core/Src/main.c ****   time.Month = sDate.Month;
 808:Core/Src/main.c ****   time.Year = sDate.Year;
 809:Core/Src/main.c ****   EPD_DrawDate(175, 0, &time, &Font16, WHITE, BLACK);
 810:Core/Src/main.c **** 
 811:Core/Src/main.c ****   //
 812:Core/Src/main.c ****   // char timest_buf[15];
 813:Core/Src/main.c ****   // uint8_t day, month, year, hours, minutes, seconds;
 814:Core/Src/main.c ****   // sscanf(rtc_buf, "s%02d.%02d.%02d.%02d.%02d.%02d", &hours, &minutes, &seconds, &year, &month, &
 815:Core/Src/main.c ****   // sprintf(timest_buf, "%d/%d/%d",  hours, minutes, seconds);
 816:Core/Src/main.c ****   // EPD_DrawString_EN(85, 35, timest_buf, &Font12, WHITE, BLACK);
 817:Core/Src/main.c ****   //
 818:Core/Src/main.c ****   char temp_buf[10];
 819:Core/Src/main.c ****   sprintf(temp_buf, "%d.%dC", q_get(q_len()-1)/100, q_get(q_len()-1)%100);
 820:Core/Src/main.c ****   EPD_DrawString_EN(85, 0, temp_buf, &Font16, WHITE, BLACK);
 821:Core/Src/main.c ****   
 822:Core/Src/main.c ****   EPD_Display_Base(BlackImage);
 823:Core/Src/main.c ****   HAL_Delay(100);
 824:Core/Src/main.c **** }
 825:Core/Src/main.c **** 
 826:Core/Src/main.c **** long map(long x, long in_min, long in_max, long out_min, long out_max) {
 371              		.loc 1 826 72 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 4, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376              		.loc 1 826 72 is_stmt 0 view .LVU114
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 22


 377 0000 10B4     		push	{r4}
 378              		.cfi_def_cfa_offset 4
 379              		.cfi_offset 4, -4
 827:Core/Src/main.c ****   if(in_min == in_max){
 380              		.loc 1 827 3 is_stmt 1 view .LVU115
 381              		.loc 1 827 5 is_stmt 0 view .LVU116
 382 0002 9142     		cmp	r1, r2
 383 0004 0CD0     		beq	.L13
 828:Core/Src/main.c ****     return (out_max+out_min)/2;
 829:Core/Src/main.c ****   }
 830:Core/Src/main.c ****   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 384              		.loc 1 830 3 is_stmt 1 view .LVU117
 385              		.loc 1 830 13 is_stmt 0 view .LVU118
 386 0006 401A     		subs	r0, r0, r1
 387              	.LVL18:
 388              		.loc 1 830 34 view .LVU119
 389 0008 019C     		ldr	r4, [sp, #4]
 390 000a A4EB030C 		sub	ip, r4, r3
 391              		.loc 1 830 23 view .LVU120
 392 000e 0CFB00F0 		mul	r0, ip, r0
 393              		.loc 1 830 55 view .LVU121
 394 0012 521A     		subs	r2, r2, r1
 395              	.LVL19:
 396              		.loc 1 830 45 view .LVU122
 397 0014 90FBF2F0 		sdiv	r0, r0, r2
 398              		.loc 1 830 65 view .LVU123
 399 0018 1844     		add	r0, r0, r3
 400              	.LVL20:
 401              	.L9:
 831:Core/Src/main.c **** }
 402              		.loc 1 831 1 view .LVU124
 403 001a 5DF8044B 		ldr	r4, [sp], #4
 404              		.cfi_remember_state
 405              		.cfi_restore 4
 406              		.cfi_def_cfa_offset 0
 407              	.LVL21:
 408              		.loc 1 831 1 view .LVU125
 409 001e 7047     		bx	lr
 410              	.LVL22:
 411              	.L13:
 412              		.cfi_restore_state
 828:Core/Src/main.c ****     return (out_max+out_min)/2;
 413              		.loc 1 828 5 is_stmt 1 view .LVU126
 828:Core/Src/main.c ****     return (out_max+out_min)/2;
 414              		.loc 1 828 20 is_stmt 0 view .LVU127
 415 0020 019A     		ldr	r2, [sp, #4]
 416              	.LVL23:
 828:Core/Src/main.c ****     return (out_max+out_min)/2;
 417              		.loc 1 828 20 view .LVU128
 418 0022 1344     		add	r3, r3, r2
 419              	.LVL24:
 828:Core/Src/main.c ****     return (out_max+out_min)/2;
 420              		.loc 1 828 29 view .LVU129
 421 0024 03EBD373 		add	r3, r3, r3, lsr #31
 422 0028 5810     		asrs	r0, r3, #1
 423              	.LVL25:
 828:Core/Src/main.c ****     return (out_max+out_min)/2;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 23


 424              		.loc 1 828 29 view .LVU130
 425 002a F6E7     		b	.L9
 426              		.cfi_endproc
 427              	.LFE333:
 429              		.section	.text.shutdown,"ax",%progbits
 430              		.align	1
 431              		.global	shutdown
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 436              	shutdown:
 437              	.LVL26:
 438              	.LFB334:
 832:Core/Src/main.c **** 
 833:Core/Src/main.c **** void shutdown(bool skipRTC){
 439              		.loc 1 833 28 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 24
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		.loc 1 833 28 is_stmt 0 view .LVU132
 444 0000 10B5     		push	{r4, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 4, -8
 447              		.cfi_offset 14, -4
 448 0002 86B0     		sub	sp, sp, #24
 449              		.cfi_def_cfa_offset 32
 834:Core/Src/main.c ****   EPD_Sleep();
 450              		.loc 1 834 3 is_stmt 1 view .LVU133
 451 0004 FFF7FEFF 		bl	EPD_Sleep
 452              	.LVL27:
 835:Core/Src/main.c ****   EPD_Exit();
 453              		.loc 1 835 3 view .LVU134
 454 0008 FFF7FEFF 		bl	EPD_Exit
 455              	.LVL28:
 836:Core/Src/main.c **** 
 837:Core/Src/main.c ****   __HAL_RCC_SPI1_CLK_DISABLE();
 456              		.loc 1 837 3 view .LVU135
 457 000c 104A     		ldr	r2, .L16
 458 000e 136E     		ldr	r3, [r2, #96]
 459 0010 23F48053 		bic	r3, r3, #4096
 460 0014 1366     		str	r3, [r2, #96]
 838:Core/Src/main.c ****   HAL_SPI_DeInit(&hspi1);
 461              		.loc 1 838 3 view .LVU136
 462 0016 0F48     		ldr	r0, .L16+4
 463 0018 FFF7FEFF 		bl	HAL_SPI_DeInit
 464              	.LVL29:
 839:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 465              		.loc 1 839 3 view .LVU137
 466              		.loc 1 839 20 is_stmt 0 view .LVU138
 467 001c 01A9     		add	r1, sp, #4
 468 001e 0023     		movs	r3, #0
 469 0020 0193     		str	r3, [sp, #4]
 470 0022 4B60     		str	r3, [r1, #4]
 471 0024 8B60     		str	r3, [r1, #8]
 472 0026 CB60     		str	r3, [r1, #12]
 473 0028 0B61     		str	r3, [r1, #16]
 840:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1 | GPIO_PIN_7 | GPIO_PIN_5 | GPIO_PIN_4 | GPIO_PIN_3 | GPIO_PIN_6
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 24


 474              		.loc 1 840 3 is_stmt 1 view .LVU139
 475              		.loc 1 840 23 is_stmt 0 view .LVU140
 476 002a FA23     		movs	r3, #250
 477 002c 0193     		str	r3, [sp, #4]
 841:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 478              		.loc 1 841 3 is_stmt 1 view .LVU141
 479              		.loc 1 841 24 is_stmt 0 view .LVU142
 480 002e 0323     		movs	r3, #3
 481 0030 0293     		str	r3, [sp, #8]
 842:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 482              		.loc 1 842 3 is_stmt 1 view .LVU143
 843:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 483              		.loc 1 843 3 view .LVU144
 484 0032 4FF09040 		mov	r0, #1207959552
 485 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 486              	.LVL30:
 844:Core/Src/main.c **** 
 845:Core/Src/main.c ****   go_to_sleep = true;
 487              		.loc 1 845 3 view .LVU145
 488              		.loc 1 845 15 is_stmt 0 view .LVU146
 489 003a 0124     		movs	r4, #1
 490 003c 064B     		ldr	r3, .L16+8
 491 003e 1C70     		strb	r4, [r3]
 846:Core/Src/main.c **** 
 847:Core/Src/main.c ****   HAL_SuspendTick();
 492              		.loc 1 847 3 is_stmt 1 view .LVU147
 493 0040 FFF7FEFF 		bl	HAL_SuspendTick
 494              	.LVL31:
 848:Core/Src/main.c ****   HAL_PWREx_EnterSTOP2Mode(PWR_STOPENTRY_WFI);
 495              		.loc 1 848 3 view .LVU148
 496 0044 2046     		mov	r0, r4
 497 0046 FFF7FEFF 		bl	HAL_PWREx_EnterSTOP2Mode
 498              	.LVL32:
 849:Core/Src/main.c **** }
 499              		.loc 1 849 1 is_stmt 0 view .LVU149
 500 004a 06B0     		add	sp, sp, #24
 501              		.cfi_def_cfa_offset 8
 502              		@ sp needed
 503 004c 10BD     		pop	{r4, pc}
 504              	.L17:
 505 004e 00BF     		.align	2
 506              	.L16:
 507 0050 00100240 		.word	1073876992
 508 0054 00000000 		.word	hspi1
 509 0058 00000000 		.word	go_to_sleep
 510              		.cfi_endproc
 511              	.LFE334:
 513              		.section	.text.Start_Timer,"ax",%progbits
 514              		.align	1
 515              		.global	Start_Timer
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 520              	Start_Timer:
 521              	.LFB336:
 850:Core/Src/main.c **** 
 851:Core/Src/main.c **** void power_on(void){
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 25


 852:Core/Src/main.c ****   HAL_ResumeTick();
 853:Core/Src/main.c ****   SystemClock_Config();
 854:Core/Src/main.c ****   MX_GPIO_Init();
 855:Core/Src/main.c ****   MX_SPI1_Init();
 856:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 857:Core/Src/main.c ****   EPD_Init();
 858:Core/Src/main.c **** }
 859:Core/Src/main.c **** 
 860:Core/Src/main.c **** void Start_Timer(){
 522              		.loc 1 860 19 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 08B5     		push	{r3, lr}
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 3, -8
 529              		.cfi_offset 14, -4
 861:Core/Src/main.c ****   HAL_LPTIM_Counter_Start_IT(&hlptim1, 256);
 530              		.loc 1 861 3 view .LVU151
 531 0002 4FF48071 		mov	r1, #256
 532 0006 0248     		ldr	r0, .L20
 533 0008 FFF7FEFF 		bl	HAL_LPTIM_Counter_Start_IT
 534              	.LVL33:
 862:Core/Src/main.c **** }
 535              		.loc 1 862 1 is_stmt 0 view .LVU152
 536 000c 08BD     		pop	{r3, pc}
 537              	.L21:
 538 000e 00BF     		.align	2
 539              	.L20:
 540 0010 00000000 		.word	hlptim1
 541              		.cfi_endproc
 542              	.LFE336:
 544              		.section	.text.Start_Next_Interval,"ax",%progbits
 545              		.align	1
 546              		.global	Start_Next_Interval
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 551              	Start_Next_Interval:
 552              	.LFB337:
 863:Core/Src/main.c **** 
 864:Core/Src/main.c **** void Start_Next_Interval(){
 553              		.loc 1 864 27 is_stmt 1 view -0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 865:Core/Src/main.c ****   // if (ticks_left == 0){
 866:Core/Src/main.c ****   //   measure = true;
 867:Core/Src/main.c ****   //   send_usb = USB_DEVICE_IsConnected();
 868:Core/Src/main.c ****   //   power_on();
 869:Core/Src/main.c ****   //   ticks_left = MEASURMENTS_DELTA_SEC * ticks_per_sec;
 870:Core/Src/main.c ****   //   return;
 871:Core/Src/main.c ****   // }
 872:Core/Src/main.c **** 
 873:Core/Src/main.c ****   // uint32_t interval = (ticks_left > 256) ? 256 : ticks_left;
 874:Core/Src/main.c ****   // HAL_LPTIM_TimeOut_Start_IT(&hlptim1, 0xFFFF, interval);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 26


 875:Core/Src/main.c ****   // ticks_left -= interval;
 876:Core/Src/main.c **** }
 558              		.loc 1 876 1 view .LVU154
 559 0000 7047     		bx	lr
 560              		.cfi_endproc
 561              	.LFE337:
 563              		.section	.text.DS18_INIT,"ax",%progbits
 564              		.align	1
 565              		.global	DS18_INIT
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 570              	DS18_INIT:
 571              	.LFB339:
 877:Core/Src/main.c **** 
 878:Core/Src/main.c **** 
 879:Core/Src/main.c **** void HAL_LPTIM_AutoReloadMatchCallback(LPTIM_HandleTypeDef *hlptim)
 880:Core/Src/main.c **** {
 881:Core/Src/main.c ****   // HAL_GPIO_TogglePin(TEST_GPIO_Port, TEST_Pin);
 882:Core/Src/main.c ****   seconds_passed++;
 883:Core/Src/main.c **** 
 884:Core/Src/main.c ****   if (seconds_passed >= MEASURMENTS_DELTA_SEC)
 885:Core/Src/main.c ****   {
 886:Core/Src/main.c ****       measure = true;
 887:Core/Src/main.c ****       ready = false;
 888:Core/Src/main.c ****       go_to_sleep = false;
 889:Core/Src/main.c ****       send_usb = USB_DEVICE_IsConnected();
 890:Core/Src/main.c ****       seconds_passed = 0;
 891:Core/Src/main.c ****   } 
 892:Core/Src/main.c **** }
 893:Core/Src/main.c **** 
 894:Core/Src/main.c **** void DS18_INIT(){
 572              		.loc 1 894 17 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 8
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576 0000 10B5     		push	{r4, lr}
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 4, -8
 579              		.cfi_offset 14, -4
 580 0002 82B0     		sub	sp, sp, #8
 581              		.cfi_def_cfa_offset 16
 895:Core/Src/main.c ****   DS18B20_Init(&temperatureSensor, &huart2);
 582              		.loc 1 895 3 view .LVU156
 583 0004 114C     		ldr	r4, .L25
 584 0006 1249     		ldr	r1, .L25+4
 585 0008 2046     		mov	r0, r4
 586 000a FFF7FEFF 		bl	DS18B20_Init
 587              	.LVL34:
 896:Core/Src/main.c ****   DS18B20_InitializationCommand(&temperatureSensor);
 588              		.loc 1 896 3 view .LVU157
 589 000e 2046     		mov	r0, r4
 590 0010 FFF7FEFF 		bl	DS18B20_InitializationCommand
 591              	.LVL35:
 897:Core/Src/main.c ****   DS18B20_ReadRom(&temperatureSensor);
 592              		.loc 1 897 3 view .LVU158
 593 0014 2046     		mov	r0, r4
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 27


 594 0016 FFF7FEFF 		bl	DS18B20_ReadRom
 595              	.LVL36:
 898:Core/Src/main.c ****   DS18B20_ReadScratchpad(&temperatureSensor);
 596              		.loc 1 898 3 view .LVU159
 597 001a 2046     		mov	r0, r4
 598 001c FFF7FEFF 		bl	DS18B20_ReadScratchpad
 599              	.LVL37:
 899:Core/Src/main.c ****   uint8_t settings[3];
 600              		.loc 1 899 3 view .LVU160
 900:Core/Src/main.c ****   settings[0] = temperatureSensor.temperatureLimitHigh;
 601              		.loc 1 900 3 view .LVU161
 602              		.loc 1 900 34 is_stmt 0 view .LVU162
 603 0020 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 604              		.loc 1 900 15 view .LVU163
 605 0022 8DF80430 		strb	r3, [sp, #4]
 901:Core/Src/main.c ****   settings[1] = temperatureSensor.temperatureLimitLow;
 606              		.loc 1 901 3 is_stmt 1 view .LVU164
 607              		.loc 1 901 34 is_stmt 0 view .LVU165
 608 0026 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 609              		.loc 1 901 15 view .LVU166
 610 0028 8DF80530 		strb	r3, [sp, #5]
 902:Core/Src/main.c ****   settings[2] = DS18B20_12_BITS_CONFIG;
 611              		.loc 1 902 3 is_stmt 1 view .LVU167
 612              		.loc 1 902 15 is_stmt 0 view .LVU168
 613 002c 7F23     		movs	r3, #127
 614 002e 8DF80630 		strb	r3, [sp, #6]
 903:Core/Src/main.c ****   DS18B20_InitializationCommand(&temperatureSensor);
 615              		.loc 1 903 3 is_stmt 1 view .LVU169
 616 0032 2046     		mov	r0, r4
 617 0034 FFF7FEFF 		bl	DS18B20_InitializationCommand
 618              	.LVL38:
 904:Core/Src/main.c ****   DS18B20_SkipRom(&temperatureSensor);
 619              		.loc 1 904 3 view .LVU170
 620 0038 2046     		mov	r0, r4
 621 003a FFF7FEFF 		bl	DS18B20_SkipRom
 622              	.LVL39:
 905:Core/Src/main.c ****   DS18B20_WriteScratchpad(&temperatureSensor, settings);
 623              		.loc 1 905 3 view .LVU171
 624 003e 01A9     		add	r1, sp, #4
 625 0040 2046     		mov	r0, r4
 626 0042 FFF7FEFF 		bl	DS18B20_WriteScratchpad
 627              	.LVL40:
 906:Core/Src/main.c **** }
 628              		.loc 1 906 1 is_stmt 0 view .LVU172
 629 0046 02B0     		add	sp, sp, #8
 630              		.cfi_def_cfa_offset 8
 631              		@ sp needed
 632 0048 10BD     		pop	{r4, pc}
 633              	.L26:
 634 004a 00BF     		.align	2
 635              	.L25:
 636 004c 00000000 		.word	temperatureSensor
 637 0050 00000000 		.word	huart2
 638              		.cfi_endproc
 639              	.LFE339:
 641              		.section	.text.DS18_GET,"ax",%progbits
 642              		.align	1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 28


 643              		.global	DS18_GET
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 648              	DS18_GET:
 649              	.LFB340:
 907:Core/Src/main.c **** 
 908:Core/Src/main.c **** float DS18_GET(){
 650              		.loc 1 908 17 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654 0000 10B5     		push	{r4, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 4, -8
 657              		.cfi_offset 14, -4
 909:Core/Src/main.c **** 	DS18B20_InitializationCommand(&temperatureSensor);
 658              		.loc 1 909 2 view .LVU174
 659 0002 0B4C     		ldr	r4, .L29
 660 0004 2046     		mov	r0, r4
 661 0006 FFF7FEFF 		bl	DS18B20_InitializationCommand
 662              	.LVL41:
 910:Core/Src/main.c **** 	DS18B20_SkipRom(&temperatureSensor);
 663              		.loc 1 910 2 view .LVU175
 664 000a 2046     		mov	r0, r4
 665 000c FFF7FEFF 		bl	DS18B20_SkipRom
 666              	.LVL42:
 911:Core/Src/main.c **** 	DS18B20_ConvertT(&temperatureSensor, DS18B20_DATA);
 667              		.loc 1 911 2 view .LVU176
 668 0010 0121     		movs	r1, #1
 669 0012 2046     		mov	r0, r4
 670 0014 FFF7FEFF 		bl	DS18B20_ConvertT
 671              	.LVL43:
 912:Core/Src/main.c **** 	DS18B20_InitializationCommand(&temperatureSensor);
 672              		.loc 1 912 2 view .LVU177
 673 0018 2046     		mov	r0, r4
 674 001a FFF7FEFF 		bl	DS18B20_InitializationCommand
 675              	.LVL44:
 913:Core/Src/main.c **** 	DS18B20_SkipRom(&temperatureSensor);
 676              		.loc 1 913 2 view .LVU178
 677 001e 2046     		mov	r0, r4
 678 0020 FFF7FEFF 		bl	DS18B20_SkipRom
 679              	.LVL45:
 914:Core/Src/main.c **** 	DS18B20_ReadScratchpad(&temperatureSensor);
 680              		.loc 1 914 2 view .LVU179
 681 0024 2046     		mov	r0, r4
 682 0026 FFF7FEFF 		bl	DS18B20_ReadScratchpad
 683              	.LVL46:
 915:Core/Src/main.c **** 	return temperatureSensor.temperature;
 684              		.loc 1 915 2 view .LVU180
 916:Core/Src/main.c **** }
 685              		.loc 1 916 1 is_stmt 0 view .LVU181
 686 002a 94ED050A 		vldr.32	s0, [r4, #20]
 687 002e 10BD     		pop	{r4, pc}
 688              	.L30:
 689              		.align	2
 690              	.L29:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 29


 691 0030 00000000 		.word	temperatureSensor
 692              		.cfi_endproc
 693              	.LFE340:
 695              		.section	.rodata.set_time.str1.4,"aMS",%progbits,1
 696              		.align	2
 697              	.LC0:
 698 0000 630C1F17 		.ascii	"c\014\037\027;\000"
 698      3B00
 699              		.section	.text.set_time,"ax",%progbits
 700              		.align	1
 701              		.global	set_time
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 706              	set_time:
 707              	.LFB341:
 917:Core/Src/main.c **** 
 918:Core/Src/main.c **** void set_time(){
 708              		.loc 1 918 16 is_stmt 1 view -0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 112
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 713              		.cfi_def_cfa_offset 24
 714              		.cfi_offset 4, -24
 715              		.cfi_offset 5, -20
 716              		.cfi_offset 6, -16
 717              		.cfi_offset 7, -12
 718              		.cfi_offset 8, -8
 719              		.cfi_offset 14, -4
 720 0004 9CB0     		sub	sp, sp, #112
 721              		.cfi_def_cfa_offset 136
 919:Core/Src/main.c ****   bool flag = true; // true ONLY FOR DEBUG!!!
 722              		.loc 1 919 3 view .LVU183
 723              	.LVL47:
 920:Core/Src/main.c ****   Button bt_ok = {GPIOA, GPIO_PIN_0, TYPE_LOW_PULL};
 724              		.loc 1 920 3 view .LVU184
 725              		.loc 1 920 10 is_stmt 0 view .LVU185
 726 0006 17AF     		add	r7, sp, #92
 727 0008 0024     		movs	r4, #0
 728 000a 1794     		str	r4, [sp, #92]
 729 000c 1894     		str	r4, [sp, #96]
 730 000e 1994     		str	r4, [sp, #100]
 731 0010 1A94     		str	r4, [sp, #104]
 732 0012 1B94     		str	r4, [sp, #108]
 733 0014 4FF09043 		mov	r3, #1207959552
 734 0018 1793     		str	r3, [sp, #92]
 735 001a 4FF00108 		mov	r8, #1
 736 001e ADF86080 		strh	r8, [sp, #96]	@ movhi
 921:Core/Src/main.c ****   Button bt_down = {GPIOA, GPIO_PIN_8, TYPE_LOW_PULL};
 737              		.loc 1 921 3 is_stmt 1 view .LVU186
 738              		.loc 1 921 10 is_stmt 0 view .LVU187
 739 0022 12AE     		add	r6, sp, #72
 740 0024 1294     		str	r4, [sp, #72]
 741 0026 1394     		str	r4, [sp, #76]
 742 0028 1494     		str	r4, [sp, #80]
 743 002a 1594     		str	r4, [sp, #84]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 30


 744 002c 1694     		str	r4, [sp, #88]
 745 002e 1293     		str	r3, [sp, #72]
 746 0030 4FF48072 		mov	r2, #256
 747 0034 ADF84C20 		strh	r2, [sp, #76]	@ movhi
 922:Core/Src/main.c ****   Button bt_up = {GPIOA, GPIO_PIN_9, TYPE_LOW_PULL};
 748              		.loc 1 922 3 is_stmt 1 view .LVU188
 749              		.loc 1 922 10 is_stmt 0 view .LVU189
 750 0038 0DAD     		add	r5, sp, #52
 751 003a 0D94     		str	r4, [sp, #52]
 752 003c 0E94     		str	r4, [sp, #56]
 753 003e 0F94     		str	r4, [sp, #60]
 754 0040 1094     		str	r4, [sp, #64]
 755 0042 1194     		str	r4, [sp, #68]
 756 0044 0D93     		str	r3, [sp, #52]
 757 0046 4FF40073 		mov	r3, #512
 758 004a ADF83830 		strh	r3, [sp, #56]	@ movhi
 923:Core/Src/main.c **** 
 924:Core/Src/main.c ****   int8_t d_time[5] = {25, 03, 24, 12, 00};
 759              		.loc 1 924 3 is_stmt 1 view .LVU190
 760              		.loc 1 924 10 is_stmt 0 view .LVU191
 761 004e 234B     		ldr	r3, .L33
 762 0050 0B93     		str	r3, [sp, #44]
 763 0052 8DF83040 		strb	r4, [sp, #48]
 925:Core/Src/main.c ****   uint8_t up_lim[5] = {99, 12, 31, 23, 59};
 764              		.loc 1 925 3 is_stmt 1 view .LVU192
 765              		.loc 1 925 11 is_stmt 0 view .LVU193
 766 0056 224B     		ldr	r3, .L33+4
 767 0058 93E80300 		ldm	r3, {r0, r1}
 768 005c 0990     		str	r0, [sp, #36]
 769 005e 8DF82810 		strb	r1, [sp, #40]
 926:Core/Src/main.c ****   uint8_t down_lim[5] = {0, 1, 1, 0, 0};
 770              		.loc 1 926 3 is_stmt 1 view .LVU194
 771              		.loc 1 926 11 is_stmt 0 view .LVU195
 772 0062 204B     		ldr	r3, .L33+8
 773 0064 0793     		str	r3, [sp, #28]
 774 0066 8DF82040 		strb	r4, [sp, #32]
 927:Core/Src/main.c ****   uint8_t edit_ptr = 0;
 775              		.loc 1 927 3 is_stmt 1 view .LVU196
 776              	.LVL48:
 928:Core/Src/main.c **** 
 929:Core/Src/main.c ****   uint32_t upd_tmr = HAL_GetTick();
 777              		.loc 1 929 3 view .LVU197
 778              		.loc 1 929 22 is_stmt 0 view .LVU198
 779 006a FFF7FEFF 		bl	HAL_GetTick
 780              	.LVL49:
 930:Core/Src/main.c ****   bool edited;
 781              		.loc 1 930 3 is_stmt 1 view .LVU199
 931:Core/Src/main.c ****   // FIX THIS
 932:Core/Src/main.c ****   tick(&bt_ok);
 782              		.loc 1 932 3 view .LVU200
 783 006e 3846     		mov	r0, r7
 784 0070 FFF7FEFF 		bl	tick
 785              	.LVL50:
 933:Core/Src/main.c ****   tick(&bt_up);
 786              		.loc 1 933 3 view .LVU201
 787 0074 2846     		mov	r0, r5
 788 0076 FFF7FEFF 		bl	tick
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 31


 789              	.LVL51:
 934:Core/Src/main.c ****   tick(&bt_down);
 790              		.loc 1 934 3 view .LVU202
 791 007a 3046     		mov	r0, r6
 792 007c FFF7FEFF 		bl	tick
 793              	.LVL52:
 935:Core/Src/main.c ****   isClicked(&bt_ok);
 794              		.loc 1 935 3 view .LVU203
 795 0080 3846     		mov	r0, r7
 796 0082 FFF7FEFF 		bl	isClicked
 797              	.LVL53:
 936:Core/Src/main.c ****   isClicked(&bt_down);
 798              		.loc 1 936 3 view .LVU204
 799 0086 3046     		mov	r0, r6
 800 0088 FFF7FEFF 		bl	isClicked
 801              	.LVL54:
 937:Core/Src/main.c ****   isClicked(&bt_up);
 802              		.loc 1 937 3 view .LVU205
 803 008c 2846     		mov	r0, r5
 804 008e FFF7FEFF 		bl	isClicked
 805              	.LVL55:
 938:Core/Src/main.c ****   /*                 */
 939:Core/Src/main.c ****   while(!flag){
 806              		.loc 1 939 3 view .LVU206
 807              		.loc 1 939 9 view .LVU207
 940:Core/Src/main.c ****     EPD_NewImage(BlackImage, EPD_WIDTH, EPD_HEIGHT, 90, WHITE);  	
 941:Core/Src/main.c ****     EPD_SelectImage(BlackImage);
 942:Core/Src/main.c ****     EPD_Clear(WHITE);
 943:Core/Src/main.c **** 
 944:Core/Src/main.c ****     EPD_TIME datetime;
 945:Core/Src/main.c ****     datetime.Day = d_time[2];
 946:Core/Src/main.c ****     datetime.Month = d_time[1];
 947:Core/Src/main.c ****     datetime.Year = d_time[0];
 948:Core/Src/main.c ****     datetime.Hour = d_time[3];
 949:Core/Src/main.c ****     datetime.Min = d_time[4];
 950:Core/Src/main.c **** 
 951:Core/Src/main.c ****     EPD_DrawDate(64, 32, &datetime, &Font24, WHITE, BLACK);
 952:Core/Src/main.c ****     EPD_DrawTime(86, 64, &datetime, &Font24, WHITE, BLACK);
 953:Core/Src/main.c ****     
 954:Core/Src/main.c ****     if(edit_ptr < 3){
 955:Core/Src/main.c ****       EPD_DrawLine(150-(edit_ptr*42), 52, 150-(edit_ptr*42)+30, 52, BLACK, 2, LINE_STYLE_SOLID);
 956:Core/Src/main.c ****     }else{
 957:Core/Src/main.c ****       EPD_DrawLine(-38+(edit_ptr*42), 84, -38+(edit_ptr*42)+30, 84, BLACK, 2, LINE_STYLE_SOLID);
 958:Core/Src/main.c ****     } 
 959:Core/Src/main.c **** 
 960:Core/Src/main.c ****     EPD_DrawChar(26, 0, '+', &Font16, BLACK, WHITE);
 961:Core/Src/main.c ****     EPD_DrawChar(80, 0, '-', &Font16, BLACK, WHITE);
 962:Core/Src/main.c ****     EPD_DrawString_EN(124, 0, "OK", &Font16, WHITE, BLACK);
 963:Core/Src/main.c ****     EPD_Display_Base(BlackImage);
 964:Core/Src/main.c **** 
 965:Core/Src/main.c ****     edited = false;
 966:Core/Src/main.c ****     for(;;){
 967:Core/Src/main.c **** 
 968:Core/Src/main.c ****       if(set_rtc){
 969:Core/Src/main.c ****         syncRTC();
 970:Core/Src/main.c ****         return;
 971:Core/Src/main.c ****       }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 32


 972:Core/Src/main.c **** 
 973:Core/Src/main.c ****       tick(&bt_ok);
 974:Core/Src/main.c ****       tick(&bt_up);
 975:Core/Src/main.c ****       tick(&bt_down);
 976:Core/Src/main.c ****       if(isClicked(&bt_ok)){
 977:Core/Src/main.c ****         edit_ptr++;
 978:Core/Src/main.c ****         if(edit_ptr == 5){
 979:Core/Src/main.c ****           flag = true;
 980:Core/Src/main.c ****         }
 981:Core/Src/main.c ****         break;
 982:Core/Src/main.c ****       }
 983:Core/Src/main.c ****       if(isClicked(&bt_up)){
 984:Core/Src/main.c ****         d_time[edit_ptr]++;
 985:Core/Src/main.c ****         if(d_time[edit_ptr]> up_lim[edit_ptr]){
 986:Core/Src/main.c ****           d_time[edit_ptr] = down_lim[edit_ptr];
 987:Core/Src/main.c ****         }
 988:Core/Src/main.c ****         edited = true;
 989:Core/Src/main.c ****         upd_tmr = HAL_GetTick();
 990:Core/Src/main.c ****       }
 991:Core/Src/main.c ****       if(isClicked(&bt_down)){
 992:Core/Src/main.c ****         d_time[edit_ptr]--;
 993:Core/Src/main.c ****         if(d_time[edit_ptr]< down_lim[edit_ptr]){
 994:Core/Src/main.c ****           d_time[edit_ptr] = up_lim[edit_ptr];
 995:Core/Src/main.c ****         }
 996:Core/Src/main.c ****         edited = true;
 997:Core/Src/main.c ****         upd_tmr = HAL_GetTick();
 998:Core/Src/main.c ****       }
 999:Core/Src/main.c **** 
1000:Core/Src/main.c ****       if(HAL_GetTick() - upd_tmr > 1000 && edited){
1001:Core/Src/main.c ****         break;
1002:Core/Src/main.c ****       }
1003:Core/Src/main.c ****     }
1004:Core/Src/main.c ****   }
1005:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 808              		.loc 1 1005 3 view .LVU208
 809              		.loc 1 1005 19 is_stmt 0 view .LVU209
 810 0092 02AD     		add	r5, sp, #8
 811 0094 0294     		str	r4, [sp, #8]
 812 0096 0394     		str	r4, [sp, #12]
 813 0098 0494     		str	r4, [sp, #16]
 814 009a 0594     		str	r4, [sp, #20]
 815 009c 0694     		str	r4, [sp, #24]
1006:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 816              		.loc 1 1006 3 is_stmt 1 view .LVU210
 817              		.loc 1 1006 19 is_stmt 0 view .LVU211
 818 009e 0194     		str	r4, [sp, #4]
1007:Core/Src/main.c **** 
1008:Core/Src/main.c ****   sTime.Hours = d_time[3];
 819              		.loc 1 1008 3 is_stmt 1 view .LVU212
 820              		.loc 1 1008 15 is_stmt 0 view .LVU213
 821 00a0 0C23     		movs	r3, #12
 822 00a2 8DF80830 		strb	r3, [sp, #8]
1009:Core/Src/main.c ****   sTime.Minutes = d_time[4];
 823              		.loc 1 1009 3 is_stmt 1 view .LVU214
1010:Core/Src/main.c ****   sDate.Year = d_time[0];
 824              		.loc 1 1010 3 view .LVU215
 825              		.loc 1 1010 14 is_stmt 0 view .LVU216
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 33


 826 00a6 1923     		movs	r3, #25
 827 00a8 8DF80730 		strb	r3, [sp, #7]
1011:Core/Src/main.c ****   sDate.Month = d_time[1];
 828              		.loc 1 1011 3 is_stmt 1 view .LVU217
 829              		.loc 1 1011 15 is_stmt 0 view .LVU218
 830 00ac 0323     		movs	r3, #3
 831 00ae 8DF80530 		strb	r3, [sp, #5]
1012:Core/Src/main.c ****   sDate.Date = d_time[2];
 832              		.loc 1 1012 3 is_stmt 1 view .LVU219
 833              		.loc 1 1012 14 is_stmt 0 view .LVU220
 834 00b2 1823     		movs	r3, #24
 835 00b4 8DF80630 		strb	r3, [sp, #6]
1013:Core/Src/main.c ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 836              		.loc 1 1013 3 is_stmt 1 view .LVU221
 837              		.loc 1 1013 17 is_stmt 0 view .LVU222
 838 00b8 8DF80480 		strb	r8, [sp, #4]
1014:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 839              		.loc 1 1014 3 is_stmt 1 view .LVU223
1015:Core/Src/main.c **** 	sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 840              		.loc 1 1015 2 view .LVU224
1016:Core/Src/main.c **** 
1017:Core/Src/main.c ****   HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BIN);
 841              		.loc 1 1017 3 view .LVU225
 842 00bc 0A4E     		ldr	r6, .L33+12
 843 00be 2246     		mov	r2, r4
 844 00c0 01A9     		add	r1, sp, #4
 845 00c2 3046     		mov	r0, r6
 846 00c4 FFF7FEFF 		bl	HAL_RTC_SetDate
 847              	.LVL56:
1018:Core/Src/main.c ****   HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN);
 848              		.loc 1 1018 3 view .LVU226
 849 00c8 2246     		mov	r2, r4
 850 00ca 2946     		mov	r1, r5
 851 00cc 3046     		mov	r0, r6
 852 00ce FFF7FEFF 		bl	HAL_RTC_SetTime
 853              	.LVL57:
1019:Core/Src/main.c **** 
1020:Core/Src/main.c ****   Start_Timer();
 854              		.loc 1 1020 3 view .LVU227
 855 00d2 FFF7FEFF 		bl	Start_Timer
 856              	.LVL58:
1021:Core/Src/main.c **** }
 857              		.loc 1 1021 1 is_stmt 0 view .LVU228
 858 00d6 1CB0     		add	sp, sp, #112
 859              		.cfi_def_cfa_offset 24
 860              		@ sp needed
 861 00d8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 862              	.L34:
 863              		.align	2
 864              	.L33:
 865 00dc 1903180C 		.word	202900249
 866 00e0 00000000 		.word	.LC0
 867 00e4 00010100 		.word	65792
 868 00e8 00000000 		.word	hrtc
 869              		.cfi_endproc
 870              	.LFE341:
 872              		.section	.text.timestamp_to_time,"ax",%progbits
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 34


 873              		.align	1
 874              		.global	timestamp_to_time
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 879              	timestamp_to_time:
 880              	.LVL59:
 881              	.LFB343:
1022:Core/Src/main.c **** 
1023:Core/Src/main.c **** void get_data(bool goto_sleep){
1024:Core/Src/main.c ****   if(goto_sleep){
1025:Core/Src/main.c ****     power_on();
1026:Core/Src/main.c ****   }
1027:Core/Src/main.c **** 
1028:Core/Src/main.c ****   q_load();
1029:Core/Src/main.c ****   q_push(DS18_GET()*100);
1030:Core/Src/main.c ****   // q_push(DS18_GET()*100);
1031:Core/Src/main.c ****   // q_push(DS18_GET()*100);
1032:Core/Src/main.c ****   // q_push(DS18_GET()*100);
1033:Core/Src/main.c ****   plot();
1034:Core/Src/main.c ****   q_save();
1035:Core/Src/main.c **** 
1036:Core/Src/main.c ****   if(goto_sleep){
1037:Core/Src/main.c ****     shutdown(false);
1038:Core/Src/main.c ****   }
1039:Core/Src/main.c **** }
1040:Core/Src/main.c **** 
1041:Core/Src/main.c **** void timestamp_to_time(uint32_t timestamp, uint8_t* hours, uint8_t* minutes) {
 882              		.loc 1 1041 78 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 887              		.loc 1 1041 78 is_stmt 0 view .LVU230
 888 0000 10B4     		push	{r4}
 889              		.cfi_def_cfa_offset 4
 890              		.cfi_offset 4, -4
1042:Core/Src/main.c ****   uint32_t seconds_in_day = 86400;
 891              		.loc 1 1042 3 is_stmt 1 view .LVU231
 892              	.LVL60:
1043:Core/Src/main.c ****   uint32_t seconds_in_hour = 3600;
 893              		.loc 1 1043 3 view .LVU232
1044:Core/Src/main.c ****   uint32_t seconds_in_minute = 60;
 894              		.loc 1 1044 3 view .LVU233
1045:Core/Src/main.c **** 
1046:Core/Src/main.c ****   // Get seconds since midnight (UTC)
1047:Core/Src/main.c ****   uint32_t time_of_day = timestamp % seconds_in_day;
 895              		.loc 1 1047 3 view .LVU234
 896              		.loc 1 1047 12 is_stmt 0 view .LVU235
 897 0002 0C4B     		ldr	r3, .L37
 898 0004 A3FB0043 		umull	r4, r3, r3, r0
 899 0008 1B0C     		lsrs	r3, r3, #16
 900 000a 0B4C     		ldr	r4, .L37+4
 901 000c 04FB1303 		mls	r3, r4, r3, r0
 902              	.LVL61:
1048:Core/Src/main.c **** 
1049:Core/Src/main.c ****   *hours = time_of_day / seconds_in_hour;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 35


 903              		.loc 1 1049 3 is_stmt 1 view .LVU236
 904              		.loc 1 1049 24 is_stmt 0 view .LVU237
 905 0010 0A48     		ldr	r0, .L37+8
 906              	.LVL62:
 907              		.loc 1 1049 24 view .LVU238
 908 0012 A0FB0340 		umull	r4, r0, r0, r3
 909 0016 C00A     		lsrs	r0, r0, #11
 910              		.loc 1 1049 10 view .LVU239
 911 0018 0870     		strb	r0, [r1]
1050:Core/Src/main.c ****   *minutes = (time_of_day % seconds_in_hour) / seconds_in_minute;
 912              		.loc 1 1050 3 is_stmt 1 view .LVU240
 913              		.loc 1 1050 27 is_stmt 0 view .LVU241
 914 001a 4FF46161 		mov	r1, #3600
 915              	.LVL63:
 916              		.loc 1 1050 27 view .LVU242
 917 001e 01FB1033 		mls	r3, r1, r0, r3
 918              	.LVL64:
 919              		.loc 1 1050 46 view .LVU243
 920 0022 0749     		ldr	r1, .L37+12
 921 0024 A1FB0313 		umull	r1, r3, r1, r3
 922 0028 5B09     		lsrs	r3, r3, #5
 923              		.loc 1 1050 12 view .LVU244
 924 002a 1370     		strb	r3, [r2]
1051:Core/Src/main.c **** }
 925              		.loc 1 1051 1 view .LVU245
 926 002c 5DF8044B 		ldr	r4, [sp], #4
 927              		.cfi_restore 4
 928              		.cfi_def_cfa_offset 0
 929 0030 7047     		bx	lr
 930              	.L38:
 931 0032 00BF     		.align	2
 932              	.L37:
 933 0034 07452EC2 		.word	-1037155065
 934 0038 80510100 		.word	86400
 935 003c C5B3A291 		.word	-1851608123
 936 0040 89888888 		.word	-2004318071
 937              		.cfi_endproc
 938              	.LFE343:
 940              		.section	.rodata.plot.str1.4,"aMS",%progbits,1
 941              		.align	2
 942              	.LC1:
 943 0000 256400   		.ascii	"%d\000"
 944 0003 00       		.align	2
 945              	.LC2:
 946 0004 25642E25 		.ascii	"%d.%d\000"
 946      6400
 947 000a 0000     		.align	2
 948              	.LC3:
 949 000c 25303264 		.ascii	"%02d:%02d\000"
 949      3A253032 
 949      6400
 950 0016 0000     		.align	2
 951              	.LC4:
 952 0018 25642E25 		.ascii	"%d.%d*C/div\000"
 952      642A432F 
 952      64697600 
 953              		.align	2
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 36


 954              	.LC5:
 955 0024 25642E30 		.ascii	"%d.0%d*C/div\000"
 955      25642A43 
 955      2F646976 
 955      00
 956 0031 000000   		.align	2
 957              	.LC6:
 958 0034 25642A43 		.ascii	"%d*C/div\000"
 958      2F646976 
 958      00
 959 003d 000000   		.align	2
 960              	.LC7:
 961 0040 25642E25 		.ascii	"%d.%dC\000"
 961      644300
 962              		.section	.text.plot,"ax",%progbits
 963              		.align	1
 964              		.global	plot
 965              		.syntax unified
 966              		.thumb
 967              		.thumb_func
 969              	plot:
 970              	.LFB332:
 664:Core/Src/main.c ****   EPD_NewImage(BlackImage, EPD_WIDTH, EPD_HEIGHT, 90, WHITE);  	
 971              		.loc 1 664 12 is_stmt 1 view -0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 88
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 976              		.cfi_def_cfa_offset 36
 977              		.cfi_offset 4, -36
 978              		.cfi_offset 5, -32
 979              		.cfi_offset 6, -28
 980              		.cfi_offset 7, -24
 981              		.cfi_offset 8, -20
 982              		.cfi_offset 9, -16
 983              		.cfi_offset 10, -12
 984              		.cfi_offset 11, -8
 985              		.cfi_offset 14, -4
 986 0004 9BB0     		sub	sp, sp, #108
 987              		.cfi_def_cfa_offset 144
 665:Core/Src/main.c ****   EPD_SelectImage(BlackImage);
 988              		.loc 1 665 3 view .LVU247
 989 0006 B54D     		ldr	r5, .L100
 990 0008 FF24     		movs	r4, #255
 991 000a 0094     		str	r4, [sp]
 992 000c 5A23     		movs	r3, #90
 993 000e FA22     		movs	r2, #250
 994 0010 7A21     		movs	r1, #122
 995 0012 2846     		mov	r0, r5
 996 0014 FFF7FEFF 		bl	EPD_NewImage
 997              	.LVL65:
 666:Core/Src/main.c ****   EPD_Clear(WHITE);
 998              		.loc 1 666 3 view .LVU248
 999 0018 2846     		mov	r0, r5
 1000 001a FFF7FEFF 		bl	EPD_SelectImage
 1001              	.LVL66:
 667:Core/Src/main.c ****   int16_t min = q_get(0);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 37


 1002              		.loc 1 667 3 view .LVU249
 1003 001e 2046     		mov	r0, r4
 1004 0020 FFF7FEFF 		bl	EPD_Clear
 1005              	.LVL67:
 668:Core/Src/main.c ****   int16_t max = q_get(0);
 1006              		.loc 1 668 3 view .LVU250
 668:Core/Src/main.c ****   int16_t max = q_get(0);
 1007              		.loc 1 668 17 is_stmt 0 view .LVU251
 1008 0024 0020     		movs	r0, #0
 1009 0026 FFF7FEFF 		bl	q_get
 1010              	.LVL68:
 1011 002a 0546     		mov	r5, r0
 1012              	.LVL69:
 669:Core/Src/main.c **** 
 1013              		.loc 1 669 3 is_stmt 1 view .LVU252
 669:Core/Src/main.c **** 
 1014              		.loc 1 669 17 is_stmt 0 view .LVU253
 1015 002c 0020     		movs	r0, #0
 1016 002e FFF7FEFF 		bl	q_get
 1017              	.LVL70:
 1018 0032 0746     		mov	r7, r0
 1019              	.LVL71:
 671:Core/Src/main.c ****     if(q_get(i) <= min){
 1020              		.loc 1 671 3 is_stmt 1 view .LVU254
 1021              	.LBB9:
 671:Core/Src/main.c ****     if(q_get(i) <= min){
 1022              		.loc 1 671 8 view .LVU255
 671:Core/Src/main.c ****     if(q_get(i) <= min){
 1023              		.loc 1 671 16 is_stmt 0 view .LVU256
 1024 0034 0024     		movs	r4, #0
 671:Core/Src/main.c ****     if(q_get(i) <= min){
 1025              		.loc 1 671 3 view .LVU257
 1026 0036 06E0     		b	.L40
 1027              	.LVL72:
 1028              	.L87:
 673:Core/Src/main.c ****     }
 1029              		.loc 1 673 7 is_stmt 1 view .LVU258
 673:Core/Src/main.c ****     }
 1030              		.loc 1 673 13 is_stmt 0 view .LVU259
 1031 0038 2046     		mov	r0, r4
 1032 003a FFF7FEFF 		bl	q_get
 1033              	.LVL73:
 1034 003e 0546     		mov	r5, r0
 1035              	.LVL74:
 673:Core/Src/main.c ****     }
 1036              		.loc 1 673 13 view .LVU260
 1037 0040 0AE0     		b	.L41
 1038              	.LVL75:
 1039              	.L42:
 671:Core/Src/main.c ****     if(q_get(i) <= min){
 1040              		.loc 1 671 37 is_stmt 1 discriminator 2 view .LVU261
 1041 0042 0134     		adds	r4, r4, #1
 1042              	.LVL76:
 671:Core/Src/main.c ****     if(q_get(i) <= min){
 1043              		.loc 1 671 37 is_stmt 0 discriminator 2 view .LVU262
 1044 0044 E4B2     		uxtb	r4, r4
 1045              	.LVL77:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 38


 1046              	.L40:
 671:Core/Src/main.c ****     if(q_get(i) <= min){
 1047              		.loc 1 671 25 is_stmt 1 discriminator 1 view .LVU263
 671:Core/Src/main.c ****     if(q_get(i) <= min){
 1048              		.loc 1 671 27 is_stmt 0 discriminator 1 view .LVU264
 1049 0046 FFF7FEFF 		bl	q_len
 1050              	.LVL78:
 671:Core/Src/main.c ****     if(q_get(i) <= min){
 1051              		.loc 1 671 25 discriminator 1 view .LVU265
 1052 004a 8442     		cmp	r4, r0
 1053 004c 0ED2     		bcs	.L86
 672:Core/Src/main.c ****       min = q_get(i);
 1054              		.loc 1 672 5 is_stmt 1 view .LVU266
 672:Core/Src/main.c ****       min = q_get(i);
 1055              		.loc 1 672 8 is_stmt 0 view .LVU267
 1056 004e 2046     		mov	r0, r4
 1057 0050 FFF7FEFF 		bl	q_get
 1058              	.LVL79:
 672:Core/Src/main.c ****       min = q_get(i);
 1059              		.loc 1 672 7 discriminator 1 view .LVU268
 1060 0054 A842     		cmp	r0, r5
 1061 0056 EFDD     		ble	.L87
 1062              	.LVL80:
 1063              	.L41:
 675:Core/Src/main.c ****       max = q_get(i);
 1064              		.loc 1 675 5 is_stmt 1 view .LVU269
 675:Core/Src/main.c ****       max = q_get(i);
 1065              		.loc 1 675 8 is_stmt 0 view .LVU270
 1066 0058 2046     		mov	r0, r4
 1067 005a FFF7FEFF 		bl	q_get
 1068              	.LVL81:
 675:Core/Src/main.c ****       max = q_get(i);
 1069              		.loc 1 675 7 discriminator 1 view .LVU271
 1070 005e B842     		cmp	r0, r7
 1071 0060 EFDB     		blt	.L42
 676:Core/Src/main.c ****     }
 1072              		.loc 1 676 7 is_stmt 1 view .LVU272
 676:Core/Src/main.c ****     }
 1073              		.loc 1 676 13 is_stmt 0 view .LVU273
 1074 0062 2046     		mov	r0, r4
 1075 0064 FFF7FEFF 		bl	q_get
 1076              	.LVL82:
 1077 0068 0746     		mov	r7, r0
 1078              	.LVL83:
 676:Core/Src/main.c ****     }
 1079              		.loc 1 676 13 view .LVU274
 1080 006a EAE7     		b	.L42
 1081              	.LVL84:
 1082              	.L86:
 676:Core/Src/main.c ****     }
 1083              		.loc 1 676 13 view .LVU275
 1084              	.LBE9:
 680:Core/Src/main.c ****     min-=10;
 1085              		.loc 1 680 3 is_stmt 1 view .LVU276
 680:Core/Src/main.c ****     min-=10;
 1086              		.loc 1 680 5 is_stmt 0 view .LVU277
 1087 006c BD42     		cmp	r5, r7
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 39


 1088 006e 1AD0     		beq	.L88
 1089              	.LVL85:
 1090              	.L44:
 685:Core/Src/main.c ****     EPD_DrawLine(10, map(0, min, max, 110, 22), 250, map(0, min, max, 110, 22), BLACK, DOT_PIXEL_1X
 1091              		.loc 1 685 3 is_stmt 1 view .LVU278
 685:Core/Src/main.c ****     EPD_DrawLine(10, map(0, min, max, 110, 22), 250, map(0, min, max, 110, 22), BLACK, DOT_PIXEL_1X
 1092              		.loc 1 685 5 is_stmt 0 view .LVU279
 1093 0070 002D     		cmp	r5, #0
 1094 0072 1DDB     		blt	.L89
 1095              	.L45:
 689:Core/Src/main.c ****   switch (max - min)
 1096              		.loc 1 689 3 is_stmt 1 view .LVU280
 690:Core/Src/main.c ****   {
 1097              		.loc 1 690 3 view .LVU281
 690:Core/Src/main.c ****   {
 1098              		.loc 1 690 15 is_stmt 0 view .LVU282
 1099 0074 3E46     		mov	r6, r7
 1100 0076 A846     		mov	r8, r5
 1101 0078 A7EB050C 		sub	ip, r7, r5
 690:Core/Src/main.c ****   {
 1102              		.loc 1 690 3 view .LVU283
 1103 007c BCF5C87F 		cmp	ip, #400
 1104 0080 40DA     		bge	.L46
 1105 0082 BCF1FA0F 		cmp	ip, #250
 1106 0086 59DA     		bge	.L75
 1107 0088 BCF1630F 		cmp	ip, #99
 1108 008c 30DC     		bgt	.L48
 1109 008e BCF1320F 		cmp	ip, #50
 1110 0092 63DA     		bge	.L76
 1111 0094 BCF1180F 		cmp	ip, #24
 1112 0098 20DC     		bgt	.L49
 1113 009a BCF1000F 		cmp	ip, #0
 1114 009e 60DB     		blt	.L77
 714:Core/Src/main.c ****     break;
 1115              		.loc 1 714 8 view .LVU284
 1116 00a0 4FF00509 		mov	r9, #5
 1117 00a4 4CE0     		b	.L47
 1118              	.L88:
 681:Core/Src/main.c ****     max+=10;
 1119              		.loc 1 681 5 is_stmt 1 view .LVU285
 681:Core/Src/main.c ****     max+=10;
 1120              		.loc 1 681 8 is_stmt 0 view .LVU286
 1121 00a6 0A3D     		subs	r5, r5, #10
 1122              	.LVL86:
 681:Core/Src/main.c ****     max+=10;
 1123              		.loc 1 681 8 view .LVU287
 1124 00a8 2DB2     		sxth	r5, r5
 1125              	.LVL87:
 682:Core/Src/main.c ****   }
 1126              		.loc 1 682 5 is_stmt 1 view .LVU288
 682:Core/Src/main.c ****   }
 1127              		.loc 1 682 8 is_stmt 0 view .LVU289
 1128 00aa 0A37     		adds	r7, r7, #10
 1129              	.LVL88:
 682:Core/Src/main.c ****   }
 1130              		.loc 1 682 8 view .LVU290
 1131 00ac 3FB2     		sxth	r7, r7
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 40


 1132 00ae DFE7     		b	.L44
 1133              	.LVL89:
 1134              	.L89:
 685:Core/Src/main.c ****     EPD_DrawLine(10, map(0, min, max, 110, 22), 250, map(0, min, max, 110, 22), BLACK, DOT_PIXEL_1X
 1135              		.loc 1 685 14 discriminator 1 view .LVU291
 1136 00b0 002F     		cmp	r7, #0
 1137 00b2 DFDD     		ble	.L45
 686:Core/Src/main.c ****   }
 1138              		.loc 1 686 5 is_stmt 1 view .LVU292
 686:Core/Src/main.c ****   }
 1139              		.loc 1 686 22 is_stmt 0 view .LVU293
 1140 00b4 1623     		movs	r3, #22
 1141 00b6 0093     		str	r3, [sp]
 1142 00b8 6E23     		movs	r3, #110
 1143 00ba 3A46     		mov	r2, r7
 1144 00bc 2946     		mov	r1, r5
 1145 00be 0020     		movs	r0, #0
 1146 00c0 FFF7FEFF 		bl	map
 1147              	.LVL90:
 686:Core/Src/main.c ****   }
 1148              		.loc 1 686 5 discriminator 1 view .LVU294
 1149 00c4 81B2     		uxth	r1, r0
 686:Core/Src/main.c ****   }
 1150              		.loc 1 686 5 discriminator 2 view .LVU295
 1151 00c6 0023     		movs	r3, #0
 1152 00c8 0293     		str	r3, [sp, #8]
 1153 00ca 0122     		movs	r2, #1
 1154 00cc 0192     		str	r2, [sp, #4]
 1155 00ce 0093     		str	r3, [sp]
 1156 00d0 0B46     		mov	r3, r1
 1157 00d2 FA22     		movs	r2, #250
 1158 00d4 0A20     		movs	r0, #10
 1159 00d6 FFF7FEFF 		bl	EPD_DrawLine
 1160              	.LVL91:
 1161 00da CBE7     		b	.L45
 1162              	.L49:
 690:Core/Src/main.c ****   {
 1163              		.loc 1 690 3 view .LVU296
 1164 00dc ACF11903 		sub	r3, ip, #25
 1165 00e0 182B     		cmp	r3, #24
 1166 00e2 02D8     		bhi	.L90
 711:Core/Src/main.c ****     break;
 1167              		.loc 1 711 8 view .LVU297
 1168 00e4 4FF00A09 		mov	r9, #10
 1169 00e8 2AE0     		b	.L47
 1170              	.L90:
 717:Core/Src/main.c ****     break;
 1171              		.loc 1 717 8 view .LVU298
 1172 00ea 4FF4FA69 		mov	r9, #2000
 1173 00ee 27E0     		b	.L47
 1174              	.L48:
 690:Core/Src/main.c ****   {
 1175              		.loc 1 690 3 view .LVU299
 1176 00f0 ACF16403 		sub	r3, ip, #100
 1177 00f4 952B     		cmp	r3, #149
 1178 00f6 02D8     		bhi	.L91
 705:Core/Src/main.c ****     break;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 41


 1179              		.loc 1 705 8 view .LVU300
 1180 00f8 4FF03209 		mov	r9, #50
 1181 00fc 20E0     		b	.L47
 1182              	.L91:
 717:Core/Src/main.c ****     break;
 1183              		.loc 1 717 8 view .LVU301
 1184 00fe 4FF4FA69 		mov	r9, #2000
 1185 0102 1DE0     		b	.L47
 1186              	.L46:
 690:Core/Src/main.c ****   {
 1187              		.loc 1 690 3 view .LVU302
 1188 0104 BCF5FA6F 		cmp	ip, #2000
 1189 0108 0DDA     		bge	.L50
 1190 010a BCF5487F 		cmp	ip, #800
 1191 010e 2BDA     		bge	.L80
 1192 0110 ACF5C873 		sub	r3, ip, #400
 1193 0114 B3F5C87F 		cmp	r3, #400
 1194 0118 02D2     		bcs	.L92
 699:Core/Src/main.c ****     break;
 1195              		.loc 1 699 8 view .LVU303
 1196 011a 4FF0C809 		mov	r9, #200
 1197 011e 0FE0     		b	.L47
 1198              	.L92:
 717:Core/Src/main.c ****     break;
 1199              		.loc 1 717 8 view .LVU304
 1200 0120 4FF4FA69 		mov	r9, #2000
 1201 0124 0CE0     		b	.L47
 1202              	.L50:
 690:Core/Src/main.c ****   {
 1203              		.loc 1 690 3 view .LVU305
 1204 0126 ACF5FA63 		sub	r3, ip, #2000
 1205 012a B3F5FA6F 		cmp	r3, #2000
 1206 012e 02D8     		bhi	.L93
 1207 0130 4FF47A79 		mov	r9, #1000
 1208 0134 04E0     		b	.L47
 1209              	.L93:
 717:Core/Src/main.c ****     break;
 1210              		.loc 1 717 8 view .LVU306
 1211 0136 4FF4FA69 		mov	r9, #2000
 1212 013a 01E0     		b	.L47
 1213              	.L75:
 702:Core/Src/main.c ****     break;
 1214              		.loc 1 702 8 view .LVU307
 1215 013c 4FF06409 		mov	r9, #100
 1216              	.L47:
 1217              	.LVL92:
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1218              		.loc 1 721 3 is_stmt 1 view .LVU308
 1219              	.LBB10:
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1220              		.loc 1 721 8 view .LVU309
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1221              		.loc 1 721 20 is_stmt 0 view .LVU310
 1222 0140 002D     		cmp	r5, #0
 1223 0142 14DB     		blt	.L94
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1224              		.loc 1 721 20 discriminator 2 view .LVU311
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 42


 1225 0144 09F1FF34 		add	r4, r9, #-1
 1226              	.LVL93:
 1227              	.L52:
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1228              		.loc 1 721 20 discriminator 4 view .LVU312
 1229 0148 4444     		add	r4, r4, r8
 1230 014a CA46     		mov	r10, r9
 1231 014c 94FBF9F4 		sdiv	r4, r4, r9
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1232              		.loc 1 721 16 discriminator 4 view .LVU313
 1233 0150 14FB09F4 		smulbb	r4, r4, r9
 1234 0154 24B2     		sxth	r4, r4
 1235              	.LVL94:
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1236              		.loc 1 721 16 discriminator 4 view .LVU314
 1237 0156 CDF810C0 		str	ip, [sp, #16]
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1238              		.loc 1 721 3 view .LVU315
 1239 015a 38E0     		b	.L53
 1240              	.LVL95:
 1241              	.L76:
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1242              		.loc 1 721 3 view .LVU316
 1243              	.LBE10:
 708:Core/Src/main.c ****     break;
 1244              		.loc 1 708 8 view .LVU317
 1245 015c 4FF01409 		mov	r9, #20
 1246 0160 EEE7     		b	.L47
 1247              	.L77:
 717:Core/Src/main.c ****     break;
 1248              		.loc 1 717 8 view .LVU318
 1249 0162 4FF4FA69 		mov	r9, #2000
 1250 0166 EBE7     		b	.L47
 1251              	.L80:
 696:Core/Src/main.c ****     break;
 1252              		.loc 1 696 8 view .LVU319
 1253 0168 4FF4FA79 		mov	r9, #500
 1254 016c E8E7     		b	.L47
 1255              	.LVL96:
 1256              	.L94:
 1257              	.LBB15:
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1258              		.loc 1 721 20 discriminator 1 view .LVU320
 1259 016e C9F10104 		rsb	r4, r9, #1
 1260              	.LVL97:
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1261              		.loc 1 721 20 discriminator 1 view .LVU321
 1262 0172 E9E7     		b	.L52
 1263              	.LVL98:
 1264              	.L83:
 1265              	.LBB11:
 723:Core/Src/main.c ****     if(x > max && map(x, min, max, 110, 22) < 22){break;}
 1266              		.loc 1 723 19 discriminator 1 view .LVU322
 1267 0174 4FF0000B 		mov	fp, #0
 1268 0178 32E0     		b	.L54
 1269              	.LVL99:
 1270              	.L95:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 43


 729:Core/Src/main.c ****     }
 1271              		.loc 1 729 7 is_stmt 1 view .LVU323
 729:Core/Src/main.c ****     }
 1272              		.loc 1 729 12 is_stmt 0 view .LVU324
 1273 017a 594B     		ldr	r3, .L100+4
 1274 017c 83FB0423 		smull	r2, r3, r3, r4
 1275 0180 E217     		asrs	r2, r4, #31
 1276 0182 C2EB6312 		rsb	r2, r2, r3, asr #5
 1277 0186 12B2     		sxth	r2, r2
 1278 0188 5649     		ldr	r1, .L100+8
 1279 018a 08A8     		add	r0, sp, #32
 1280 018c FFF7FEFF 		bl	sprintf
 1281              	.LVL100:
 729:Core/Src/main.c ****     }
 1282              		.loc 1 729 10 discriminator 1 view .LVU325
 1283 0190 5FFA80FB 		uxtb	fp, r0
 1284              	.LVL101:
 1285              	.L58:
 743:Core/Src/main.c ****     EPD_DrawString_EN(map(x, min, max, 2, 88)+8-(2*ln), 0,  buf, &Font8, WHITE, BLACK);
 1286              		.loc 1 743 5 is_stmt 1 view .LVU326
 1287 0194 0020     		movs	r0, #0
 1288 0196 FFF7FEFF 		bl	EPD_SetRotate
 1289              	.LVL102:
 744:Core/Src/main.c ****     EPD_SetRotate(90);
 1290              		.loc 1 744 5 view .LVU327
 744:Core/Src/main.c ****     EPD_SetRotate(90);
 1291              		.loc 1 744 23 is_stmt 0 view .LVU328
 1292 019a 5823     		movs	r3, #88
 1293 019c 0093     		str	r3, [sp]
 1294 019e 0223     		movs	r3, #2
 1295 01a0 3246     		mov	r2, r6
 1296 01a2 4146     		mov	r1, r8
 1297 01a4 2846     		mov	r0, r5
 1298 01a6 FFF7FEFF 		bl	map
 1299              	.LVL103:
 744:Core/Src/main.c ****     EPD_SetRotate(90);
 1300              		.loc 1 744 48 discriminator 1 view .LVU329
 1301 01aa A0EB4B00 		sub	r0, r0, fp, lsl #1
 1302 01ae 80B2     		uxth	r0, r0
 744:Core/Src/main.c ****     EPD_SetRotate(90);
 1303              		.loc 1 744 5 discriminator 1 view .LVU330
 1304 01b0 0830     		adds	r0, r0, #8
 1305 01b2 0021     		movs	r1, #0
 1306 01b4 0191     		str	r1, [sp, #4]
 1307 01b6 FF23     		movs	r3, #255
 1308 01b8 0093     		str	r3, [sp]
 1309 01ba 4B4B     		ldr	r3, .L100+12
 1310 01bc 08AA     		add	r2, sp, #32
 1311 01be 80B2     		uxth	r0, r0
 1312 01c0 FFF7FEFF 		bl	EPD_DrawString_EN
 1313              	.LVL104:
 745:Core/Src/main.c ****   }
 1314              		.loc 1 745 5 is_stmt 1 view .LVU331
 1315 01c4 5A20     		movs	r0, #90
 1316 01c6 FFF7FEFF 		bl	EPD_SetRotate
 1317              	.LVL105:
 1318              	.L61:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 44


 745:Core/Src/main.c ****   }
 1319              		.loc 1 745 5 is_stmt 0 view .LVU332
 1320              	.LBE11:
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1321              		.loc 1 721 57 is_stmt 1 discriminator 6 view .LVU333
 1322 01ca 4C44     		add	r4, r4, r9
 1323              	.LVL106:
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1324              		.loc 1 721 57 is_stmt 0 discriminator 6 view .LVU334
 1325 01cc 24B2     		sxth	r4, r4
 1326              	.LVL107:
 1327              	.L53:
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1328              		.loc 1 721 45 is_stmt 1 discriminator 5 view .LVU335
 1329 01ce 2546     		mov	r5, r4
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1330              		.loc 1 721 50 is_stmt 0 discriminator 5 view .LVU336
 1331 01d0 06EB0A03 		add	r3, r6, r10
 721:Core/Src/main.c ****     bool st = LINE_STYLE_DOTTED;
 1332              		.loc 1 721 45 discriminator 5 view .LVU337
 1333 01d4 9C42     		cmp	r4, r3
 1334 01d6 76DA     		bge	.L62
 1335              	.LBB14:
 722:Core/Src/main.c ****     if(x == 0){st = LINE_STYLE_SOLID;}
 1336              		.loc 1 722 5 is_stmt 1 view .LVU338
 1337              	.LVL108:
 723:Core/Src/main.c ****     if(x > max && map(x, min, max, 110, 22) < 22){break;}
 1338              		.loc 1 723 5 view .LVU339
 723:Core/Src/main.c ****     if(x > max && map(x, min, max, 110, 22) < 22){break;}
 1339              		.loc 1 723 7 is_stmt 0 view .LVU340
 1340 01d8 002C     		cmp	r4, #0
 1341 01da CBD0     		beq	.L83
 722:Core/Src/main.c ****     if(x == 0){st = LINE_STYLE_SOLID;}
 1342              		.loc 1 722 10 view .LVU341
 1343 01dc 4FF0010B 		mov	fp, #1
 1344              	.L54:
 1345              	.LVL109:
 724:Core/Src/main.c ****     EPD_DrawLine(10, map(x, min, max, 110, 22), 250, map(x, min, max, 110, 22), BLACK, DOT_PIXEL_1X
 1346              		.loc 1 724 5 is_stmt 1 view .LVU342
 724:Core/Src/main.c ****     EPD_DrawLine(10, map(x, min, max, 110, 22), 250, map(x, min, max, 110, 22), BLACK, DOT_PIXEL_1X
 1347              		.loc 1 724 7 is_stmt 0 view .LVU343
 1348 01e0 A742     		cmp	r7, r4
 1349 01e2 09DA     		bge	.L55
 724:Core/Src/main.c ****     EPD_DrawLine(10, map(x, min, max, 110, 22), 250, map(x, min, max, 110, 22), BLACK, DOT_PIXEL_1X
 1350              		.loc 1 724 19 discriminator 1 view .LVU344
 1351 01e4 1623     		movs	r3, #22
 1352 01e6 0093     		str	r3, [sp]
 1353 01e8 6E23     		movs	r3, #110
 1354 01ea 3246     		mov	r2, r6
 1355 01ec 4146     		mov	r1, r8
 1356 01ee 2846     		mov	r0, r5
 1357 01f0 FFF7FEFF 		bl	map
 1358              	.LVL110:
 724:Core/Src/main.c ****     EPD_DrawLine(10, map(x, min, max, 110, 22), 250, map(x, min, max, 110, 22), BLACK, DOT_PIXEL_1X
 1359              		.loc 1 724 16 discriminator 1 view .LVU345
 1360 01f4 1528     		cmp	r0, #21
 1361 01f6 66DD     		ble	.L62
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 45


 1362              	.L55:
 725:Core/Src/main.c ****     char buf[15];
 1363              		.loc 1 725 5 is_stmt 1 view .LVU346
 725:Core/Src/main.c ****     char buf[15];
 1364              		.loc 1 725 22 is_stmt 0 view .LVU347
 1365 01f8 1623     		movs	r3, #22
 1366 01fa 0093     		str	r3, [sp]
 1367 01fc 6E23     		movs	r3, #110
 1368 01fe 3246     		mov	r2, r6
 1369 0200 4146     		mov	r1, r8
 1370 0202 2846     		mov	r0, r5
 1371 0204 FFF7FEFF 		bl	map
 1372              	.LVL111:
 725:Core/Src/main.c ****     char buf[15];
 1373              		.loc 1 725 5 discriminator 1 view .LVU348
 1374 0208 81B2     		uxth	r1, r0
 725:Core/Src/main.c ****     char buf[15];
 1375              		.loc 1 725 5 discriminator 2 view .LVU349
 1376 020a CDF808B0 		str	fp, [sp, #8]
 1377 020e 0123     		movs	r3, #1
 1378 0210 0193     		str	r3, [sp, #4]
 1379 0212 0023     		movs	r3, #0
 1380 0214 0093     		str	r3, [sp]
 1381 0216 0B46     		mov	r3, r1
 1382 0218 FA22     		movs	r2, #250
 1383 021a 0A20     		movs	r0, #10
 1384 021c FFF7FEFF 		bl	EPD_DrawLine
 1385              	.LVL112:
 726:Core/Src/main.c ****     uint8_t ln;
 1386              		.loc 1 726 5 is_stmt 1 view .LVU350
 727:Core/Src/main.c ****     if(x%100 == 0){
 1387              		.loc 1 727 5 view .LVU351
 728:Core/Src/main.c ****       ln = sprintf(buf, "%d", x/100);
 1388              		.loc 1 728 5 view .LVU352
 728:Core/Src/main.c ****       ln = sprintf(buf, "%d", x/100);
 1389              		.loc 1 728 14 is_stmt 0 view .LVU353
 1390 0220 2F4A     		ldr	r2, .L100+4
 1391 0222 82FB0432 		smull	r3, r2, r2, r4
 1392 0226 E317     		asrs	r3, r4, #31
 1393 0228 C3EB6213 		rsb	r3, r3, r2, asr #5
 1394 022c 6422     		movs	r2, #100
 1395 022e 02FB1343 		mls	r3, r2, r3, r4
 1396 0232 1BB2     		sxth	r3, r3
 728:Core/Src/main.c ****       ln = sprintf(buf, "%d", x/100);
 1397              		.loc 1 728 7 view .LVU354
 1398 0234 002B     		cmp	r3, #0
 1399 0236 A0D0     		beq	.L95
 731:Core/Src/main.c ****       uint16_t rounded = (x + 5) / 10;
 1400              		.loc 1 731 10 is_stmt 1 view .LVU355
 731:Core/Src/main.c ****       uint16_t rounded = (x + 5) / 10;
 1401              		.loc 1 731 18 is_stmt 0 view .LVU356
 1402 0238 2C49     		ldr	r1, .L100+16
 1403 023a 81FB0421 		smull	r2, r1, r1, r4
 1404 023e E217     		asrs	r2, r4, #31
 1405 0240 C2EBA102 		rsb	r2, r2, r1, asr #2
 1406 0244 02EB8202 		add	r2, r2, r2, lsl #2
 1407 0248 A4EB4202 		sub	r2, r4, r2, lsl #1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 46


 1408 024c 12B2     		sxth	r2, r2
 731:Core/Src/main.c ****       uint16_t rounded = (x + 5) / 10;
 1409              		.loc 1 731 12 view .LVU357
 1410 024e 12B9     		cbnz	r2, .L59
 731:Core/Src/main.c ****       uint16_t rounded = (x + 5) / 10;
 1411              		.loc 1 731 23 discriminator 1 view .LVU358
 1412 0250 049A     		ldr	r2, [sp, #16]
 1413 0252 632A     		cmp	r2, #99
 1414 0254 1DDD     		ble	.L96
 1415              	.L59:
 736:Core/Src/main.c ****       uint8_t int_part = x / 100;
 1416              		.loc 1 736 11 is_stmt 1 view .LVU359
 736:Core/Src/main.c ****       uint8_t int_part = x / 100;
 1417              		.loc 1 736 18 is_stmt 0 view .LVU360
 1418 0256 2549     		ldr	r1, .L100+16
 1419 0258 81FB0421 		smull	r2, r1, r1, r4
 1420 025c E217     		asrs	r2, r4, #31
 1421 025e C2EB6102 		rsb	r2, r2, r1, asr #1
 1422 0262 02EB8202 		add	r2, r2, r2, lsl #2
 1423 0266 A21A     		subs	r2, r4, r2
 1424 0268 12B2     		sxth	r2, r2
 736:Core/Src/main.c ****       uint8_t int_part = x / 100;
 1425              		.loc 1 736 13 view .LVU361
 1426 026a 002A     		cmp	r2, #0
 1427 026c ADD1     		bne	.L61
 736:Core/Src/main.c ****       uint8_t int_part = x / 100;
 1428              		.loc 1 736 23 discriminator 1 view .LVU362
 1429 026e 049A     		ldr	r2, [sp, #16]
 1430 0270 092A     		cmp	r2, #9
 1431 0272 AADC     		bgt	.L61
 1432              	.LBB12:
 737:Core/Src/main.c ****       uint8_t frac_part = x % 100;
 1433              		.loc 1 737 7 is_stmt 1 view .LVU363
 737:Core/Src/main.c ****       uint8_t frac_part = x % 100;
 1434              		.loc 1 737 15 is_stmt 0 view .LVU364
 1435 0274 1A49     		ldr	r1, .L100+4
 1436 0276 81FB0421 		smull	r2, r1, r1, r4
 1437 027a E217     		asrs	r2, r4, #31
 1438 027c C2EB6112 		rsb	r2, r2, r1, asr #5
 1439              	.LVL113:
 738:Core/Src/main.c ****       ln = sprintf(buf, "%d.%d", int_part, frac_part);
 1440              		.loc 1 738 7 is_stmt 1 view .LVU365
 739:Core/Src/main.c ****     }
 1441              		.loc 1 739 7 view .LVU366
 739:Core/Src/main.c ****     }
 1442              		.loc 1 739 12 is_stmt 0 view .LVU367
 1443 0280 DBB2     		uxtb	r3, r3
 739:Core/Src/main.c ****     }
 1444              		.loc 1 739 12 view .LVU368
 1445 0282 D2B2     		uxtb	r2, r2
 739:Core/Src/main.c ****     }
 1446              		.loc 1 739 12 view .LVU369
 1447 0284 1A49     		ldr	r1, .L100+20
 1448 0286 08A8     		add	r0, sp, #32
 1449 0288 FFF7FEFF 		bl	sprintf
 1450              	.LVL114:
 739:Core/Src/main.c ****     }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 47


 1451              		.loc 1 739 10 discriminator 1 view .LVU370
 1452 028c 5FFA80FB 		uxtb	fp, r0
 1453              	.LVL115:
 739:Core/Src/main.c ****     }
 1454              		.loc 1 739 10 discriminator 1 view .LVU371
 1455              	.LBE12:
 736:Core/Src/main.c ****       uint8_t int_part = x / 100;
 1456              		.loc 1 736 39 view .LVU372
 1457 0290 80E7     		b	.L58
 1458              	.LVL116:
 1459              	.L96:
 1460              	.LBB13:
 732:Core/Src/main.c ****       uint8_t int_part = rounded / 10;
 1461              		.loc 1 732 7 is_stmt 1 view .LVU373
 732:Core/Src/main.c ****       uint8_t int_part = rounded / 10;
 1462              		.loc 1 732 29 is_stmt 0 view .LVU374
 1463 0292 6B1D     		adds	r3, r5, #5
 732:Core/Src/main.c ****       uint8_t int_part = rounded / 10;
 1464              		.loc 1 732 34 view .LVU375
 1465 0294 154A     		ldr	r2, .L100+16
 1466 0296 82FB0312 		smull	r1, r2, r2, r3
 1467 029a DB17     		asrs	r3, r3, #31
 1468 029c C3EBA203 		rsb	r3, r3, r2, asr #2
 732:Core/Src/main.c ****       uint8_t int_part = rounded / 10;
 1469              		.loc 1 732 16 view .LVU376
 1470 02a0 9BB2     		uxth	r3, r3
 1471              	.LVL117:
 733:Core/Src/main.c ****       uint8_t frac_part = rounded % 10;
 1472              		.loc 1 733 7 is_stmt 1 view .LVU377
 733:Core/Src/main.c ****       uint8_t frac_part = rounded % 10;
 1473              		.loc 1 733 15 is_stmt 0 view .LVU378
 1474 02a2 144A     		ldr	r2, .L100+24
 1475 02a4 A2FB0312 		umull	r1, r2, r2, r3
 1476 02a8 D108     		lsrs	r1, r2, #3
 1477              	.LVL118:
 734:Core/Src/main.c ****       ln = sprintf(buf, "%d.%d", int_part, frac_part);
 1478              		.loc 1 734 7 is_stmt 1 view .LVU379
 734:Core/Src/main.c ****       ln = sprintf(buf, "%d.%d", int_part, frac_part);
 1479              		.loc 1 734 15 is_stmt 0 view .LVU380
 1480 02aa 01EB8101 		add	r1, r1, r1, lsl #2
 1481 02ae A3EB4103 		sub	r3, r3, r1, lsl #1
 1482              	.LVL119:
 735:Core/Src/main.c ****     }else if(x%5 == 0 && max-min < 10){
 1483              		.loc 1 735 7 is_stmt 1 view .LVU381
 735:Core/Src/main.c ****     }else if(x%5 == 0 && max-min < 10){
 1484              		.loc 1 735 12 is_stmt 0 view .LVU382
 1485 02b2 DBB2     		uxtb	r3, r3
 735:Core/Src/main.c ****     }else if(x%5 == 0 && max-min < 10){
 1486              		.loc 1 735 12 view .LVU383
 1487 02b4 C2F3C702 		ubfx	r2, r2, #3, #8
 1488              	.LVL120:
 735:Core/Src/main.c ****     }else if(x%5 == 0 && max-min < 10){
 1489              		.loc 1 735 12 view .LVU384
 1490 02b8 0D49     		ldr	r1, .L100+20
 1491 02ba 08A8     		add	r0, sp, #32
 1492 02bc FFF7FEFF 		bl	sprintf
 1493              	.LVL121:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 48


 735:Core/Src/main.c ****     }else if(x%5 == 0 && max-min < 10){
 1494              		.loc 1 735 10 discriminator 1 view .LVU385
 1495 02c0 5FFA80FB 		uxtb	fp, r0
 1496              	.LVL122:
 735:Core/Src/main.c ****     }else if(x%5 == 0 && max-min < 10){
 1497              		.loc 1 735 10 discriminator 1 view .LVU386
 1498              	.LBE13:
 731:Core/Src/main.c ****       uint16_t rounded = (x + 5) / 10;
 1499              		.loc 1 731 40 view .LVU387
 1500 02c4 66E7     		b	.L58
 1501              	.LVL123:
 1502              	.L62:
 731:Core/Src/main.c ****       uint16_t rounded = (x + 5) / 10;
 1503              		.loc 1 731 40 view .LVU388
 1504              	.LBE14:
 1505              	.LBE15:
 749:Core/Src/main.c ****   for (uint8_t i = 0; i < q_len(); i++){
 1506              		.loc 1 749 3 is_stmt 1 view .LVU389
 749:Core/Src/main.c ****   for (uint8_t i = 0; i < q_len(); i++){
 1507              		.loc 1 749 24 is_stmt 0 view .LVU390
 1508 02c6 0521     		movs	r1, #5
 1509 02c8 0B48     		ldr	r0, .L100+28
 1510 02ca FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 1511              	.LVL124:
 1512 02ce 8346     		mov	fp, r0
 1513              	.LVL125:
 750:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), map(q_get(i), min, max, 110, 22), 10+((i+1)*5), map(q_get(i+1), min, max
 1514              		.loc 1 750 3 is_stmt 1 view .LVU391
 1515              	.LBB16:
 750:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), map(q_get(i), min, max, 110, 22), 10+((i+1)*5), map(q_get(i+1), min, max
 1516              		.loc 1 750 8 view .LVU392
 750:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), map(q_get(i), min, max, 110, 22), 10+((i+1)*5), map(q_get(i+1), min, max
 1517              		.loc 1 750 16 is_stmt 0 view .LVU393
 1518 02d0 0027     		movs	r7, #0
 1519              	.LVL126:
 750:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), map(q_get(i), min, max, 110, 22), 10+((i+1)*5), map(q_get(i+1), min, max
 1520              		.loc 1 750 16 view .LVU394
 1521 02d2 CDF814A0 		str	r10, [sp, #20]
 1522 02d6 B246     		mov	r10, r6
 750:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), map(q_get(i), min, max, 110, 22), 10+((i+1)*5), map(q_get(i+1), min, max
 1523              		.loc 1 750 3 view .LVU395
 1524 02d8 39E0     		b	.L64
 1525              	.L101:
 1526 02da 00BF     		.align	2
 1527              	.L100:
 1528 02dc 00000000 		.word	BlackImage
 1529 02e0 1F85EB51 		.word	1374389535
 1530 02e4 00000000 		.word	.LC1
 1531 02e8 00000000 		.word	Font8
 1532 02ec 67666666 		.word	1717986919
 1533 02f0 04000000 		.word	.LC2
 1534 02f4 CDCCCCCC 		.word	-858993459
 1535 02f8 00000000 		.word	hrtc
 1536              	.LVL127:
 1537              	.L65:
 751:Core/Src/main.c ****   }
 1538              		.loc 1 751 5 is_stmt 1 view .LVU396
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 49


 751:Core/Src/main.c ****   }
 1539              		.loc 1 751 32 is_stmt 0 view .LVU397
 1540 02fc 3846     		mov	r0, r7
 1541 02fe FFF7FEFF 		bl	q_get
 1542              	.LVL128:
 751:Core/Src/main.c ****   }
 1543              		.loc 1 751 28 discriminator 1 view .LVU398
 1544 0302 1626     		movs	r6, #22
 1545 0304 0096     		str	r6, [sp]
 1546 0306 6E23     		movs	r3, #110
 1547 0308 5246     		mov	r2, r10
 1548 030a 4146     		mov	r1, r8
 1549 030c FFF7FEFF 		bl	map
 1550              	.LVL129:
 1551 0310 0490     		str	r0, [sp, #16]
 751:Core/Src/main.c ****   }
 1552              		.loc 1 751 68 discriminator 2 view .LVU399
 1553 0312 7C1C     		adds	r4, r7, #1
 751:Core/Src/main.c ****   }
 1554              		.loc 1 751 80 discriminator 2 view .LVU400
 1555 0314 E7B2     		uxtb	r7, r4
 1556              	.LVL130:
 751:Core/Src/main.c ****   }
 1557              		.loc 1 751 80 discriminator 2 view .LVU401
 1558 0316 3846     		mov	r0, r7
 1559 0318 FFF7FEFF 		bl	q_get
 1560              	.LVL131:
 751:Core/Src/main.c ****   }
 1561              		.loc 1 751 76 discriminator 3 view .LVU402
 1562 031c 0096     		str	r6, [sp]
 1563 031e 6E23     		movs	r3, #110
 1564 0320 5246     		mov	r2, r10
 1565 0322 4146     		mov	r1, r8
 1566 0324 FFF7FEFF 		bl	map
 1567              	.LVL132:
 751:Core/Src/main.c ****   }
 1568              		.loc 1 751 5 discriminator 2 view .LVU403
 1569 0328 04EB8404 		add	r4, r4, r4, lsl #2
 1570 032c 04F10A02 		add	r2, r4, #10
 751:Core/Src/main.c ****   }
 1571              		.loc 1 751 5 view .LVU404
 1572 0330 05EB8505 		add	r5, r5, r5, lsl #2
 1573              	.LVL133:
 751:Core/Src/main.c ****   }
 1574              		.loc 1 751 5 view .LVU405
 1575 0334 0A35     		adds	r5, r5, #10
 751:Core/Src/main.c ****   }
 1576              		.loc 1 751 5 discriminator 4 view .LVU406
 1577 0336 0021     		movs	r1, #0
 1578 0338 0291     		str	r1, [sp, #8]
 1579 033a 0123     		movs	r3, #1
 1580 033c 0193     		str	r3, [sp, #4]
 1581 033e 0091     		str	r1, [sp]
 1582 0340 83B2     		uxth	r3, r0
 1583 0342 92B2     		uxth	r2, r2
 1584 0344 BDF81010 		ldrh	r1, [sp, #16]
 1585 0348 A8B2     		uxth	r0, r5
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 50


 1586 034a FFF7FEFF 		bl	EPD_DrawLine
 1587              	.LVL134:
 750:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), map(q_get(i), min, max, 110, 22), 10+((i+1)*5), map(q_get(i+1), min, max
 1588              		.loc 1 750 37 is_stmt 1 discriminator 3 view .LVU407
 1589              	.L64:
 750:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), map(q_get(i), min, max, 110, 22), 10+((i+1)*5), map(q_get(i+1), min, max
 1590              		.loc 1 750 25 discriminator 1 view .LVU408
 1591 034e 3D46     		mov	r5, r7
 750:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), map(q_get(i), min, max, 110, 22), 10+((i+1)*5), map(q_get(i+1), min, max
 1592              		.loc 1 750 27 is_stmt 0 discriminator 1 view .LVU409
 1593 0350 FFF7FEFF 		bl	q_len
 1594              	.LVL135:
 750:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), map(q_get(i), min, max, 110, 22), 10+((i+1)*5), map(q_get(i+1), min, max
 1595              		.loc 1 750 25 discriminator 1 view .LVU410
 1596 0354 8742     		cmp	r7, r0
 1597 0356 D1D3     		bcc	.L65
 1598              	.LBE16:
 1599              	.LBB17:
 754:Core/Src/main.c ****     if(i == q_len()){continue;}
 1600              		.loc 1 754 19 view .LVU411
 1601 0358 DDF814A0 		ldr	r10, [sp, #20]
 1602              	.LBE17:
 754:Core/Src/main.c ****     if(i == q_len()){continue;}
 1603              		.loc 1 754 3 is_stmt 1 view .LVU412
 1604              	.LBB19:
 754:Core/Src/main.c ****     if(i == q_len()){continue;}
 1605              		.loc 1 754 8 view .LVU413
 754:Core/Src/main.c ****     if(i == q_len()){continue;}
 1606              		.loc 1 754 19 is_stmt 0 view .LVU414
 1607 035c FFF7FEFF 		bl	q_len
 1608              	.LVL136:
 754:Core/Src/main.c ****     if(i == q_len()){continue;}
 1609              		.loc 1 754 15 discriminator 1 view .LVU415
 1610 0360 44B2     		sxtb	r4, r0
 1611              	.LVL137:
 754:Core/Src/main.c ****     if(i == q_len()){continue;}
 1612              		.loc 1 754 3 view .LVU416
 1613 0362 01E0     		b	.L66
 1614              	.LVL138:
 1615              	.L68:
 754:Core/Src/main.c ****     if(i == q_len()){continue;}
 1616              		.loc 1 754 36 is_stmt 1 discriminator 2 view .LVU417
 1617 0364 083C     		subs	r4, r4, #8
 1618              	.LVL139:
 754:Core/Src/main.c ****     if(i == q_len()){continue;}
 1619              		.loc 1 754 36 is_stmt 0 discriminator 2 view .LVU418
 1620 0366 64B2     		sxtb	r4, r4
 1621              	.LVL140:
 1622              	.L66:
 754:Core/Src/main.c ****     if(i == q_len()){continue;}
 1623              		.loc 1 754 30 is_stmt 1 discriminator 1 view .LVU419
 1624 0368 002C     		cmp	r4, #0
 1625 036a 34DD     		ble	.L97
 1626              	.LBB18:
 755:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), 20, 10+(i*5), 112, BLACK, DOT_PIXEL_1X1, LINE_STYLE_DOTTED);
 1627              		.loc 1 755 5 view .LVU420
 755:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), 20, 10+(i*5), 112, BLACK, DOT_PIXEL_1X1, LINE_STYLE_DOTTED);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 51


 1628              		.loc 1 755 13 is_stmt 0 view .LVU421
 1629 036c FFF7FEFF 		bl	q_len
 1630              	.LVL141:
 755:Core/Src/main.c ****     EPD_DrawLine(10+(i*5), 20, 10+(i*5), 112, BLACK, DOT_PIXEL_1X1, LINE_STYLE_DOTTED);
 1631              		.loc 1 755 7 discriminator 1 view .LVU422
 1632 0370 8442     		cmp	r4, r0
 1633 0372 F7D0     		beq	.L68
 756:Core/Src/main.c ****     uint32_t this_time = timestamp - MEASURMENTS_DELTA_SEC*(q_len()-i-1);
 1634              		.loc 1 756 5 is_stmt 1 view .LVU423
 756:Core/Src/main.c ****     uint32_t this_time = timestamp - MEASURMENTS_DELTA_SEC*(q_len()-i-1);
 1635              		.loc 1 756 23 is_stmt 0 view .LVU424
 1636 0374 04EB8405 		add	r5, r4, r4, lsl #2
 1637 0378 ADB2     		uxth	r5, r5
 756:Core/Src/main.c ****     uint32_t this_time = timestamp - MEASURMENTS_DELTA_SEC*(q_len()-i-1);
 1638              		.loc 1 756 5 view .LVU425
 1639 037a 0A35     		adds	r5, r5, #10
 1640 037c ADB2     		uxth	r5, r5
 1641 037e 0123     		movs	r3, #1
 1642 0380 0293     		str	r3, [sp, #8]
 1643 0382 0193     		str	r3, [sp, #4]
 1644 0384 0026     		movs	r6, #0
 1645 0386 0096     		str	r6, [sp]
 1646 0388 7023     		movs	r3, #112
 1647 038a 2A46     		mov	r2, r5
 1648 038c 1421     		movs	r1, #20
 1649 038e 2846     		mov	r0, r5
 1650 0390 FFF7FEFF 		bl	EPD_DrawLine
 1651              	.LVL142:
 757:Core/Src/main.c ****     // struct tm  ts;
 1652              		.loc 1 757 5 is_stmt 1 view .LVU426
 757:Core/Src/main.c ****     // struct tm  ts;
 1653              		.loc 1 757 61 is_stmt 0 view .LVU427
 1654 0394 FFF7FEFF 		bl	q_len
 1655              	.LVL143:
 757:Core/Src/main.c ****     // struct tm  ts;
 1656              		.loc 1 757 68 discriminator 1 view .LVU428
 1657 0398 001B     		subs	r0, r0, r4
 757:Core/Src/main.c ****     // struct tm  ts;
 1658              		.loc 1 757 70 discriminator 1 view .LVU429
 1659 039a 0138     		subs	r0, r0, #1
 757:Core/Src/main.c ****     // struct tm  ts;
 1660              		.loc 1 757 59 discriminator 1 view .LVU430
 1661 039c 00EB8000 		add	r0, r0, r0, lsl #2
 1662              	.LVL144:
 764:Core/Src/main.c ****     // sprintf(timest_buf, "%d", this_time-1740000000);
 1663              		.loc 1 764 5 is_stmt 1 view .LVU431
 768:Core/Src/main.c ****     timestamp_to_time(this_time, &hours, &minutes);
 1664              		.loc 1 768 5 view .LVU432
 769:Core/Src/main.c ****     sprintf(timest_buf, "%02d:%02d", hours, minutes);
 1665              		.loc 1 769 5 view .LVU433
 1666 03a0 0DF11F02 		add	r2, sp, #31
 1667 03a4 0DF11E01 		add	r1, sp, #30
 1668 03a8 ABEB4000 		sub	r0, fp, r0, lsl #1
 1669              	.LVL145:
 769:Core/Src/main.c ****     sprintf(timest_buf, "%02d:%02d", hours, minutes);
 1670              		.loc 1 769 5 is_stmt 0 view .LVU434
 1671 03ac FFF7FEFF 		bl	timestamp_to_time
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 52


 1672              	.LVL146:
 770:Core/Src/main.c ****     EPD_DrawString_EN(10+(i*5), 114, timest_buf, &Font8, WHITE, BLACK);
 1673              		.loc 1 770 5 is_stmt 1 view .LVU435
 1674 03b0 08AF     		add	r7, sp, #32
 1675 03b2 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 1676 03b6 9DF81E20 		ldrb	r2, [sp, #30]	@ zero_extendqisi2
 1677 03ba 6D49     		ldr	r1, .L102+8
 1678 03bc 3846     		mov	r0, r7
 1679 03be FFF7FEFF 		bl	sprintf
 1680              	.LVL147:
 771:Core/Src/main.c ****   }
 1681              		.loc 1 771 5 view .LVU436
 1682 03c2 0196     		str	r6, [sp, #4]
 1683 03c4 FF23     		movs	r3, #255
 1684 03c6 0093     		str	r3, [sp]
 1685 03c8 6A4B     		ldr	r3, .L102+12
 1686 03ca 3A46     		mov	r2, r7
 1687 03cc 7221     		movs	r1, #114
 1688 03ce 2846     		mov	r0, r5
 1689 03d0 FFF7FEFF 		bl	EPD_DrawString_EN
 1690              	.LVL148:
 1691 03d4 C6E7     		b	.L68
 1692              	.LVL149:
 1693              	.L97:
 771:Core/Src/main.c ****   }
 1694              		.loc 1 771 5 is_stmt 0 view .LVU437
 1695              	.LBE18:
 1696              	.LBE19:
 774:Core/Src/main.c ****   if(dt < 100 && dt >= 10){
 1697              		.loc 1 774 3 is_stmt 1 view .LVU438
 775:Core/Src/main.c ****     sprintf(buf, "%d.%d*C/div", dt/100, dt-(dt/100));
 1698              		.loc 1 775 3 view .LVU439
 775:Core/Src/main.c ****     sprintf(buf, "%d.%d*C/div", dt/100, dt-(dt/100));
 1699              		.loc 1 775 15 is_stmt 0 view .LVU440
 1700 03d6 A9F10A03 		sub	r3, r9, #10
 1701 03da 9BB2     		uxth	r3, r3
 775:Core/Src/main.c ****     sprintf(buf, "%d.%d*C/div", dt/100, dt-(dt/100));
 1702              		.loc 1 775 5 view .LVU441
 1703 03dc 592B     		cmp	r3, #89
 1704 03de 40F29F80 		bls	.L98
 777:Core/Src/main.c ****     sprintf(buf, "%d.0%d*C/div", dt/100, dt-(dt/100));
 1705              		.loc 1 777 9 is_stmt 1 view .LVU442
 777:Core/Src/main.c ****     sprintf(buf, "%d.0%d*C/div", dt/100, dt-(dt/100));
 1706              		.loc 1 777 11 is_stmt 0 view .LVU443
 1707 03e2 B9F1090F 		cmp	r9, #9
 1708 03e6 00F2A680 		bhi	.L72
 778:Core/Src/main.c ****   }else{
 1709              		.loc 1 778 5 is_stmt 1 view .LVU444
 1710 03ea 634A     		ldr	r2, .L102+16
 1711 03ec A2FB0992 		umull	r9, r2, r2, r9
 1712              	.LVL150:
 778:Core/Src/main.c ****   }else{
 1713              		.loc 1 778 5 is_stmt 0 view .LVU445
 1714 03f0 AAEB5213 		sub	r3, r10, r2, lsr #5
 1715 03f4 5209     		lsrs	r2, r2, #5
 1716 03f6 6149     		ldr	r1, .L102+20
 1717 03f8 17A8     		add	r0, sp, #92
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 53


 1718 03fa FFF7FEFF 		bl	sprintf
 1719              	.LVL151:
 1720              	.L71:
 782:Core/Src/main.c **** 
 1721              		.loc 1 782 3 is_stmt 1 view .LVU446
 1722 03fe 0020     		movs	r0, #0
 1723 0400 0190     		str	r0, [sp, #4]
 1724 0402 FF23     		movs	r3, #255
 1725 0404 0093     		str	r3, [sp]
 1726 0406 5E4B     		ldr	r3, .L102+24
 1727 0408 17AA     		add	r2, sp, #92
 1728 040a 0146     		mov	r1, r0
 1729 040c FFF7FEFF 		bl	EPD_DrawString_EN
 1730              	.LVL152:
 784:Core/Src/main.c **** 
 1731              		.loc 1 784 3 view .LVU447
 784:Core/Src/main.c **** 
 1732              		.loc 1 784 29 is_stmt 0 view .LVU448
 1733 0410 5C4B     		ldr	r3, .L102+28
 1734 0412 1888     		ldrh	r0, [r3]
 1735 0414 FFF7FEFF 		bl	__aeabi_i2d
 1736              	.LVL153:
 1737 0418 0246     		mov	r2, r0
 1738 041a 0B46     		mov	r3, r1
 1739 041c 52A1     		adr	r1, .L102
 1740 041e D1E90001 		ldrd	r0, [r1]
 1741 0422 FFF7FEFF 		bl	__aeabi_ddiv
 1742              	.LVL154:
 1743 0426 FFF7FEFF 		bl	__aeabi_d2f
 1744              	.LVL155:
 1745 042a 07EE900A 		vmov	s15, r0
 784:Core/Src/main.c **** 
 1746              		.loc 1 784 14 view .LVU449
 1747 042e 564B     		ldr	r3, .L102+32
 1748 0430 1860     		str	r0, [r3]	@ float
 789:Core/Src/main.c ****     EPD_SetRotate(0);
 1749              		.loc 1 789 3 is_stmt 1 view .LVU450
 789:Core/Src/main.c ****     EPD_SetRotate(0);
 1750              		.loc 1 789 5 is_stmt 0 view .LVU451
 1751 0432 B0EE027A 		vmov.f32	s14, #2.25e+0
 1752 0436 F4EEC77A 		vcmpe.f32	s15, s14
 1753 043a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1754 043e 00F18380 		bmi	.L99
 1755              	.L73:
 796:Core/Src/main.c ****   EPD_DrawLine(10, 20, 10, 112, BLACK, DOT_PIXEL_1X1, LINE_STYLE_SOLID);
 1756              		.loc 1 796 3 is_stmt 1 view .LVU452
 1757 0442 0024     		movs	r4, #0
 1758              	.LVL156:
 796:Core/Src/main.c ****   EPD_DrawLine(10, 20, 10, 112, BLACK, DOT_PIXEL_1X1, LINE_STYLE_SOLID);
 1759              		.loc 1 796 3 is_stmt 0 view .LVU453
 1760 0444 0294     		str	r4, [sp, #8]
 1761 0446 0125     		movs	r5, #1
 1762 0448 0195     		str	r5, [sp, #4]
 1763 044a 0094     		str	r4, [sp]
 1764 044c 7023     		movs	r3, #112
 1765 044e FA22     		movs	r2, #250
 1766 0450 1946     		mov	r1, r3
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 54


 1767 0452 0A20     		movs	r0, #10
 1768 0454 FFF7FEFF 		bl	EPD_DrawLine
 1769              	.LVL157:
 797:Core/Src/main.c **** 
 1770              		.loc 1 797 3 is_stmt 1 view .LVU454
 1771 0458 0294     		str	r4, [sp, #8]
 1772 045a 0195     		str	r5, [sp, #4]
 1773 045c 0094     		str	r4, [sp]
 1774 045e 7023     		movs	r3, #112
 1775 0460 0A22     		movs	r2, #10
 1776 0462 1421     		movs	r1, #20
 1777 0464 1046     		mov	r0, r2
 1778 0466 FFF7FEFF 		bl	EPD_DrawLine
 1779              	.LVL158:
 799:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1780              		.loc 1 799 3 view .LVU455
 799:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1781              		.loc 1 799 19 is_stmt 0 view .LVU456
 1782 046a 12A9     		add	r1, sp, #72
 1783 046c 1294     		str	r4, [sp, #72]
 1784 046e 4C60     		str	r4, [r1, #4]
 1785 0470 8C60     		str	r4, [r1, #8]
 1786 0472 CC60     		str	r4, [r1, #12]
 1787 0474 0C61     		str	r4, [r1, #16]
 800:Core/Src/main.c **** 
 1788              		.loc 1 800 3 is_stmt 1 view .LVU457
 800:Core/Src/main.c **** 
 1789              		.loc 1 800 19 is_stmt 0 view .LVU458
 1790 0476 1194     		str	r4, [sp, #68]
 802:Core/Src/main.c ****   HAL_RTC_GetDate(&hrtc, &sDate, RTC_FORMAT_BIN);
 1791              		.loc 1 802 3 is_stmt 1 view .LVU459
 1792 0478 444D     		ldr	r5, .L102+36
 1793 047a 2246     		mov	r2, r4
 1794 047c 2846     		mov	r0, r5
 1795 047e FFF7FEFF 		bl	HAL_RTC_GetTime
 1796              	.LVL159:
 803:Core/Src/main.c **** 
 1797              		.loc 1 803 3 view .LVU460
 1798 0482 2246     		mov	r2, r4
 1799 0484 11A9     		add	r1, sp, #68
 1800 0486 2846     		mov	r0, r5
 1801 0488 FFF7FEFF 		bl	HAL_RTC_GetDate
 1802              	.LVL160:
 805:Core/Src/main.c ****   time.Day = sDate.Date;
 1803              		.loc 1 805 3 view .LVU461
 806:Core/Src/main.c ****   time.Month = sDate.Month;
 1804              		.loc 1 806 3 view .LVU462
 806:Core/Src/main.c ****   time.Month = sDate.Month;
 1805              		.loc 1 806 19 is_stmt 0 view .LVU463
 1806 048c 9DF84630 		ldrb	r3, [sp, #70]	@ zero_extendqisi2
 806:Core/Src/main.c ****   time.Month = sDate.Month;
 1807              		.loc 1 806 12 view .LVU464
 1808 0490 8DF83F30 		strb	r3, [sp, #63]
 807:Core/Src/main.c ****   time.Year = sDate.Year;
 1809              		.loc 1 807 3 is_stmt 1 view .LVU465
 807:Core/Src/main.c ****   time.Year = sDate.Year;
 1810              		.loc 1 807 21 is_stmt 0 view .LVU466
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 55


 1811 0494 9DF84530 		ldrb	r3, [sp, #69]	@ zero_extendqisi2
 807:Core/Src/main.c ****   time.Year = sDate.Year;
 1812              		.loc 1 807 14 view .LVU467
 1813 0498 8DF83E30 		strb	r3, [sp, #62]
 808:Core/Src/main.c ****   EPD_DrawDate(175, 0, &time, &Font16, WHITE, BLACK);
 1814              		.loc 1 808 3 is_stmt 1 view .LVU468
 808:Core/Src/main.c ****   EPD_DrawDate(175, 0, &time, &Font16, WHITE, BLACK);
 1815              		.loc 1 808 20 is_stmt 0 view .LVU469
 1816 049c 9DF84730 		ldrb	r3, [sp, #71]	@ zero_extendqisi2
 808:Core/Src/main.c ****   EPD_DrawDate(175, 0, &time, &Font16, WHITE, BLACK);
 1817              		.loc 1 808 13 view .LVU470
 1818 04a0 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 809:Core/Src/main.c **** 
 1819              		.loc 1 809 3 is_stmt 1 view .LVU471
 1820 04a4 3A4E     		ldr	r6, .L102+40
 1821 04a6 0194     		str	r4, [sp, #4]
 1822 04a8 FF27     		movs	r7, #255
 1823 04aa 0097     		str	r7, [sp]
 1824 04ac 3346     		mov	r3, r6
 1825 04ae 0FAA     		add	r2, sp, #60
 1826 04b0 2146     		mov	r1, r4
 1827 04b2 AF20     		movs	r0, #175
 1828 04b4 FFF7FEFF 		bl	EPD_DrawDate
 1829              	.LVL161:
 818:Core/Src/main.c ****   sprintf(temp_buf, "%d.%dC", q_get(q_len()-1)/100, q_get(q_len()-1)%100);
 1830              		.loc 1 818 3 view .LVU472
 819:Core/Src/main.c ****   EPD_DrawString_EN(85, 0, temp_buf, &Font16, WHITE, BLACK);
 1831              		.loc 1 819 3 view .LVU473
 819:Core/Src/main.c ****   EPD_DrawString_EN(85, 0, temp_buf, &Font16, WHITE, BLACK);
 1832              		.loc 1 819 37 is_stmt 0 view .LVU474
 1833 04b8 FFF7FEFF 		bl	q_len
 1834              	.LVL162:
 819:Core/Src/main.c ****   EPD_DrawString_EN(85, 0, temp_buf, &Font16, WHITE, BLACK);
 1835              		.loc 1 819 31 discriminator 1 view .LVU475
 1836 04bc 0138     		subs	r0, r0, #1
 1837 04be C0B2     		uxtb	r0, r0
 1838 04c0 FFF7FEFF 		bl	q_get
 1839              	.LVL163:
 1840 04c4 0546     		mov	r5, r0
 819:Core/Src/main.c ****   EPD_DrawString_EN(85, 0, temp_buf, &Font16, WHITE, BLACK);
 1841              		.loc 1 819 59 discriminator 2 view .LVU476
 1842 04c6 FFF7FEFF 		bl	q_len
 1843              	.LVL164:
 819:Core/Src/main.c ****   EPD_DrawString_EN(85, 0, temp_buf, &Font16, WHITE, BLACK);
 1844              		.loc 1 819 53 discriminator 3 view .LVU477
 1845 04ca 0138     		subs	r0, r0, #1
 1846 04cc C0B2     		uxtb	r0, r0
 1847 04ce FFF7FEFF 		bl	q_get
 1848              	.LVL165:
 819:Core/Src/main.c ****   EPD_DrawString_EN(85, 0, temp_buf, &Font16, WHITE, BLACK);
 1849              		.loc 1 819 3 discriminator 4 view .LVU478
 1850 04d2 294B     		ldr	r3, .L102+16
 1851 04d4 83FB0021 		smull	r2, r1, r3, r0
 1852 04d8 C217     		asrs	r2, r0, #31
 1853 04da C2EB6112 		rsb	r2, r2, r1, asr #5
 1854 04de 4FF06408 		mov	r8, #100
 1855              	.LVL166:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 56


 819:Core/Src/main.c ****   EPD_DrawString_EN(85, 0, temp_buf, &Font16, WHITE, BLACK);
 1856              		.loc 1 819 3 discriminator 4 view .LVU479
 1857 04e2 08FB1200 		mls	r0, r8, r2, r0
 819:Core/Src/main.c ****   EPD_DrawString_EN(85, 0, temp_buf, &Font16, WHITE, BLACK);
 1858              		.loc 1 819 3 discriminator 2 view .LVU480
 1859 04e6 83FB0523 		smull	r2, r3, r3, r5
 1860 04ea EA17     		asrs	r2, r5, #31
 1861 04ec C2EB6312 		rsb	r2, r2, r3, asr #5
 819:Core/Src/main.c ****   EPD_DrawString_EN(85, 0, temp_buf, &Font16, WHITE, BLACK);
 1862              		.loc 1 819 3 discriminator 4 view .LVU481
 1863 04f0 0CAD     		add	r5, sp, #48
 1864 04f2 03B2     		sxth	r3, r0
 1865 04f4 12B2     		sxth	r2, r2
 1866 04f6 2749     		ldr	r1, .L102+44
 1867 04f8 2846     		mov	r0, r5
 1868 04fa FFF7FEFF 		bl	sprintf
 1869              	.LVL167:
 820:Core/Src/main.c ****   
 1870              		.loc 1 820 3 is_stmt 1 view .LVU482
 1871 04fe 0194     		str	r4, [sp, #4]
 1872 0500 0097     		str	r7, [sp]
 1873 0502 3346     		mov	r3, r6
 1874 0504 2A46     		mov	r2, r5
 1875 0506 2146     		mov	r1, r4
 1876 0508 5520     		movs	r0, #85
 1877 050a FFF7FEFF 		bl	EPD_DrawString_EN
 1878              	.LVL168:
 822:Core/Src/main.c ****   HAL_Delay(100);
 1879              		.loc 1 822 3 view .LVU483
 1880 050e 2248     		ldr	r0, .L102+48
 1881 0510 FFF7FEFF 		bl	EPD_Display_Base
 1882              	.LVL169:
 823:Core/Src/main.c **** }
 1883              		.loc 1 823 3 view .LVU484
 1884 0514 4046     		mov	r0, r8
 1885 0516 FFF7FEFF 		bl	HAL_Delay
 1886              	.LVL170:
 824:Core/Src/main.c **** 
 1887              		.loc 1 824 1 is_stmt 0 view .LVU485
 1888 051a 1BB0     		add	sp, sp, #108
 1889              		.cfi_remember_state
 1890              		.cfi_def_cfa_offset 36
 1891              		@ sp needed
 1892 051c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1893              	.LVL171:
 1894              	.L98:
 1895              		.cfi_restore_state
 776:Core/Src/main.c ****   }else if(dt < 10){
 1896              		.loc 1 776 5 is_stmt 1 view .LVU486
 1897 0520 154A     		ldr	r2, .L102+16
 1898 0522 A2FB0992 		umull	r9, r2, r2, r9
 1899              	.LVL172:
 776:Core/Src/main.c ****   }else if(dt < 10){
 1900              		.loc 1 776 5 is_stmt 0 view .LVU487
 1901 0526 AAEB5213 		sub	r3, r10, r2, lsr #5
 1902 052a 5209     		lsrs	r2, r2, #5
 1903 052c 1B49     		ldr	r1, .L102+52
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 57


 1904 052e 17A8     		add	r0, sp, #92
 1905 0530 FFF7FEFF 		bl	sprintf
 1906              	.LVL173:
 1907 0534 63E7     		b	.L71
 1908              	.LVL174:
 1909              	.L72:
 780:Core/Src/main.c ****   }
 1910              		.loc 1 780 5 is_stmt 1 view .LVU488
 1911 0536 104B     		ldr	r3, .L102+16
 1912 0538 A3FB0932 		umull	r3, r2, r3, r9
 1913 053c 5209     		lsrs	r2, r2, #5
 1914 053e 1849     		ldr	r1, .L102+56
 1915 0540 17A8     		add	r0, sp, #92
 1916 0542 FFF7FEFF 		bl	sprintf
 1917              	.LVL175:
 1918 0546 5AE7     		b	.L71
 1919              	.LVL176:
 1920              	.L99:
 790:Core/Src/main.c ****     EPD_DrawBMP(107, 95, 16, 26, dead_batt_26x16);
 1921              		.loc 1 790 5 view .LVU489
 1922 0548 0020     		movs	r0, #0
 1923 054a FFF7FEFF 		bl	EPD_SetRotate
 1924              	.LVL177:
 791:Core/Src/main.c ****     EPD_SetRotate(90);
 1925              		.loc 1 791 5 view .LVU490
 1926 054e 154B     		ldr	r3, .L102+60
 1927 0550 0093     		str	r3, [sp]
 1928 0552 1A23     		movs	r3, #26
 1929 0554 1022     		movs	r2, #16
 1930 0556 5F21     		movs	r1, #95
 1931 0558 6B20     		movs	r0, #107
 1932 055a FFF7FEFF 		bl	EPD_DrawBMP
 1933              	.LVL178:
 792:Core/Src/main.c ****   }
 1934              		.loc 1 792 5 view .LVU491
 1935 055e 5A20     		movs	r0, #90
 1936 0560 FFF7FEFF 		bl	EPD_SetRotate
 1937              	.LVL179:
 1938 0564 6DE7     		b	.L73
 1939              	.L103:
 1940 0566 00BF     		.align	3
 1941              	.L102:
 1942 0568 99999999 		.word	-1717986919
 1943 056c 19E0B240 		.word	1085464601
 1944 0570 0C000000 		.word	.LC3
 1945 0574 00000000 		.word	Font8
 1946 0578 1F85EB51 		.word	1374389535
 1947 057c 24000000 		.word	.LC5
 1948 0580 00000000 		.word	Font12
 1949 0584 00000000 		.word	adcData
 1950 0588 00000000 		.word	mcuVoltage
 1951 058c 00000000 		.word	hrtc
 1952 0590 00000000 		.word	Font16
 1953 0594 40000000 		.word	.LC7
 1954 0598 00000000 		.word	BlackImage
 1955 059c 18000000 		.word	.LC4
 1956 05a0 34000000 		.word	.LC6
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 58


 1957 05a4 00000000 		.word	dead_batt_26x16
 1958              		.cfi_endproc
 1959              	.LFE332:
 1961              		.section	.rodata.USB_CDC_RxHandler.str1.4,"aMS",%progbits,1
 1962              		.align	2
 1963              	.LC8:
 1964 0000 5465726D 		.ascii	"Termaink Ready\012\015\000"
 1964      61696E6B 
 1964      20526561 
 1964      64790A0D 
 1964      00
 1965              		.section	.text.USB_CDC_RxHandler,"ax",%progbits
 1966              		.align	1
 1967              		.global	USB_CDC_RxHandler
 1968              		.syntax unified
 1969              		.thumb
 1970              		.thumb_func
 1972              	USB_CDC_RxHandler:
 1973              	.LVL180:
 1974              	.LFB344:
1052:Core/Src/main.c **** 
1053:Core/Src/main.c **** 
1054:Core/Src/main.c **** void USB_CDC_RxHandler(uint8_t* Buf, uint32_t Len)
1055:Core/Src/main.c **** {
 1975              		.loc 1 1055 1 view -0
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 0
 1978              		@ frame_needed = 0, uses_anonymous_args = 0
 1979              		.loc 1 1055 1 is_stmt 0 view .LVU493
 1980 0000 10B5     		push	{r4, lr}
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 4, -8
 1983              		.cfi_offset 14, -4
1056:Core/Src/main.c ****   switch(Buf[0]){
 1984              		.loc 1 1056 3 is_stmt 1 view .LVU494
 1985              		.loc 1 1056 13 is_stmt 0 view .LVU495
 1986 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1987              		.loc 1 1056 3 view .LVU496
 1988 0004 732B     		cmp	r3, #115
 1989 0006 0CD0     		beq	.L105
 1990 0008 742B     		cmp	r3, #116
 1991 000a 05D0     		beq	.L106
 1992 000c 672B     		cmp	r3, #103
 1993 000e 07D1     		bne	.L104
1057:Core/Src/main.c ****     case 't':
1058:Core/Src/main.c ****       CDC_Transmit_FS("Termaink Ready\n\r", 17);
1059:Core/Src/main.c ****       break;
1060:Core/Src/main.c ****     case 'g':
1061:Core/Src/main.c ****       send_usb_data = true;
 1994              		.loc 1 1061 7 is_stmt 1 view .LVU497
 1995              		.loc 1 1061 21 is_stmt 0 view .LVU498
 1996 0010 0F4B     		ldr	r3, .L110
 1997 0012 0122     		movs	r2, #1
 1998 0014 1A70     		strb	r2, [r3]
1062:Core/Src/main.c ****       break;
 1999              		.loc 1 1062 7 is_stmt 1 view .LVU499
 2000 0016 03E0     		b	.L104
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 59


 2001              	.L106:
1058:Core/Src/main.c ****       break;
 2002              		.loc 1 1058 7 view .LVU500
 2003 0018 1121     		movs	r1, #17
 2004              	.LVL181:
1058:Core/Src/main.c ****       break;
 2005              		.loc 1 1058 7 is_stmt 0 view .LVU501
 2006 001a 0E48     		ldr	r0, .L110+4
 2007              	.LVL182:
1058:Core/Src/main.c ****       break;
 2008              		.loc 1 1058 7 view .LVU502
 2009 001c FFF7FEFF 		bl	CDC_Transmit_FS
 2010              	.LVL183:
1059:Core/Src/main.c ****     case 'g':
 2011              		.loc 1 1059 7 is_stmt 1 view .LVU503
 2012              	.L104:
1063:Core/Src/main.c ****     case 's':
1064:Core/Src/main.c ****       set_rtc = true;
1065:Core/Src/main.c ****       memcpy(rtc_buf, Buf, 25);
1066:Core/Src/main.c ****       break;
1067:Core/Src/main.c ****   }
1068:Core/Src/main.c **** }
 2013              		.loc 1 1068 1 is_stmt 0 view .LVU504
 2014 0020 10BD     		pop	{r4, pc}
 2015              	.LVL184:
 2016              	.L105:
 2017              		.loc 1 1068 1 view .LVU505
 2018 0022 8446     		mov	ip, r0
1064:Core/Src/main.c ****       memcpy(rtc_buf, Buf, 25);
 2019              		.loc 1 1064 7 is_stmt 1 view .LVU506
1064:Core/Src/main.c ****       memcpy(rtc_buf, Buf, 25);
 2020              		.loc 1 1064 15 is_stmt 0 view .LVU507
 2021 0024 0C4B     		ldr	r3, .L110+8
 2022 0026 0122     		movs	r2, #1
 2023 0028 1A70     		strb	r2, [r3]
1065:Core/Src/main.c ****       break;
 2024              		.loc 1 1065 7 is_stmt 1 view .LVU508
 2025 002a 0C4C     		ldr	r4, .L110+12
 2026 002c 0068     		ldr	r0, [r0]	@ unaligned
 2027              	.LVL185:
1065:Core/Src/main.c ****       break;
 2028              		.loc 1 1065 7 is_stmt 0 view .LVU509
 2029 002e DCF80410 		ldr	r1, [ip, #4]	@ unaligned
 2030              	.LVL186:
1065:Core/Src/main.c ****       break;
 2031              		.loc 1 1065 7 view .LVU510
 2032 0032 DCF80820 		ldr	r2, [ip, #8]	@ unaligned
 2033 0036 DCF80C30 		ldr	r3, [ip, #12]	@ unaligned
 2034 003a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2035 003c DCF81000 		ldr	r0, [ip, #16]	@ unaligned
 2036 0040 DCF81410 		ldr	r1, [ip, #20]	@ unaligned
 2037 0044 03C4     		stmia	r4!, {r0, r1}
 2038 0046 9CF81830 		ldrb	r3, [ip, #24]	@ zero_extendqisi2
 2039 004a 2370     		strb	r3, [r4]
1066:Core/Src/main.c ****   }
 2040              		.loc 1 1066 7 is_stmt 1 view .LVU511
 2041              		.loc 1 1068 1 is_stmt 0 view .LVU512
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 60


 2042 004c E8E7     		b	.L104
 2043              	.L111:
 2044 004e 00BF     		.align	2
 2045              	.L110:
 2046 0050 00000000 		.word	send_usb_data
 2047 0054 00000000 		.word	.LC8
 2048 0058 00000000 		.word	set_rtc
 2049 005c 00000000 		.word	rtc_buf
 2050              		.cfi_endproc
 2051              	.LFE344:
 2053              		.section	.rodata.syncRTC.str1.4,"aMS",%progbits,1
 2054              		.align	2
 2055              	.LC9:
 2056 0000 4F4B0A0D 		.ascii	"OK\012\015\000"
 2056      00
 2057              		.section	.text.syncRTC,"ax",%progbits
 2058              		.align	1
 2059              		.global	syncRTC
 2060              		.syntax unified
 2061              		.thumb
 2062              		.thumb_func
 2064              	syncRTC:
 2065              	.LFB345:
1069:Core/Src/main.c **** 
1070:Core/Src/main.c **** void syncRTC(){
 2066              		.loc 1 1070 15 is_stmt 1 view -0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 48
 2069              		@ frame_needed = 0, uses_anonymous_args = 0
 2070 0000 70B5     		push	{r4, r5, r6, lr}
 2071              		.cfi_def_cfa_offset 16
 2072              		.cfi_offset 4, -16
 2073              		.cfi_offset 5, -12
 2074              		.cfi_offset 6, -8
 2075              		.cfi_offset 14, -4
 2076 0002 8CB0     		sub	sp, sp, #48
 2077              		.cfi_def_cfa_offset 64
1071:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 2078              		.loc 1 1071 3 view .LVU514
 2079              		.loc 1 1071 19 is_stmt 0 view .LVU515
 2080 0004 07AD     		add	r5, sp, #28
 2081 0006 0024     		movs	r4, #0
 2082 0008 0794     		str	r4, [sp, #28]
 2083 000a 0894     		str	r4, [sp, #32]
 2084 000c 0994     		str	r4, [sp, #36]
 2085 000e 0A94     		str	r4, [sp, #40]
 2086 0010 0B94     		str	r4, [sp, #44]
1072:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 2087              		.loc 1 1072 3 is_stmt 1 view .LVU516
 2088              		.loc 1 1072 19 is_stmt 0 view .LVU517
 2089 0012 0694     		str	r4, [sp, #24]
1073:Core/Src/main.c ****   uint8_t day[2], month[2], year[2], hours[2], minutes[2], seconds[2];
 2090              		.loc 1 1073 3 is_stmt 1 view .LVU518
1074:Core/Src/main.c **** 
1075:Core/Src/main.c ****   // uint8_t matched = sscanf(rtc_buf, "s%02d.%02d.%02d.%02d.%02d.%02d", &hours, &minutes, &seconds
1076:Core/Src/main.c ****   // if (matched < 6){
1077:Core/Src/main.c ****   //   CDC_Transmit_FS("ERR\n\r", 6);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 61


1078:Core/Src/main.c ****   //   return;
1079:Core/Src/main.c ****   // }
1080:Core/Src/main.c **** 
1081:Core/Src/main.c ****   memcpy(hours, &rtc_buf[1], 2);
 2091              		.loc 1 1081 3 view .LVU519
 2092 0014 284B     		ldr	r3, .L114
 2093 0016 B3F80120 		ldrh	r2, [r3, #1]	@ unaligned
 2094 001a ADF80820 		strh	r2, [sp, #8]	@ movhi
1082:Core/Src/main.c ****   memcpy(minutes, &rtc_buf[4], 2);
 2095              		.loc 1 1082 3 view .LVU520
 2096 001e 9A88     		ldrh	r2, [r3, #4]
 2097 0020 ADF80420 		strh	r2, [sp, #4]	@ movhi
1083:Core/Src/main.c ****   memcpy(seconds, &rtc_buf[7], 2);
 2098              		.loc 1 1083 3 view .LVU521
 2099 0024 B3F80720 		ldrh	r2, [r3, #7]	@ unaligned
 2100 0028 ADF80020 		strh	r2, [sp]	@ movhi
1084:Core/Src/main.c ****   memcpy(year, &rtc_buf[10], 2);
 2101              		.loc 1 1084 3 view .LVU522
 2102 002c 5A89     		ldrh	r2, [r3, #10]
 2103 002e ADF80C20 		strh	r2, [sp, #12]	@ movhi
1085:Core/Src/main.c ****   memcpy(month, &rtc_buf[13], 2);
 2104              		.loc 1 1085 3 view .LVU523
 2105 0032 B3F80D20 		ldrh	r2, [r3, #13]	@ unaligned
 2106 0036 ADF81020 		strh	r2, [sp, #16]	@ movhi
1086:Core/Src/main.c ****   memcpy(day, &rtc_buf[16], 2);
 2107              		.loc 1 1086 3 view .LVU524
 2108 003a 1B8A     		ldrh	r3, [r3, #16]
 2109 003c ADF81430 		strh	r3, [sp, #20]	@ movhi
1087:Core/Src/main.c ****   
1088:Core/Src/main.c ****   sTime.Hours = atoi(hours);
 2110              		.loc 1 1088 3 view .LVU525
 2111              		.loc 1 1088 17 is_stmt 0 view .LVU526
 2112 0040 02A8     		add	r0, sp, #8
 2113 0042 FFF7FEFF 		bl	atoi
 2114              	.LVL187:
 2115              		.loc 1 1088 15 discriminator 1 view .LVU527
 2116 0046 8DF81C00 		strb	r0, [sp, #28]
1089:Core/Src/main.c ****   sTime.Minutes = atoi(minutes);
 2117              		.loc 1 1089 3 is_stmt 1 view .LVU528
 2118              		.loc 1 1089 19 is_stmt 0 view .LVU529
 2119 004a 01A8     		add	r0, sp, #4
 2120 004c FFF7FEFF 		bl	atoi
 2121              	.LVL188:
 2122              		.loc 1 1089 17 discriminator 1 view .LVU530
 2123 0050 8DF81D00 		strb	r0, [sp, #29]
1090:Core/Src/main.c ****   sTime.Seconds = atoi(seconds);
 2124              		.loc 1 1090 3 is_stmt 1 view .LVU531
 2125              		.loc 1 1090 19 is_stmt 0 view .LVU532
 2126 0054 6846     		mov	r0, sp
 2127 0056 FFF7FEFF 		bl	atoi
 2128              	.LVL189:
 2129              		.loc 1 1090 17 discriminator 1 view .LVU533
 2130 005a 8DF81E00 		strb	r0, [sp, #30]
1091:Core/Src/main.c ****   sDate.Year = atoi(year);
 2131              		.loc 1 1091 3 is_stmt 1 view .LVU534
 2132              		.loc 1 1091 16 is_stmt 0 view .LVU535
 2133 005e 03A8     		add	r0, sp, #12
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 62


 2134 0060 FFF7FEFF 		bl	atoi
 2135              	.LVL190:
 2136              		.loc 1 1091 14 discriminator 1 view .LVU536
 2137 0064 8DF81B00 		strb	r0, [sp, #27]
1092:Core/Src/main.c ****   sDate.Month = atoi(month);
 2138              		.loc 1 1092 3 is_stmt 1 view .LVU537
 2139              		.loc 1 1092 17 is_stmt 0 view .LVU538
 2140 0068 04A8     		add	r0, sp, #16
 2141 006a FFF7FEFF 		bl	atoi
 2142              	.LVL191:
 2143              		.loc 1 1092 15 discriminator 1 view .LVU539
 2144 006e 8DF81900 		strb	r0, [sp, #25]
1093:Core/Src/main.c ****   sDate.Date = atoi(day);
 2145              		.loc 1 1093 3 is_stmt 1 view .LVU540
 2146              		.loc 1 1093 16 is_stmt 0 view .LVU541
 2147 0072 05A8     		add	r0, sp, #20
 2148 0074 FFF7FEFF 		bl	atoi
 2149              	.LVL192:
 2150              		.loc 1 1093 14 discriminator 1 view .LVU542
 2151 0078 8DF81A00 		strb	r0, [sp, #26]
1094:Core/Src/main.c **** 
1095:Core/Src/main.c ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 2152              		.loc 1 1095 3 is_stmt 1 view .LVU543
 2153              		.loc 1 1095 17 is_stmt 0 view .LVU544
 2154 007c 0123     		movs	r3, #1
 2155 007e 8DF81830 		strb	r3, [sp, #24]
1096:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 2156              		.loc 1 1096 3 is_stmt 1 view .LVU545
 2157              		.loc 1 1096 24 is_stmt 0 view .LVU546
 2158 0082 0A94     		str	r4, [sp, #40]
1097:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 2159              		.loc 1 1097 3 is_stmt 1 view .LVU547
 2160              		.loc 1 1097 24 is_stmt 0 view .LVU548
 2161 0084 0B94     		str	r4, [sp, #44]
1098:Core/Src/main.c **** 
1099:Core/Src/main.c ****   HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN);
 2162              		.loc 1 1099 3 is_stmt 1 view .LVU549
 2163 0086 0D4E     		ldr	r6, .L114+4
 2164 0088 2246     		mov	r2, r4
 2165 008a 2946     		mov	r1, r5
 2166 008c 3046     		mov	r0, r6
 2167 008e FFF7FEFF 		bl	HAL_RTC_SetTime
 2168              	.LVL193:
1100:Core/Src/main.c ****   HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BIN);
 2169              		.loc 1 1100 3 view .LVU550
 2170 0092 2246     		mov	r2, r4
 2171 0094 06A9     		add	r1, sp, #24
 2172 0096 3046     		mov	r0, r6
 2173 0098 FFF7FEFF 		bl	HAL_RTC_SetDate
 2174              	.LVL194:
1101:Core/Src/main.c **** 
1102:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();  
 2175              		.loc 1 1102 3 view .LVU551
 2176 009c FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 2177              	.LVL195:
1103:Core/Src/main.c ****   HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR6, KEY);
 2178              		.loc 1 1103 3 view .LVU552
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 63


 2179 00a0 074A     		ldr	r2, .L114+8
 2180 00a2 0621     		movs	r1, #6
 2181 00a4 3046     		mov	r0, r6
 2182 00a6 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 2183              	.LVL196:
1104:Core/Src/main.c ****   
1105:Core/Src/main.c ****   CDC_Transmit_FS("OK\n\r", 5);
 2184              		.loc 1 1105 3 view .LVU553
 2185 00aa 0521     		movs	r1, #5
 2186 00ac 0548     		ldr	r0, .L114+12
 2187 00ae FFF7FEFF 		bl	CDC_Transmit_FS
 2188              	.LVL197:
1106:Core/Src/main.c **** }
 2189              		.loc 1 1106 1 is_stmt 0 view .LVU554
 2190 00b2 0CB0     		add	sp, sp, #48
 2191              		.cfi_def_cfa_offset 16
 2192              		@ sp needed
 2193 00b4 70BD     		pop	{r4, r5, r6, pc}
 2194              	.L115:
 2195 00b6 00BF     		.align	2
 2196              	.L114:
 2197 00b8 00000000 		.word	rtc_buf
 2198 00bc 00000000 		.word	hrtc
 2199 00c0 FF55FFAA 		.word	-1426106881
 2200 00c4 00000000 		.word	.LC9
 2201              		.cfi_endproc
 2202              	.LFE345:
 2204              		.section	.rodata.USB_SendAllData.str1.4,"aMS",%progbits,1
 2205              		.align	2
 2206              	.LC10:
 2207 0000 25640A0D 		.ascii	"%d\012\015\000"
 2207      00
 2208 0005 000000   		.align	2
 2209              	.LC11:
 2210 0008 5425640A 		.ascii	"T%d\012\015\000"
 2210      0D00
 2211              		.section	.text.USB_SendAllData,"ax",%progbits
 2212              		.align	1
 2213              		.global	USB_SendAllData
 2214              		.syntax unified
 2215              		.thumb
 2216              		.thumb_func
 2218              	USB_SendAllData:
 2219              	.LFB346:
1107:Core/Src/main.c **** 
1108:Core/Src/main.c **** void USB_SendAllData(){
 2220              		.loc 1 1108 23 is_stmt 1 view -0
 2221              		.cfi_startproc
 2222              		@ args = 0, pretend = 0, frame = 24
 2223              		@ frame_needed = 0, uses_anonymous_args = 0
 2224 0000 30B5     		push	{r4, r5, lr}
 2225              		.cfi_def_cfa_offset 12
 2226              		.cfi_offset 4, -12
 2227              		.cfi_offset 5, -8
 2228              		.cfi_offset 14, -4
 2229 0002 87B0     		sub	sp, sp, #28
 2230              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 64


1109:Core/Src/main.c ****   char buf[20];
 2231              		.loc 1 1109 3 view .LVU556
1110:Core/Src/main.c ****   uint16_t len = UDISK_len();
 2232              		.loc 1 1110 3 view .LVU557
 2233              		.loc 1 1110 18 is_stmt 0 view .LVU558
 2234 0004 FFF7FEFF 		bl	UDISK_len
 2235              	.LVL198:
 2236 0008 0546     		mov	r5, r0
 2237              	.LVL199:
1111:Core/Src/main.c ****   uint8_t ln = sprintf(buf, "%d\n\r", len);
 2238              		.loc 1 1111 3 is_stmt 1 view .LVU559
 2239              		.loc 1 1111 16 is_stmt 0 view .LVU560
 2240 000a 01AC     		add	r4, sp, #4
 2241 000c 0246     		mov	r2, r0
 2242 000e 1B49     		ldr	r1, .L120
 2243 0010 2046     		mov	r0, r4
 2244              	.LVL200:
 2245              		.loc 1 1111 16 view .LVU561
 2246 0012 FFF7FEFF 		bl	sprintf
 2247              	.LVL201:
1112:Core/Src/main.c ****   CDC_Transmit_FS(buf, ln);
 2248              		.loc 1 1112 3 is_stmt 1 view .LVU562
 2249 0016 C1B2     		uxtb	r1, r0
 2250 0018 2046     		mov	r0, r4
 2251              	.LVL202:
 2252              		.loc 1 1112 3 is_stmt 0 view .LVU563
 2253 001a FFF7FEFF 		bl	CDC_Transmit_FS
 2254              	.LVL203:
1113:Core/Src/main.c ****   for (uint16_t i = len; i > 0; i--){
 2255              		.loc 1 1113 3 is_stmt 1 view .LVU564
 2256              	.LBB20:
 2257              		.loc 1 1113 8 view .LVU565
 2258              		.loc 1 1113 3 is_stmt 0 view .LVU566
 2259 001e 17E0     		b	.L117
 2260              	.LVL204:
 2261              	.L118:
1114:Core/Src/main.c ****     memset(buf, 0x00, 20);
 2262              		.loc 1 1114 5 is_stmt 1 view .LVU567
 2263 0020 01AC     		add	r4, sp, #4
 2264 0022 0023     		movs	r3, #0
 2265 0024 0193     		str	r3, [sp, #4]
 2266 0026 0293     		str	r3, [sp, #8]
 2267 0028 0393     		str	r3, [sp, #12]
 2268 002a 0493     		str	r3, [sp, #16]
 2269 002c 0593     		str	r3, [sp, #20]
1115:Core/Src/main.c ****     ln = sprintf(buf, "%d\n\r", UDISK_get(i));
 2270              		.loc 1 1115 5 view .LVU568
 2271              		.loc 1 1115 33 is_stmt 0 view .LVU569
 2272 002e 2846     		mov	r0, r5
 2273 0030 FFF7FEFF 		bl	UDISK_get
 2274              	.LVL205:
 2275 0034 0246     		mov	r2, r0
 2276              		.loc 1 1115 10 discriminator 1 view .LVU570
 2277 0036 1149     		ldr	r1, .L120
 2278 0038 2046     		mov	r0, r4
 2279 003a FFF7FEFF 		bl	sprintf
 2280              	.LVL206:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 65


1116:Core/Src/main.c ****     CDC_Transmit_FS(buf, ln);
 2281              		.loc 1 1116 5 is_stmt 1 view .LVU571
 2282 003e C1B2     		uxtb	r1, r0
 2283 0040 2046     		mov	r0, r4
 2284              	.LVL207:
 2285              		.loc 1 1116 5 is_stmt 0 view .LVU572
 2286 0042 FFF7FEFF 		bl	CDC_Transmit_FS
 2287              	.LVL208:
1117:Core/Src/main.c ****     HAL_Delay(1);
 2288              		.loc 1 1117 5 is_stmt 1 view .LVU573
 2289 0046 0120     		movs	r0, #1
 2290 0048 FFF7FEFF 		bl	HAL_Delay
 2291              	.LVL209:
1113:Core/Src/main.c ****     memset(buf, 0x00, 20);
 2292              		.loc 1 1113 34 discriminator 3 view .LVU574
 2293 004c 013D     		subs	r5, r5, #1
 2294              	.LVL210:
1113:Core/Src/main.c ****     memset(buf, 0x00, 20);
 2295              		.loc 1 1113 34 is_stmt 0 discriminator 3 view .LVU575
 2296 004e ADB2     		uxth	r5, r5
 2297              	.LVL211:
 2298              	.L117:
1113:Core/Src/main.c ****     memset(buf, 0x00, 20);
 2299              		.loc 1 1113 28 is_stmt 1 discriminator 1 view .LVU576
 2300 0050 002D     		cmp	r5, #0
 2301 0052 E5D1     		bne	.L118
 2302              	.LBE20:
1118:Core/Src/main.c ****   }
1119:Core/Src/main.c ****   memset(buf, 0x00, 20);
 2303              		.loc 1 1119 3 view .LVU577
 2304 0054 01AC     		add	r4, sp, #4
 2305 0056 0023     		movs	r3, #0
 2306 0058 0193     		str	r3, [sp, #4]
 2307 005a 0293     		str	r3, [sp, #8]
 2308 005c 0393     		str	r3, [sp, #12]
 2309 005e 0493     		str	r3, [sp, #16]
 2310 0060 0593     		str	r3, [sp, #20]
1120:Core/Src/main.c ****   ln = sprintf(buf, "T%d\n\r", UDISK_tst());
 2311              		.loc 1 1120 3 view .LVU578
 2312              		.loc 1 1120 8 is_stmt 0 view .LVU579
 2313 0062 FFF7FEFF 		bl	UDISK_tst
 2314              	.LVL212:
 2315 0066 0246     		mov	r2, r0
 2316              		.loc 1 1120 8 discriminator 1 view .LVU580
 2317 0068 0549     		ldr	r1, .L120+4
 2318 006a 2046     		mov	r0, r4
 2319 006c FFF7FEFF 		bl	sprintf
 2320              	.LVL213:
1121:Core/Src/main.c ****   CDC_Transmit_FS(buf, ln);
 2321              		.loc 1 1121 3 is_stmt 1 view .LVU581
 2322 0070 C1B2     		uxtb	r1, r0
 2323 0072 2046     		mov	r0, r4
 2324              	.LVL214:
 2325              		.loc 1 1121 3 is_stmt 0 view .LVU582
 2326 0074 FFF7FEFF 		bl	CDC_Transmit_FS
 2327              	.LVL215:
1122:Core/Src/main.c **** }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 66


 2328              		.loc 1 1122 1 view .LVU583
 2329 0078 07B0     		add	sp, sp, #28
 2330              		.cfi_def_cfa_offset 12
 2331              		@ sp needed
 2332 007a 30BD     		pop	{r4, r5, pc}
 2333              	.LVL216:
 2334              	.L121:
 2335              		.loc 1 1122 1 view .LVU584
 2336              		.align	2
 2337              	.L120:
 2338 007c 00000000 		.word	.LC10
 2339 0080 08000000 		.word	.LC11
 2340              		.cfi_endproc
 2341              	.LFE346:
 2343              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 2344              		.align	1
 2345              		.global	HAL_GPIO_EXTI_Callback
 2346              		.syntax unified
 2347              		.thumb
 2348              		.thumb_func
 2350              	HAL_GPIO_EXTI_Callback:
 2351              	.LVL217:
 2352              	.LFB347:
1123:Core/Src/main.c **** 
1124:Core/Src/main.c **** // void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc){
1125:Core/Src/main.c **** //   HAL_RTCEx_SetWakeUpTimer_IT(hrtc, 10, RTC_WAKEUPCLOCK_CK_SPRE_16BITS, 0);
1126:Core/Src/main.c **** //   measure = true;
1127:Core/Src/main.c **** //   send_usb = USB_DEVICE_IsConnected();
1128:Core/Src/main.c **** // }
1129:Core/Src/main.c **** 
1130:Core/Src/main.c **** 
1131:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
1132:Core/Src/main.c **** {
 2353              		.loc 1 1132 1 is_stmt 1 view -0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 0
 2356              		@ frame_needed = 0, uses_anonymous_args = 0
 2357              		@ link register save eliminated.
1133:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_5) {
 2358              		.loc 1 1133 3 view .LVU586
 2359              		.loc 1 1133 5 is_stmt 0 view .LVU587
 2360 0000 2028     		cmp	r0, #32
 2361 0002 01D0     		beq	.L125
1134:Core/Src/main.c ****     initialise_usb_connection = true;
1135:Core/Src/main.c ****   } else {
1136:Core/Src/main.c ****       __NOP();
 2362              		.loc 1 1136 7 is_stmt 1 view .LVU588
 2363              		.syntax unified
 2364              	@ 1136 "Core/Src/main.c" 1
 2365 0004 00BF     		nop
 2366              	@ 0 "" 2
1137:Core/Src/main.c ****   }
1138:Core/Src/main.c **** }
 2367              		.loc 1 1138 1 is_stmt 0 view .LVU589
 2368              		.thumb
 2369              		.syntax unified
 2370 0006 7047     		bx	lr
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 67


 2371              	.L125:
1134:Core/Src/main.c ****     initialise_usb_connection = true;
 2372              		.loc 1 1134 5 is_stmt 1 view .LVU590
1134:Core/Src/main.c ****     initialise_usb_connection = true;
 2373              		.loc 1 1134 31 is_stmt 0 view .LVU591
 2374 0008 014B     		ldr	r3, .L126
 2375 000a 0122     		movs	r2, #1
 2376 000c 1A70     		strb	r2, [r3]
 2377 000e 7047     		bx	lr
 2378              	.L127:
 2379              		.align	2
 2380              	.L126:
 2381 0010 00000000 		.word	initialise_usb_connection
 2382              		.cfi_endproc
 2383              	.LFE347:
 2385              		.section	.text.USB_DEVICE_IsConnected,"ax",%progbits
 2386              		.align	1
 2387              		.global	USB_DEVICE_IsConnected
 2388              		.syntax unified
 2389              		.thumb
 2390              		.thumb_func
 2392              	USB_DEVICE_IsConnected:
 2393              	.LFB348:
1139:Core/Src/main.c **** 
1140:Core/Src/main.c **** bool USB_DEVICE_IsConnected(){
 2394              		.loc 1 1140 30 is_stmt 1 view -0
 2395              		.cfi_startproc
 2396              		@ args = 0, pretend = 0, frame = 0
 2397              		@ frame_needed = 0, uses_anonymous_args = 0
 2398 0000 08B5     		push	{r3, lr}
 2399              		.cfi_def_cfa_offset 8
 2400              		.cfi_offset 3, -8
 2401              		.cfi_offset 14, -4
1141:Core/Src/main.c ****   return HAL_GPIO_ReadPin(USB_WKUP_GPIO_Port, USB_WKUP_Pin);
 2402              		.loc 1 1141 3 view .LVU593
 2403              		.loc 1 1141 10 is_stmt 0 view .LVU594
 2404 0002 2021     		movs	r1, #32
 2405 0004 0348     		ldr	r0, .L130
 2406 0006 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2407              	.LVL218:
1142:Core/Src/main.c **** }
 2408              		.loc 1 1142 1 view .LVU595
 2409 000a 0038     		subs	r0, r0, #0
 2410 000c 18BF     		it	ne
 2411 000e 0120     		movne	r0, #1
 2412 0010 08BD     		pop	{r3, pc}
 2413              	.L131:
 2414 0012 00BF     		.align	2
 2415              	.L130:
 2416 0014 00040048 		.word	1207960576
 2417              		.cfi_endproc
 2418              	.LFE348:
 2420              		.section	.text.HAL_LPTIM_AutoReloadMatchCallback,"ax",%progbits
 2421              		.align	1
 2422              		.global	HAL_LPTIM_AutoReloadMatchCallback
 2423              		.syntax unified
 2424              		.thumb
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 68


 2425              		.thumb_func
 2427              	HAL_LPTIM_AutoReloadMatchCallback:
 2428              	.LVL219:
 2429              	.LFB338:
 880:Core/Src/main.c ****   // HAL_GPIO_TogglePin(TEST_GPIO_Port, TEST_Pin);
 2430              		.loc 1 880 1 is_stmt 1 view -0
 2431              		.cfi_startproc
 2432              		@ args = 0, pretend = 0, frame = 0
 2433              		@ frame_needed = 0, uses_anonymous_args = 0
 882:Core/Src/main.c **** 
 2434              		.loc 1 882 3 view .LVU597
 882:Core/Src/main.c **** 
 2435              		.loc 1 882 17 is_stmt 0 view .LVU598
 2436 0000 0B4B     		ldr	r3, .L139
 2437 0002 1A68     		ldr	r2, [r3]
 2438 0004 0132     		adds	r2, r2, #1
 2439 0006 1A60     		str	r2, [r3]
 884:Core/Src/main.c ****   {
 2440              		.loc 1 884 3 is_stmt 1 view .LVU599
 884:Core/Src/main.c ****   {
 2441              		.loc 1 884 22 is_stmt 0 view .LVU600
 2442 0008 1B68     		ldr	r3, [r3]
 884:Core/Src/main.c ****   {
 2443              		.loc 1 884 6 view .LVU601
 2444 000a 092B     		cmp	r3, #9
 2445 000c 00D8     		bhi	.L138
 2446 000e 7047     		bx	lr
 2447              	.L138:
 880:Core/Src/main.c ****   // HAL_GPIO_TogglePin(TEST_GPIO_Port, TEST_Pin);
 2448              		.loc 1 880 1 view .LVU602
 2449 0010 10B5     		push	{r4, lr}
 2450              		.cfi_def_cfa_offset 8
 2451              		.cfi_offset 4, -8
 2452              		.cfi_offset 14, -4
 886:Core/Src/main.c ****       ready = false;
 2453              		.loc 1 886 7 is_stmt 1 view .LVU603
 886:Core/Src/main.c ****       ready = false;
 2454              		.loc 1 886 15 is_stmt 0 view .LVU604
 2455 0012 084B     		ldr	r3, .L139+4
 2456 0014 0122     		movs	r2, #1
 2457 0016 1A70     		strb	r2, [r3]
 887:Core/Src/main.c ****       go_to_sleep = false;
 2458              		.loc 1 887 7 is_stmt 1 view .LVU605
 887:Core/Src/main.c ****       go_to_sleep = false;
 2459              		.loc 1 887 13 is_stmt 0 view .LVU606
 2460 0018 0024     		movs	r4, #0
 2461 001a 074B     		ldr	r3, .L139+8
 2462 001c 1C70     		strb	r4, [r3]
 888:Core/Src/main.c ****       send_usb = USB_DEVICE_IsConnected();
 2463              		.loc 1 888 7 is_stmt 1 view .LVU607
 888:Core/Src/main.c ****       send_usb = USB_DEVICE_IsConnected();
 2464              		.loc 1 888 19 is_stmt 0 view .LVU608
 2465 001e 074B     		ldr	r3, .L139+12
 2466 0020 1C70     		strb	r4, [r3]
 889:Core/Src/main.c ****       seconds_passed = 0;
 2467              		.loc 1 889 7 is_stmt 1 view .LVU609
 889:Core/Src/main.c ****       seconds_passed = 0;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 69


 2468              		.loc 1 889 18 is_stmt 0 view .LVU610
 2469 0022 FFF7FEFF 		bl	USB_DEVICE_IsConnected
 2470              	.LVL220:
 889:Core/Src/main.c ****       seconds_passed = 0;
 2471              		.loc 1 889 16 discriminator 1 view .LVU611
 2472 0026 064B     		ldr	r3, .L139+16
 2473 0028 1870     		strb	r0, [r3]
 890:Core/Src/main.c ****   } 
 2474              		.loc 1 890 7 is_stmt 1 view .LVU612
 890:Core/Src/main.c ****   } 
 2475              		.loc 1 890 22 is_stmt 0 view .LVU613
 2476 002a 014B     		ldr	r3, .L139
 2477 002c 1C60     		str	r4, [r3]
 892:Core/Src/main.c **** 
 2478              		.loc 1 892 1 view .LVU614
 2479 002e 10BD     		pop	{r4, pc}
 2480              	.L140:
 2481              		.align	2
 2482              	.L139:
 2483 0030 00000000 		.word	seconds_passed
 2484 0034 00000000 		.word	measure
 2485 0038 00000000 		.word	ready
 2486 003c 00000000 		.word	go_to_sleep
 2487 0040 00000000 		.word	send_usb
 2488              		.cfi_endproc
 2489              	.LFE338:
 2491              		.section	.text.Error_Handler,"ax",%progbits
 2492              		.align	1
 2493              		.global	Error_Handler
 2494              		.syntax unified
 2495              		.thumb
 2496              		.thumb_func
 2498              	Error_Handler:
 2499              	.LFB349:
1143:Core/Src/main.c **** /* USER CODE END 4 */
1144:Core/Src/main.c **** 
1145:Core/Src/main.c **** /**
1146:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1147:Core/Src/main.c ****   * @retval None
1148:Core/Src/main.c ****   */
1149:Core/Src/main.c **** void Error_Handler(void)
1150:Core/Src/main.c **** {
 2500              		.loc 1 1150 1 is_stmt 1 view -0
 2501              		.cfi_startproc
 2502              		@ Volatile: function does not return.
 2503              		@ args = 0, pretend = 0, frame = 0
 2504              		@ frame_needed = 0, uses_anonymous_args = 0
 2505              		@ link register save eliminated.
1151:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1152:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1153:Core/Src/main.c ****   __disable_irq();
 2506              		.loc 1 1153 3 view .LVU616
 2507              	.LBB21:
 2508              	.LBI21:
 2509              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 70


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 71


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 72


 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 73


 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2510              		.loc 2 207 27 view .LVU617
 2511              	.LBB22:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2512              		.loc 2 209 3 view .LVU618
 2513              		.syntax unified
 2514              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2515 0000 72B6     		cpsid i
 2516              	@ 0 "" 2
 2517              		.thumb
 2518              		.syntax unified
 2519              	.L142:
 2520              	.LBE22:
 2521              	.LBE21:
1154:Core/Src/main.c ****   while (1)
 2522              		.loc 1 1154 3 view .LVU619
1155:Core/Src/main.c ****   {
1156:Core/Src/main.c ****   }
 2523              		.loc 1 1156 3 view .LVU620
1154:Core/Src/main.c ****   while (1)
 2524              		.loc 1 1154 9 view .LVU621
 2525 0002 FEE7     		b	.L142
 2526              		.cfi_endproc
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 74


 2527              	.LFE349:
 2529              		.section	.text.MX_SPI1_Init,"ax",%progbits
 2530              		.align	1
 2531              		.syntax unified
 2532              		.thumb
 2533              		.thumb_func
 2535              	MX_SPI1_Init:
 2536              	.LFB328:
 487:Core/Src/main.c **** 
 2537              		.loc 1 487 1 view -0
 2538              		.cfi_startproc
 2539              		@ args = 0, pretend = 0, frame = 0
 2540              		@ frame_needed = 0, uses_anonymous_args = 0
 2541 0000 08B5     		push	{r3, lr}
 2542              		.cfi_def_cfa_offset 8
 2543              		.cfi_offset 3, -8
 2544              		.cfi_offset 14, -4
 497:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2545              		.loc 1 497 3 view .LVU623
 497:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2546              		.loc 1 497 18 is_stmt 0 view .LVU624
 2547 0002 1148     		ldr	r0, .L147
 2548 0004 114B     		ldr	r3, .L147+4
 2549 0006 0360     		str	r3, [r0]
 498:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 2550              		.loc 1 498 3 is_stmt 1 view .LVU625
 498:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 2551              		.loc 1 498 19 is_stmt 0 view .LVU626
 2552 0008 4FF48273 		mov	r3, #260
 2553 000c 4360     		str	r3, [r0, #4]
 499:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2554              		.loc 1 499 3 is_stmt 1 view .LVU627
 499:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2555              		.loc 1 499 24 is_stmt 0 view .LVU628
 2556 000e 4FF40043 		mov	r3, #32768
 2557 0012 8360     		str	r3, [r0, #8]
 500:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2558              		.loc 1 500 3 is_stmt 1 view .LVU629
 500:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2559              		.loc 1 500 23 is_stmt 0 view .LVU630
 2560 0014 4FF4E063 		mov	r3, #1792
 2561 0018 C360     		str	r3, [r0, #12]
 501:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2562              		.loc 1 501 3 is_stmt 1 view .LVU631
 501:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2563              		.loc 1 501 26 is_stmt 0 view .LVU632
 2564 001a 0023     		movs	r3, #0
 2565 001c 0361     		str	r3, [r0, #16]
 502:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2566              		.loc 1 502 3 is_stmt 1 view .LVU633
 502:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2567              		.loc 1 502 23 is_stmt 0 view .LVU634
 2568 001e 4361     		str	r3, [r0, #20]
 503:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 2569              		.loc 1 503 3 is_stmt 1 view .LVU635
 503:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 2570              		.loc 1 503 18 is_stmt 0 view .LVU636
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 75


 2571 0020 4FF40072 		mov	r2, #512
 2572 0024 8261     		str	r2, [r0, #24]
 504:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2573              		.loc 1 504 3 is_stmt 1 view .LVU637
 504:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2574              		.loc 1 504 32 is_stmt 0 view .LVU638
 2575 0026 1822     		movs	r2, #24
 2576 0028 C261     		str	r2, [r0, #28]
 505:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2577              		.loc 1 505 3 is_stmt 1 view .LVU639
 505:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2578              		.loc 1 505 23 is_stmt 0 view .LVU640
 2579 002a 0362     		str	r3, [r0, #32]
 506:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2580              		.loc 1 506 3 is_stmt 1 view .LVU641
 506:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2581              		.loc 1 506 21 is_stmt 0 view .LVU642
 2582 002c 4362     		str	r3, [r0, #36]
 507:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 2583              		.loc 1 507 3 is_stmt 1 view .LVU643
 507:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 2584              		.loc 1 507 29 is_stmt 0 view .LVU644
 2585 002e 8362     		str	r3, [r0, #40]
 508:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2586              		.loc 1 508 3 is_stmt 1 view .LVU645
 508:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2587              		.loc 1 508 28 is_stmt 0 view .LVU646
 2588 0030 0722     		movs	r2, #7
 2589 0032 C262     		str	r2, [r0, #44]
 509:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2590              		.loc 1 509 3 is_stmt 1 view .LVU647
 509:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2591              		.loc 1 509 24 is_stmt 0 view .LVU648
 2592 0034 0363     		str	r3, [r0, #48]
 510:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2593              		.loc 1 510 3 is_stmt 1 view .LVU649
 510:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2594              		.loc 1 510 23 is_stmt 0 view .LVU650
 2595 0036 0823     		movs	r3, #8
 2596 0038 4363     		str	r3, [r0, #52]
 511:Core/Src/main.c ****   {
 2597              		.loc 1 511 3 is_stmt 1 view .LVU651
 511:Core/Src/main.c ****   {
 2598              		.loc 1 511 7 is_stmt 0 view .LVU652
 2599 003a FFF7FEFF 		bl	HAL_SPI_Init
 2600              	.LVL221:
 511:Core/Src/main.c ****   {
 2601              		.loc 1 511 6 discriminator 1 view .LVU653
 2602 003e 00B9     		cbnz	r0, .L146
 519:Core/Src/main.c **** 
 2603              		.loc 1 519 1 view .LVU654
 2604 0040 08BD     		pop	{r3, pc}
 2605              	.L146:
 513:Core/Src/main.c ****   }
 2606              		.loc 1 513 5 is_stmt 1 view .LVU655
 2607 0042 FFF7FEFF 		bl	Error_Handler
 2608              	.LVL222:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 76


 2609              	.L148:
 2610 0046 00BF     		.align	2
 2611              	.L147:
 2612 0048 00000000 		.word	hspi1
 2613 004c 00300140 		.word	1073819648
 2614              		.cfi_endproc
 2615              	.LFE328:
 2617              		.section	.text.MX_RTC_Init,"ax",%progbits
 2618              		.align	1
 2619              		.syntax unified
 2620              		.thumb
 2621              		.thumb_func
 2623              	MX_RTC_Init:
 2624              	.LFB327:
 420:Core/Src/main.c **** 
 2625              		.loc 1 420 1 view -0
 2626              		.cfi_startproc
 2627              		@ args = 0, pretend = 0, frame = 24
 2628              		@ frame_needed = 0, uses_anonymous_args = 0
 2629 0000 00B5     		push	{lr}
 2630              		.cfi_def_cfa_offset 4
 2631              		.cfi_offset 14, -4
 2632 0002 87B0     		sub	sp, sp, #28
 2633              		.cfi_def_cfa_offset 32
 423:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 2634              		.loc 1 423 3 view .LVU657
 2635              	.LVL223:
 426:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 2636              		.loc 1 426 3 view .LVU658
 426:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 2637              		.loc 1 426 19 is_stmt 0 view .LVU659
 2638 0004 0023     		movs	r3, #0
 2639 0006 0193     		str	r3, [sp, #4]
 2640 0008 0293     		str	r3, [sp, #8]
 2641 000a 0393     		str	r3, [sp, #12]
 2642 000c 0493     		str	r3, [sp, #16]
 2643 000e 0593     		str	r3, [sp, #20]
 427:Core/Src/main.c **** 
 2644              		.loc 1 427 3 is_stmt 1 view .LVU660
 427:Core/Src/main.c **** 
 2645              		.loc 1 427 19 is_stmt 0 view .LVU661
 2646 0010 0093     		str	r3, [sp]
 435:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 2647              		.loc 1 435 3 is_stmt 1 view .LVU662
 435:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 2648              		.loc 1 435 17 is_stmt 0 view .LVU663
 2649 0012 2148     		ldr	r0, .L159
 2650 0014 214A     		ldr	r2, .L159+4
 2651 0016 0260     		str	r2, [r0]
 436:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 2652              		.loc 1 436 3 is_stmt 1 view .LVU664
 436:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 2653              		.loc 1 436 24 is_stmt 0 view .LVU665
 2654 0018 8360     		str	r3, [r0, #8]
 437:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 2655              		.loc 1 437 3 is_stmt 1 view .LVU666
 437:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 77


 2656              		.loc 1 437 26 is_stmt 0 view .LVU667
 2657 001a 7F22     		movs	r2, #127
 2658 001c C260     		str	r2, [r0, #12]
 438:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 2659              		.loc 1 438 3 is_stmt 1 view .LVU668
 438:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 2660              		.loc 1 438 25 is_stmt 0 view .LVU669
 2661 001e FF22     		movs	r2, #255
 2662 0020 0261     		str	r2, [r0, #16]
 439:Core/Src/main.c ****   hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 2663              		.loc 1 439 3 is_stmt 1 view .LVU670
 439:Core/Src/main.c ****   hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 2664              		.loc 1 439 20 is_stmt 0 view .LVU671
 2665 0022 4361     		str	r3, [r0, #20]
 440:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 2666              		.loc 1 440 3 is_stmt 1 view .LVU672
 440:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 2667              		.loc 1 440 25 is_stmt 0 view .LVU673
 2668 0024 8361     		str	r3, [r0, #24]
 441:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 2669              		.loc 1 441 3 is_stmt 1 view .LVU674
 441:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 2670              		.loc 1 441 28 is_stmt 0 view .LVU675
 2671 0026 C361     		str	r3, [r0, #28]
 442:Core/Src/main.c ****   hrtc.Init.OutPutPullUp = RTC_OUTPUT_PULLUP_NONE;
 2672              		.loc 1 442 3 is_stmt 1 view .LVU676
 442:Core/Src/main.c ****   hrtc.Init.OutPutPullUp = RTC_OUTPUT_PULLUP_NONE;
 2673              		.loc 1 442 24 is_stmt 0 view .LVU677
 2674 0028 4FF08042 		mov	r2, #1073741824
 2675 002c 0262     		str	r2, [r0, #32]
 443:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 2676              		.loc 1 443 3 is_stmt 1 view .LVU678
 443:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 2677              		.loc 1 443 26 is_stmt 0 view .LVU679
 2678 002e 4362     		str	r3, [r0, #36]
 444:Core/Src/main.c ****   {
 2679              		.loc 1 444 3 is_stmt 1 view .LVU680
 444:Core/Src/main.c ****   {
 2680              		.loc 1 444 7 is_stmt 0 view .LVU681
 2681 0030 FFF7FEFF 		bl	HAL_RTC_Init
 2682              	.LVL224:
 444:Core/Src/main.c ****   {
 2683              		.loc 1 444 6 discriminator 1 view .LVU682
 2684 0034 48BB     		cbnz	r0, .L156
 450:Core/Src/main.c ****     return;
 2685              		.loc 1 450 3 is_stmt 1 view .LVU683
 450:Core/Src/main.c ****     return;
 2686              		.loc 1 450 7 is_stmt 0 view .LVU684
 2687 0036 0621     		movs	r1, #6
 2688 0038 1748     		ldr	r0, .L159
 2689 003a FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 2690              	.LVL225:
 450:Core/Src/main.c ****     return;
 2691              		.loc 1 450 6 discriminator 1 view .LVU685
 2692 003e 184B     		ldr	r3, .L159+8
 2693 0040 9842     		cmp	r0, r3
 2694 0042 1FD0     		beq	.L149
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 78


 457:Core/Src/main.c ****   sTime.Minutes = 0x0;
 2695              		.loc 1 457 3 is_stmt 1 view .LVU686
 457:Core/Src/main.c ****   sTime.Minutes = 0x0;
 2696              		.loc 1 457 15 is_stmt 0 view .LVU687
 2697 0044 0023     		movs	r3, #0
 2698 0046 8DF80430 		strb	r3, [sp, #4]
 458:Core/Src/main.c ****   sTime.Seconds = 0x0;
 2699              		.loc 1 458 3 is_stmt 1 view .LVU688
 458:Core/Src/main.c ****   sTime.Seconds = 0x0;
 2700              		.loc 1 458 17 is_stmt 0 view .LVU689
 2701 004a 8DF80530 		strb	r3, [sp, #5]
 459:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_ADD1H;
 2702              		.loc 1 459 3 is_stmt 1 view .LVU690
 459:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_ADD1H;
 2703              		.loc 1 459 17 is_stmt 0 view .LVU691
 2704 004e 8DF80630 		strb	r3, [sp, #6]
 460:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 2705              		.loc 1 460 3 is_stmt 1 view .LVU692
 460:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 2706              		.loc 1 460 24 is_stmt 0 view .LVU693
 2707 0052 4FF48032 		mov	r2, #65536
 2708 0056 0492     		str	r2, [sp, #16]
 461:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 2709              		.loc 1 461 3 is_stmt 1 view .LVU694
 461:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 2710              		.loc 1 461 24 is_stmt 0 view .LVU695
 2711 0058 0593     		str	r3, [sp, #20]
 462:Core/Src/main.c ****   {
 2712              		.loc 1 462 3 is_stmt 1 view .LVU696
 462:Core/Src/main.c ****   {
 2713              		.loc 1 462 7 is_stmt 0 view .LVU697
 2714 005a 0122     		movs	r2, #1
 2715 005c 01A9     		add	r1, sp, #4
 2716 005e 0E48     		ldr	r0, .L159
 2717 0060 FFF7FEFF 		bl	HAL_RTC_SetTime
 2718              	.LVL226:
 462:Core/Src/main.c ****   {
 2719              		.loc 1 462 6 discriminator 1 view .LVU698
 2720 0064 98B9     		cbnz	r0, .L157
 466:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 2721              		.loc 1 466 3 is_stmt 1 view .LVU699
 466:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 2722              		.loc 1 466 17 is_stmt 0 view .LVU700
 2723 0066 0122     		movs	r2, #1
 2724 0068 8DF80020 		strb	r2, [sp]
 467:Core/Src/main.c ****   sDate.Date = 0x1;
 2725              		.loc 1 467 3 is_stmt 1 view .LVU701
 467:Core/Src/main.c ****   sDate.Date = 0x1;
 2726              		.loc 1 467 15 is_stmt 0 view .LVU702
 2727 006c 8DF80120 		strb	r2, [sp, #1]
 468:Core/Src/main.c ****   sDate.Year = 0x25;
 2728              		.loc 1 468 3 is_stmt 1 view .LVU703
 468:Core/Src/main.c ****   sDate.Year = 0x25;
 2729              		.loc 1 468 14 is_stmt 0 view .LVU704
 2730 0070 8DF80220 		strb	r2, [sp, #2]
 469:Core/Src/main.c **** 
 2731              		.loc 1 469 3 is_stmt 1 view .LVU705
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 79


 469:Core/Src/main.c **** 
 2732              		.loc 1 469 14 is_stmt 0 view .LVU706
 2733 0074 2523     		movs	r3, #37
 2734 0076 8DF80330 		strb	r3, [sp, #3]
 471:Core/Src/main.c ****   {
 2735              		.loc 1 471 3 is_stmt 1 view .LVU707
 471:Core/Src/main.c ****   {
 2736              		.loc 1 471 7 is_stmt 0 view .LVU708
 2737 007a 6946     		mov	r1, sp
 2738 007c 0648     		ldr	r0, .L159
 2739 007e FFF7FEFF 		bl	HAL_RTC_SetDate
 2740              	.LVL227:
 471:Core/Src/main.c ****   {
 2741              		.loc 1 471 6 discriminator 1 view .LVU709
 2742 0082 30B9     		cbnz	r0, .L158
 2743              	.L149:
 479:Core/Src/main.c **** 
 2744              		.loc 1 479 1 view .LVU710
 2745 0084 07B0     		add	sp, sp, #28
 2746              		.cfi_remember_state
 2747              		.cfi_def_cfa_offset 4
 2748              		@ sp needed
 2749 0086 5DF804FB 		ldr	pc, [sp], #4
 2750              	.L156:
 2751              		.cfi_restore_state
 446:Core/Src/main.c ****   }
 2752              		.loc 1 446 5 is_stmt 1 view .LVU711
 2753 008a FFF7FEFF 		bl	Error_Handler
 2754              	.LVL228:
 2755              	.L157:
 464:Core/Src/main.c ****   }
 2756              		.loc 1 464 5 view .LVU712
 2757 008e FFF7FEFF 		bl	Error_Handler
 2758              	.LVL229:
 2759              	.L158:
 473:Core/Src/main.c ****   }
 2760              		.loc 1 473 5 view .LVU713
 2761 0092 FFF7FEFF 		bl	Error_Handler
 2762              	.LVL230:
 2763              	.L160:
 2764 0096 00BF     		.align	2
 2765              	.L159:
 2766 0098 00000000 		.word	hrtc
 2767 009c 00280040 		.word	1073752064
 2768 00a0 FF55FFAA 		.word	-1426106881
 2769              		.cfi_endproc
 2770              	.LFE327:
 2772              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 2773              		.align	1
 2774              		.syntax unified
 2775              		.thumb
 2776              		.thumb_func
 2778              	MX_USART2_UART_Init:
 2779              	.LFB329:
 527:Core/Src/main.c **** 
 2780              		.loc 1 527 1 view -0
 2781              		.cfi_startproc
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 80


 2782              		@ args = 0, pretend = 0, frame = 0
 2783              		@ frame_needed = 0, uses_anonymous_args = 0
 2784 0000 08B5     		push	{r3, lr}
 2785              		.cfi_def_cfa_offset 8
 2786              		.cfi_offset 3, -8
 2787              		.cfi_offset 14, -4
 536:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 2788              		.loc 1 536 3 view .LVU715
 536:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 2789              		.loc 1 536 19 is_stmt 0 view .LVU716
 2790 0002 0B48     		ldr	r0, .L165
 2791 0004 0B4B     		ldr	r3, .L165+4
 2792 0006 0360     		str	r3, [r0]
 537:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2793              		.loc 1 537 3 is_stmt 1 view .LVU717
 537:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2794              		.loc 1 537 24 is_stmt 0 view .LVU718
 2795 0008 4FF4E133 		mov	r3, #115200
 2796 000c 4360     		str	r3, [r0, #4]
 538:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2797              		.loc 1 538 3 is_stmt 1 view .LVU719
 538:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2798              		.loc 1 538 26 is_stmt 0 view .LVU720
 2799 000e 0023     		movs	r3, #0
 2800 0010 8360     		str	r3, [r0, #8]
 539:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 2801              		.loc 1 539 3 is_stmt 1 view .LVU721
 539:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 2802              		.loc 1 539 24 is_stmt 0 view .LVU722
 2803 0012 C360     		str	r3, [r0, #12]
 540:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2804              		.loc 1 540 3 is_stmt 1 view .LVU723
 540:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2805              		.loc 1 540 22 is_stmt 0 view .LVU724
 2806 0014 0361     		str	r3, [r0, #16]
 541:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2807              		.loc 1 541 3 is_stmt 1 view .LVU725
 541:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2808              		.loc 1 541 20 is_stmt 0 view .LVU726
 2809 0016 0C22     		movs	r2, #12
 2810 0018 4261     		str	r2, [r0, #20]
 542:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 2811              		.loc 1 542 3 is_stmt 1 view .LVU727
 542:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 2812              		.loc 1 542 25 is_stmt 0 view .LVU728
 2813 001a 8361     		str	r3, [r0, #24]
 543:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2814              		.loc 1 543 3 is_stmt 1 view .LVU729
 543:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2815              		.loc 1 543 28 is_stmt 0 view .LVU730
 2816 001c C361     		str	r3, [r0, #28]
 544:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2817              		.loc 1 544 3 is_stmt 1 view .LVU731
 544:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2818              		.loc 1 544 30 is_stmt 0 view .LVU732
 2819 001e 0362     		str	r3, [r0, #32]
 545:Core/Src/main.c ****   if (HAL_HalfDuplex_Init(&huart2) != HAL_OK)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 81


 2820              		.loc 1 545 3 is_stmt 1 view .LVU733
 545:Core/Src/main.c ****   if (HAL_HalfDuplex_Init(&huart2) != HAL_OK)
 2821              		.loc 1 545 38 is_stmt 0 view .LVU734
 2822 0020 4362     		str	r3, [r0, #36]
 546:Core/Src/main.c ****   {
 2823              		.loc 1 546 3 is_stmt 1 view .LVU735
 546:Core/Src/main.c ****   {
 2824              		.loc 1 546 7 is_stmt 0 view .LVU736
 2825 0022 FFF7FEFF 		bl	HAL_HalfDuplex_Init
 2826              	.LVL231:
 546:Core/Src/main.c ****   {
 2827              		.loc 1 546 6 discriminator 1 view .LVU737
 2828 0026 00B9     		cbnz	r0, .L164
 554:Core/Src/main.c **** 
 2829              		.loc 1 554 1 view .LVU738
 2830 0028 08BD     		pop	{r3, pc}
 2831              	.L164:
 548:Core/Src/main.c ****   }
 2832              		.loc 1 548 5 is_stmt 1 view .LVU739
 2833 002a FFF7FEFF 		bl	Error_Handler
 2834              	.LVL232:
 2835              	.L166:
 2836 002e 00BF     		.align	2
 2837              	.L165:
 2838 0030 00000000 		.word	huart2
 2839 0034 00440040 		.word	1073759232
 2840              		.cfi_endproc
 2841              	.LFE329:
 2843              		.section	.text.MX_ADC1_Init,"ax",%progbits
 2844              		.align	1
 2845              		.syntax unified
 2846              		.thumb
 2847              		.thumb_func
 2849              	MX_ADC1_Init:
 2850              	.LFB325:
 318:Core/Src/main.c **** 
 2851              		.loc 1 318 1 view -0
 2852              		.cfi_startproc
 2853              		@ args = 0, pretend = 0, frame = 40
 2854              		@ frame_needed = 0, uses_anonymous_args = 0
 2855 0000 00B5     		push	{lr}
 2856              		.cfi_def_cfa_offset 4
 2857              		.cfi_offset 14, -4
 2858 0002 8BB0     		sub	sp, sp, #44
 2859              		.cfi_def_cfa_offset 48
 324:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 2860              		.loc 1 324 3 view .LVU741
 324:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 2861              		.loc 1 324 24 is_stmt 0 view .LVU742
 2862 0004 0023     		movs	r3, #0
 2863 0006 0793     		str	r3, [sp, #28]
 2864 0008 0893     		str	r3, [sp, #32]
 2865 000a 0993     		str	r3, [sp, #36]
 325:Core/Src/main.c **** 
 2866              		.loc 1 325 3 is_stmt 1 view .LVU743
 325:Core/Src/main.c **** 
 2867              		.loc 1 325 26 is_stmt 0 view .LVU744
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 82


 2868 000c 0193     		str	r3, [sp, #4]
 2869 000e 0293     		str	r3, [sp, #8]
 2870 0010 0393     		str	r3, [sp, #12]
 2871 0012 0493     		str	r3, [sp, #16]
 2872 0014 0593     		str	r3, [sp, #20]
 2873 0016 0693     		str	r3, [sp, #24]
 333:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 2874              		.loc 1 333 3 is_stmt 1 view .LVU745
 333:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 2875              		.loc 1 333 18 is_stmt 0 view .LVU746
 2876 0018 1C48     		ldr	r0, .L175
 2877 001a 1D4A     		ldr	r2, .L175+4
 2878 001c 0260     		str	r2, [r0]
 334:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 2879              		.loc 1 334 3 is_stmt 1 view .LVU747
 334:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 2880              		.loc 1 334 29 is_stmt 0 view .LVU748
 2881 001e 4360     		str	r3, [r0, #4]
 335:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 2882              		.loc 1 335 3 is_stmt 1 view .LVU749
 335:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 2883              		.loc 1 335 25 is_stmt 0 view .LVU750
 2884 0020 8360     		str	r3, [r0, #8]
 336:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 2885              		.loc 1 336 3 is_stmt 1 view .LVU751
 336:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 2886              		.loc 1 336 24 is_stmt 0 view .LVU752
 2887 0022 C360     		str	r3, [r0, #12]
 337:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2888              		.loc 1 337 3 is_stmt 1 view .LVU753
 337:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2889              		.loc 1 337 27 is_stmt 0 view .LVU754
 2890 0024 0361     		str	r3, [r0, #16]
 338:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 2891              		.loc 1 338 3 is_stmt 1 view .LVU755
 338:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 2892              		.loc 1 338 27 is_stmt 0 view .LVU756
 2893 0026 0422     		movs	r2, #4
 2894 0028 4261     		str	r2, [r0, #20]
 339:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 2895              		.loc 1 339 3 is_stmt 1 view .LVU757
 339:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 2896              		.loc 1 339 31 is_stmt 0 view .LVU758
 2897 002a 0376     		strb	r3, [r0, #24]
 340:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 2898              		.loc 1 340 3 is_stmt 1 view .LVU759
 340:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 2899              		.loc 1 340 33 is_stmt 0 view .LVU760
 2900 002c 0122     		movs	r2, #1
 2901 002e 4276     		strb	r2, [r0, #25]
 341:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 2902              		.loc 1 341 3 is_stmt 1 view .LVU761
 341:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 2903              		.loc 1 341 30 is_stmt 0 view .LVU762
 2904 0030 C261     		str	r2, [r0, #28]
 342:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2905              		.loc 1 342 3 is_stmt 1 view .LVU763
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 83


 342:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2906              		.loc 1 342 36 is_stmt 0 view .LVU764
 2907 0032 80F82030 		strb	r3, [r0, #32]
 343:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2908              		.loc 1 343 3 is_stmt 1 view .LVU765
 343:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2909              		.loc 1 343 31 is_stmt 0 view .LVU766
 2910 0036 8362     		str	r3, [r0, #40]
 344:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 2911              		.loc 1 344 3 is_stmt 1 view .LVU767
 344:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 2912              		.loc 1 344 35 is_stmt 0 view .LVU768
 2913 0038 C362     		str	r3, [r0, #44]
 345:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 2914              		.loc 1 345 3 is_stmt 1 view .LVU769
 345:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 2915              		.loc 1 345 36 is_stmt 0 view .LVU770
 2916 003a 80F83030 		strb	r3, [r0, #48]
 346:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 2917              		.loc 1 346 3 is_stmt 1 view .LVU771
 346:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 2918              		.loc 1 346 22 is_stmt 0 view .LVU772
 2919 003e 4363     		str	r3, [r0, #52]
 347:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 2920              		.loc 1 347 3 is_stmt 1 view .LVU773
 347:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 2921              		.loc 1 347 31 is_stmt 0 view .LVU774
 2922 0040 80F83830 		strb	r3, [r0, #56]
 348:Core/Src/main.c ****   {
 2923              		.loc 1 348 3 is_stmt 1 view .LVU775
 348:Core/Src/main.c ****   {
 2924              		.loc 1 348 7 is_stmt 0 view .LVU776
 2925 0044 FFF7FEFF 		bl	HAL_ADC_Init
 2926              	.LVL233:
 348:Core/Src/main.c ****   {
 2927              		.loc 1 348 6 discriminator 1 view .LVU777
 2928 0048 D0B9     		cbnz	r0, .L172
 355:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 2929              		.loc 1 355 3 is_stmt 1 view .LVU778
 355:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 2930              		.loc 1 355 18 is_stmt 0 view .LVU779
 2931 004a 0023     		movs	r3, #0
 2932 004c 0793     		str	r3, [sp, #28]
 356:Core/Src/main.c ****   {
 2933              		.loc 1 356 3 is_stmt 1 view .LVU780
 356:Core/Src/main.c ****   {
 2934              		.loc 1 356 7 is_stmt 0 view .LVU781
 2935 004e 07A9     		add	r1, sp, #28
 2936 0050 0E48     		ldr	r0, .L175
 2937 0052 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 2938              	.LVL234:
 356:Core/Src/main.c ****   {
 2939              		.loc 1 356 6 discriminator 1 view .LVU782
 2940 0056 A8B9     		cbnz	r0, .L173
 363:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 2941              		.loc 1 363 3 is_stmt 1 view .LVU783
 363:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 84


 2942              		.loc 1 363 19 is_stmt 0 view .LVU784
 2943 0058 0E4B     		ldr	r3, .L175+8
 2944 005a 0193     		str	r3, [sp, #4]
 364:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 2945              		.loc 1 364 3 is_stmt 1 view .LVU785
 364:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 2946              		.loc 1 364 16 is_stmt 0 view .LVU786
 2947 005c 0623     		movs	r3, #6
 2948 005e 0293     		str	r3, [sp, #8]
 365:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 2949              		.loc 1 365 3 is_stmt 1 view .LVU787
 365:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 2950              		.loc 1 365 24 is_stmt 0 view .LVU788
 2951 0060 0023     		movs	r3, #0
 2952 0062 0393     		str	r3, [sp, #12]
 366:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 2953              		.loc 1 366 3 is_stmt 1 view .LVU789
 366:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 2954              		.loc 1 366 22 is_stmt 0 view .LVU790
 2955 0064 7F22     		movs	r2, #127
 2956 0066 0492     		str	r2, [sp, #16]
 367:Core/Src/main.c ****   sConfig.Offset = 0;
 2957              		.loc 1 367 3 is_stmt 1 view .LVU791
 367:Core/Src/main.c ****   sConfig.Offset = 0;
 2958              		.loc 1 367 24 is_stmt 0 view .LVU792
 2959 0068 0422     		movs	r2, #4
 2960 006a 0592     		str	r2, [sp, #20]
 368:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 2961              		.loc 1 368 3 is_stmt 1 view .LVU793
 368:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 2962              		.loc 1 368 18 is_stmt 0 view .LVU794
 2963 006c 0693     		str	r3, [sp, #24]
 369:Core/Src/main.c ****   {
 2964              		.loc 1 369 3 is_stmt 1 view .LVU795
 369:Core/Src/main.c ****   {
 2965              		.loc 1 369 7 is_stmt 0 view .LVU796
 2966 006e 0DEB0201 		add	r1, sp, r2
 2967 0072 0648     		ldr	r0, .L175
 2968 0074 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 2969              	.LVL235:
 369:Core/Src/main.c ****   {
 2970              		.loc 1 369 6 discriminator 1 view .LVU797
 2971 0078 30B9     		cbnz	r0, .L174
 377:Core/Src/main.c **** 
 2972              		.loc 1 377 1 view .LVU798
 2973 007a 0BB0     		add	sp, sp, #44
 2974              		.cfi_remember_state
 2975              		.cfi_def_cfa_offset 4
 2976              		@ sp needed
 2977 007c 5DF804FB 		ldr	pc, [sp], #4
 2978              	.L172:
 2979              		.cfi_restore_state
 350:Core/Src/main.c ****   }
 2980              		.loc 1 350 5 is_stmt 1 view .LVU799
 2981 0080 FFF7FEFF 		bl	Error_Handler
 2982              	.LVL236:
 2983              	.L173:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 85


 358:Core/Src/main.c ****   }
 2984              		.loc 1 358 5 view .LVU800
 2985 0084 FFF7FEFF 		bl	Error_Handler
 2986              	.LVL237:
 2987              	.L174:
 371:Core/Src/main.c ****   }
 2988              		.loc 1 371 5 view .LVU801
 2989 0088 FFF7FEFF 		bl	Error_Handler
 2990              	.LVL238:
 2991              	.L176:
 2992              		.align	2
 2993              	.L175:
 2994 008c 00000000 		.word	hadc1
 2995 0090 00000450 		.word	1342439424
 2996 0094 01000080 		.word	-2147483647
 2997              		.cfi_endproc
 2998              	.LFE325:
 3000              		.section	.text.MX_LPTIM1_Init,"ax",%progbits
 3001              		.align	1
 3002              		.syntax unified
 3003              		.thumb
 3004              		.thumb_func
 3006              	MX_LPTIM1_Init:
 3007              	.LFB326:
 385:Core/Src/main.c **** 
 3008              		.loc 1 385 1 view -0
 3009              		.cfi_startproc
 3010              		@ args = 0, pretend = 0, frame = 0
 3011              		@ frame_needed = 0, uses_anonymous_args = 0
 3012 0000 08B5     		push	{r3, lr}
 3013              		.cfi_def_cfa_offset 8
 3014              		.cfi_offset 3, -8
 3015              		.cfi_offset 14, -4
 394:Core/Src/main.c ****   hlptim1.Init.Clock.Source = LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC;
 3016              		.loc 1 394 3 view .LVU803
 394:Core/Src/main.c ****   hlptim1.Init.Clock.Source = LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC;
 3017              		.loc 1 394 20 is_stmt 0 view .LVU804
 3018 0002 0B48     		ldr	r0, .L181
 3019 0004 0B4B     		ldr	r3, .L181+4
 3020 0006 0360     		str	r3, [r0]
 395:Core/Src/main.c ****   hlptim1.Init.Clock.Prescaler = LPTIM_PRESCALER_DIV128;
 3021              		.loc 1 395 3 is_stmt 1 view .LVU805
 395:Core/Src/main.c ****   hlptim1.Init.Clock.Prescaler = LPTIM_PRESCALER_DIV128;
 3022              		.loc 1 395 29 is_stmt 0 view .LVU806
 3023 0008 0023     		movs	r3, #0
 3024 000a 4360     		str	r3, [r0, #4]
 396:Core/Src/main.c ****   hlptim1.Init.Trigger.Source = LPTIM_TRIGSOURCE_SOFTWARE;
 3025              		.loc 1 396 3 is_stmt 1 view .LVU807
 396:Core/Src/main.c ****   hlptim1.Init.Trigger.Source = LPTIM_TRIGSOURCE_SOFTWARE;
 3026              		.loc 1 396 32 is_stmt 0 view .LVU808
 3027 000c 4FF46062 		mov	r2, #3584
 3028 0010 8260     		str	r2, [r0, #8]
 397:Core/Src/main.c ****   hlptim1.Init.OutputPolarity = LPTIM_OUTPUTPOLARITY_HIGH;
 3029              		.loc 1 397 3 is_stmt 1 view .LVU809
 397:Core/Src/main.c ****   hlptim1.Init.OutputPolarity = LPTIM_OUTPUTPOLARITY_HIGH;
 3030              		.loc 1 397 31 is_stmt 0 view .LVU810
 3031 0012 4FF6FF72 		movw	r2, #65535
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 86


 3032 0016 4261     		str	r2, [r0, #20]
 398:Core/Src/main.c ****   hlptim1.Init.UpdateMode = LPTIM_UPDATE_IMMEDIATE;
 3033              		.loc 1 398 3 is_stmt 1 view .LVU811
 398:Core/Src/main.c ****   hlptim1.Init.UpdateMode = LPTIM_UPDATE_IMMEDIATE;
 3034              		.loc 1 398 31 is_stmt 0 view .LVU812
 3035 0018 0362     		str	r3, [r0, #32]
 399:Core/Src/main.c ****   hlptim1.Init.CounterSource = LPTIM_COUNTERSOURCE_INTERNAL;
 3036              		.loc 1 399 3 is_stmt 1 view .LVU813
 399:Core/Src/main.c ****   hlptim1.Init.CounterSource = LPTIM_COUNTERSOURCE_INTERNAL;
 3037              		.loc 1 399 27 is_stmt 0 view .LVU814
 3038 001a 4362     		str	r3, [r0, #36]
 400:Core/Src/main.c ****   hlptim1.Init.Input1Source = LPTIM_INPUT1SOURCE_GPIO;
 3039              		.loc 1 400 3 is_stmt 1 view .LVU815
 400:Core/Src/main.c ****   hlptim1.Init.Input1Source = LPTIM_INPUT1SOURCE_GPIO;
 3040              		.loc 1 400 30 is_stmt 0 view .LVU816
 3041 001c 8362     		str	r3, [r0, #40]
 401:Core/Src/main.c ****   hlptim1.Init.Input2Source = LPTIM_INPUT2SOURCE_GPIO;
 3042              		.loc 1 401 3 is_stmt 1 view .LVU817
 401:Core/Src/main.c ****   hlptim1.Init.Input2Source = LPTIM_INPUT2SOURCE_GPIO;
 3043              		.loc 1 401 29 is_stmt 0 view .LVU818
 3044 001e C362     		str	r3, [r0, #44]
 402:Core/Src/main.c ****   hlptim1.Init.RepetitionCounter = 0;
 3045              		.loc 1 402 3 is_stmt 1 view .LVU819
 402:Core/Src/main.c ****   hlptim1.Init.RepetitionCounter = 0;
 3046              		.loc 1 402 29 is_stmt 0 view .LVU820
 3047 0020 0363     		str	r3, [r0, #48]
 403:Core/Src/main.c ****   if (HAL_LPTIM_Init(&hlptim1) != HAL_OK)
 3048              		.loc 1 403 3 is_stmt 1 view .LVU821
 403:Core/Src/main.c ****   if (HAL_LPTIM_Init(&hlptim1) != HAL_OK)
 3049              		.loc 1 403 34 is_stmt 0 view .LVU822
 3050 0022 4363     		str	r3, [r0, #52]
 404:Core/Src/main.c ****   {
 3051              		.loc 1 404 3 is_stmt 1 view .LVU823
 404:Core/Src/main.c ****   {
 3052              		.loc 1 404 7 is_stmt 0 view .LVU824
 3053 0024 FFF7FEFF 		bl	HAL_LPTIM_Init
 3054              	.LVL239:
 404:Core/Src/main.c ****   {
 3055              		.loc 1 404 6 discriminator 1 view .LVU825
 3056 0028 00B9     		cbnz	r0, .L180
 412:Core/Src/main.c **** 
 3057              		.loc 1 412 1 view .LVU826
 3058 002a 08BD     		pop	{r3, pc}
 3059              	.L180:
 406:Core/Src/main.c ****   }
 3060              		.loc 1 406 5 is_stmt 1 view .LVU827
 3061 002c FFF7FEFF 		bl	Error_Handler
 3062              	.LVL240:
 3063              	.L182:
 3064              		.align	2
 3065              	.L181:
 3066 0030 00000000 		.word	hlptim1
 3067 0034 007C0040 		.word	1073773568
 3068              		.cfi_endproc
 3069              	.LFE326:
 3071              		.section	.text.SystemClock_Config,"ax",%progbits
 3072              		.align	1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 87


 3073              		.global	SystemClock_Config
 3074              		.syntax unified
 3075              		.thumb
 3076              		.thumb_func
 3078              	SystemClock_Config:
 3079              	.LFB324:
 261:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 3080              		.loc 1 261 1 view -0
 3081              		.cfi_startproc
 3082              		@ args = 0, pretend = 0, frame = 88
 3083              		@ frame_needed = 0, uses_anonymous_args = 0
 3084 0000 00B5     		push	{lr}
 3085              		.cfi_def_cfa_offset 4
 3086              		.cfi_offset 14, -4
 3087 0002 97B0     		sub	sp, sp, #92
 3088              		.cfi_def_cfa_offset 96
 262:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3089              		.loc 1 262 3 view .LVU829
 262:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3090              		.loc 1 262 22 is_stmt 0 view .LVU830
 3091 0004 4422     		movs	r2, #68
 3092 0006 0021     		movs	r1, #0
 3093 0008 05A8     		add	r0, sp, #20
 3094 000a FFF7FEFF 		bl	memset
 3095              	.LVL241:
 263:Core/Src/main.c **** 
 3096              		.loc 1 263 3 is_stmt 1 view .LVU831
 263:Core/Src/main.c **** 
 3097              		.loc 1 263 22 is_stmt 0 view .LVU832
 3098 000e 0023     		movs	r3, #0
 3099 0010 0093     		str	r3, [sp]
 3100 0012 0193     		str	r3, [sp, #4]
 3101 0014 0293     		str	r3, [sp, #8]
 3102 0016 0393     		str	r3, [sp, #12]
 3103 0018 0493     		str	r3, [sp, #16]
 267:Core/Src/main.c ****   {
 3104              		.loc 1 267 3 is_stmt 1 view .LVU833
 267:Core/Src/main.c ****   {
 3105              		.loc 1 267 7 is_stmt 0 view .LVU834
 3106 001a 4FF40070 		mov	r0, #512
 3107 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 3108              	.LVL242:
 267:Core/Src/main.c ****   {
 3109              		.loc 1 267 6 discriminator 1 view .LVU835
 3110 0022 38BB     		cbnz	r0, .L188
 274:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 3111              		.loc 1 274 3 is_stmt 1 view .LVU836
 3112 0024 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 3113              	.LVL243:
 275:Core/Src/main.c **** 
 3114              		.loc 1 275 3 view .LVU837
 3115 0028 154A     		ldr	r2, .L191
 3116 002a D2F89030 		ldr	r3, [r2, #144]
 3117 002e 23F01803 		bic	r3, r3, #24
 3118 0032 C2F89030 		str	r3, [r2, #144]
 280:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_MSI;
 3119              		.loc 1 280 3 view .LVU838
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 88


 280:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_MSI;
 3120              		.loc 1 280 36 is_stmt 0 view .LVU839
 3121 0036 3423     		movs	r3, #52
 3122 0038 0593     		str	r3, [sp, #20]
 282:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 3123              		.loc 1 282 3 is_stmt 1 view .LVU840
 282:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 3124              		.loc 1 282 30 is_stmt 0 view .LVU841
 3125 003a 0123     		movs	r3, #1
 3126 003c 0793     		str	r3, [sp, #28]
 283:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 3127              		.loc 1 283 3 is_stmt 1 view .LVU842
 283:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 3128              		.loc 1 283 32 is_stmt 0 view .LVU843
 3129 003e 0F93     		str	r3, [sp, #60]
 284:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 3130              		.loc 1 284 3 is_stmt 1 view .LVU844
 284:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 3131              		.loc 1 284 30 is_stmt 0 view .LVU845
 3132 0040 0C93     		str	r3, [sp, #48]
 285:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_8;
 3133              		.loc 1 285 3 is_stmt 1 view .LVU846
 285:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_8;
 3134              		.loc 1 285 41 is_stmt 0 view .LVU847
 3135 0042 0023     		movs	r3, #0
 3136 0044 0D93     		str	r3, [sp, #52]
 286:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 3137              		.loc 1 286 3 is_stmt 1 view .LVU848
 286:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 3138              		.loc 1 286 35 is_stmt 0 view .LVU849
 3139 0046 8022     		movs	r2, #128
 3140 0048 0E92     		str	r2, [sp, #56]
 287:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3141              		.loc 1 287 3 is_stmt 1 view .LVU850
 287:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3142              		.loc 1 287 34 is_stmt 0 view .LVU851
 3143 004a 1093     		str	r3, [sp, #64]
 288:Core/Src/main.c ****   {
 3144              		.loc 1 288 3 is_stmt 1 view .LVU852
 288:Core/Src/main.c ****   {
 3145              		.loc 1 288 7 is_stmt 0 view .LVU853
 3146 004c 05A8     		add	r0, sp, #20
 3147 004e FFF7FEFF 		bl	HAL_RCC_OscConfig
 3148              	.LVL244:
 288:Core/Src/main.c ****   {
 3149              		.loc 1 288 6 discriminator 1 view .LVU854
 3150 0052 88B9     		cbnz	r0, .L189
 295:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3151              		.loc 1 295 3 is_stmt 1 view .LVU855
 295:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3152              		.loc 1 295 31 is_stmt 0 view .LVU856
 3153 0054 0F23     		movs	r3, #15
 3154 0056 0093     		str	r3, [sp]
 297:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3155              		.loc 1 297 3 is_stmt 1 view .LVU857
 297:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3156              		.loc 1 297 34 is_stmt 0 view .LVU858
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 89


 3157 0058 0021     		movs	r1, #0
 3158 005a 0191     		str	r1, [sp, #4]
 298:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3159              		.loc 1 298 3 is_stmt 1 view .LVU859
 298:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3160              		.loc 1 298 35 is_stmt 0 view .LVU860
 3161 005c 0291     		str	r1, [sp, #8]
 299:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 3162              		.loc 1 299 3 is_stmt 1 view .LVU861
 299:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 3163              		.loc 1 299 36 is_stmt 0 view .LVU862
 3164 005e 0391     		str	r1, [sp, #12]
 300:Core/Src/main.c **** 
 3165              		.loc 1 300 3 is_stmt 1 view .LVU863
 300:Core/Src/main.c **** 
 3166              		.loc 1 300 36 is_stmt 0 view .LVU864
 3167 0060 0491     		str	r1, [sp, #16]
 302:Core/Src/main.c ****   {
 3168              		.loc 1 302 3 is_stmt 1 view .LVU865
 302:Core/Src/main.c ****   {
 3169              		.loc 1 302 7 is_stmt 0 view .LVU866
 3170 0062 6846     		mov	r0, sp
 3171 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3172              	.LVL245:
 302:Core/Src/main.c ****   {
 3173              		.loc 1 302 6 discriminator 1 view .LVU867
 3174 0068 40B9     		cbnz	r0, .L190
 309:Core/Src/main.c **** }
 3175              		.loc 1 309 3 is_stmt 1 view .LVU868
 3176 006a FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 3177              	.LVL246:
 310:Core/Src/main.c **** 
 3178              		.loc 1 310 1 is_stmt 0 view .LVU869
 3179 006e 17B0     		add	sp, sp, #92
 3180              		.cfi_remember_state
 3181              		.cfi_def_cfa_offset 4
 3182              		@ sp needed
 3183 0070 5DF804FB 		ldr	pc, [sp], #4
 3184              	.L188:
 3185              		.cfi_restore_state
 269:Core/Src/main.c ****   }
 3186              		.loc 1 269 5 is_stmt 1 view .LVU870
 3187 0074 FFF7FEFF 		bl	Error_Handler
 3188              	.LVL247:
 3189              	.L189:
 290:Core/Src/main.c ****   }
 3190              		.loc 1 290 5 view .LVU871
 3191 0078 FFF7FEFF 		bl	Error_Handler
 3192              	.LVL248:
 3193              	.L190:
 304:Core/Src/main.c ****   }
 3194              		.loc 1 304 5 view .LVU872
 3195 007c FFF7FEFF 		bl	Error_Handler
 3196              	.LVL249:
 3197              	.L192:
 3198              		.align	2
 3199              	.L191:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 90


 3200 0080 00100240 		.word	1073876992
 3201              		.cfi_endproc
 3202              	.LFE324:
 3204              		.section	.text.power_on,"ax",%progbits
 3205              		.align	1
 3206              		.global	power_on
 3207              		.syntax unified
 3208              		.thumb
 3209              		.thumb_func
 3211              	power_on:
 3212              	.LFB335:
 851:Core/Src/main.c ****   HAL_ResumeTick();
 3213              		.loc 1 851 20 view -0
 3214              		.cfi_startproc
 3215              		@ args = 0, pretend = 0, frame = 0
 3216              		@ frame_needed = 0, uses_anonymous_args = 0
 3217 0000 08B5     		push	{r3, lr}
 3218              		.cfi_def_cfa_offset 8
 3219              		.cfi_offset 3, -8
 3220              		.cfi_offset 14, -4
 852:Core/Src/main.c ****   SystemClock_Config();
 3221              		.loc 1 852 3 view .LVU874
 3222 0002 FFF7FEFF 		bl	HAL_ResumeTick
 3223              	.LVL250:
 853:Core/Src/main.c ****   MX_GPIO_Init();
 3224              		.loc 1 853 3 view .LVU875
 3225 0006 FFF7FEFF 		bl	SystemClock_Config
 3226              	.LVL251:
 854:Core/Src/main.c ****   MX_SPI1_Init();
 3227              		.loc 1 854 3 view .LVU876
 3228 000a FFF7FEFF 		bl	MX_GPIO_Init
 3229              	.LVL252:
 855:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 3230              		.loc 1 855 3 view .LVU877
 3231 000e FFF7FEFF 		bl	MX_SPI1_Init
 3232              	.LVL253:
 856:Core/Src/main.c ****   EPD_Init();
 3233              		.loc 1 856 3 view .LVU878
 3234 0012 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 3235              	.LVL254:
 857:Core/Src/main.c **** }
 3236              		.loc 1 857 3 view .LVU879
 3237 0016 FFF7FEFF 		bl	EPD_Init
 3238              	.LVL255:
 858:Core/Src/main.c **** 
 3239              		.loc 1 858 1 is_stmt 0 view .LVU880
 3240 001a 08BD     		pop	{r3, pc}
 3241              		.cfi_endproc
 3242              	.LFE335:
 3244              		.section	.text.get_data,"ax",%progbits
 3245              		.align	1
 3246              		.global	get_data
 3247              		.syntax unified
 3248              		.thumb
 3249              		.thumb_func
 3251              	get_data:
 3252              	.LVL256:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 91


 3253              	.LFB342:
1023:Core/Src/main.c ****   if(goto_sleep){
 3254              		.loc 1 1023 31 is_stmt 1 view -0
 3255              		.cfi_startproc
 3256              		@ args = 0, pretend = 0, frame = 0
 3257              		@ frame_needed = 0, uses_anonymous_args = 0
1023:Core/Src/main.c ****   if(goto_sleep){
 3258              		.loc 1 1023 31 is_stmt 0 view .LVU882
 3259 0000 10B5     		push	{r4, lr}
 3260              		.cfi_def_cfa_offset 8
 3261              		.cfi_offset 4, -8
 3262              		.cfi_offset 14, -4
1024:Core/Src/main.c ****     power_on();
 3263              		.loc 1 1024 3 is_stmt 1 view .LVU883
1024:Core/Src/main.c ****     power_on();
 3264              		.loc 1 1024 5 is_stmt 0 view .LVU884
 3265 0002 0446     		mov	r4, r0
 3266 0004 A0B9     		cbnz	r0, .L199
 3267              	.LVL257:
 3268              	.L196:
1028:Core/Src/main.c ****   q_push(DS18_GET()*100);
 3269              		.loc 1 1028 3 is_stmt 1 view .LVU885
 3270 0006 FFF7FEFF 		bl	q_load
 3271              	.LVL258:
1029:Core/Src/main.c ****   // q_push(DS18_GET()*100);
 3272              		.loc 1 1029 3 view .LVU886
1029:Core/Src/main.c ****   // q_push(DS18_GET()*100);
 3273              		.loc 1 1029 10 is_stmt 0 view .LVU887
 3274 000a FFF7FEFF 		bl	DS18_GET
 3275              	.LVL259:
1029:Core/Src/main.c ****   // q_push(DS18_GET()*100);
 3276              		.loc 1 1029 20 discriminator 1 view .LVU888
 3277 000e DFED0C7A 		vldr.32	s15, .L201
 3278 0012 20EE270A 		vmul.f32	s0, s0, s15
1029:Core/Src/main.c ****   // q_push(DS18_GET()*100);
 3279              		.loc 1 1029 3 discriminator 1 view .LVU889
 3280 0016 BDEEC00A 		vcvt.s32.f32	s0, s0
 3281 001a 10EE103A 		vmov	r3, s0	@ int
 3282 001e 18B2     		sxth	r0, r3
 3283 0020 FFF7FEFF 		bl	q_push
 3284              	.LVL260:
1033:Core/Src/main.c ****   q_save();
 3285              		.loc 1 1033 3 is_stmt 1 view .LVU890
 3286 0024 FFF7FEFF 		bl	plot
 3287              	.LVL261:
1034:Core/Src/main.c **** 
 3288              		.loc 1 1034 3 view .LVU891
 3289 0028 FFF7FEFF 		bl	q_save
 3290              	.LVL262:
1036:Core/Src/main.c ****     shutdown(false);
 3291              		.loc 1 1036 3 view .LVU892
1036:Core/Src/main.c ****     shutdown(false);
 3292              		.loc 1 1036 5 is_stmt 0 view .LVU893
 3293 002c 1CB9     		cbnz	r4, .L200
 3294              	.L195:
1039:Core/Src/main.c **** 
 3295              		.loc 1 1039 1 view .LVU894
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 92


 3296 002e 10BD     		pop	{r4, pc}
 3297              	.LVL263:
 3298              	.L199:
1025:Core/Src/main.c ****   }
 3299              		.loc 1 1025 5 is_stmt 1 view .LVU895
 3300 0030 FFF7FEFF 		bl	power_on
 3301              	.LVL264:
1025:Core/Src/main.c ****   }
 3302              		.loc 1 1025 5 is_stmt 0 view .LVU896
 3303 0034 E7E7     		b	.L196
 3304              	.L200:
1037:Core/Src/main.c ****   }
 3305              		.loc 1 1037 5 is_stmt 1 view .LVU897
 3306 0036 0020     		movs	r0, #0
 3307 0038 FFF7FEFF 		bl	shutdown
 3308              	.LVL265:
1039:Core/Src/main.c **** 
 3309              		.loc 1 1039 1 is_stmt 0 view .LVU898
 3310 003c F7E7     		b	.L195
 3311              	.L202:
 3312 003e 00BF     		.align	2
 3313              	.L201:
 3314 0040 0000C842 		.word	1120403456
 3315              		.cfi_endproc
 3316              	.LFE342:
 3318              		.section	.text.main,"ax",%progbits
 3319              		.align	1
 3320              		.global	main
 3321              		.syntax unified
 3322              		.thumb
 3323              		.thumb_func
 3325              	main:
 3326              	.LFB323:
 134:Core/Src/main.c **** 
 3327              		.loc 1 134 1 is_stmt 1 view -0
 3328              		.cfi_startproc
 3329              		@ args = 0, pretend = 0, frame = 0
 3330              		@ frame_needed = 0, uses_anonymous_args = 0
 3331 0000 38B5     		push	{r3, r4, r5, lr}
 3332              		.cfi_def_cfa_offset 16
 3333              		.cfi_offset 3, -16
 3334              		.cfi_offset 4, -12
 3335              		.cfi_offset 5, -8
 3336              		.cfi_offset 14, -4
 143:Core/Src/main.c **** 
 3337              		.loc 1 143 3 view .LVU900
 3338 0002 FFF7FEFF 		bl	HAL_Init
 3339              	.LVL266:
 150:Core/Src/main.c **** 
 3340              		.loc 1 150 3 view .LVU901
 3341 0006 FFF7FEFF 		bl	SystemClock_Config
 3342              	.LVL267:
 157:Core/Src/main.c ****   MX_DMA_Init();
 3343              		.loc 1 157 3 view .LVU902
 3344 000a FFF7FEFF 		bl	MX_GPIO_Init
 3345              	.LVL268:
 158:Core/Src/main.c ****   MX_SPI1_Init();
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 93


 3346              		.loc 1 158 3 view .LVU903
 3347 000e FFF7FEFF 		bl	MX_DMA_Init
 3348              	.LVL269:
 159:Core/Src/main.c ****   MX_RTC_Init();
 3349              		.loc 1 159 3 view .LVU904
 3350 0012 FFF7FEFF 		bl	MX_SPI1_Init
 3351              	.LVL270:
 160:Core/Src/main.c ****   MX_USART2_UART_Init();
 3352              		.loc 1 160 3 view .LVU905
 3353 0016 FFF7FEFF 		bl	MX_RTC_Init
 3354              	.LVL271:
 161:Core/Src/main.c ****   MX_ADC1_Init();
 3355              		.loc 1 161 3 view .LVU906
 3356 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 3357              	.LVL272:
 162:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 3358              		.loc 1 162 3 view .LVU907
 3359 001e FFF7FEFF 		bl	MX_ADC1_Init
 3360              	.LVL273:
 163:Core/Src/main.c ****   MX_LPTIM1_Init();
 3361              		.loc 1 163 3 view .LVU908
 3362 0022 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 3363              	.LVL274:
 164:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 3364              		.loc 1 164 3 view .LVU909
 3365 0026 FFF7FEFF 		bl	MX_LPTIM1_Init
 3366              	.LVL275:
 166:Core/Src/main.c ****   DS18_INIT();
 3367              		.loc 1 166 3 view .LVU910
 3368 002a 0122     		movs	r2, #1
 3369 002c 3449     		ldr	r1, .L218
 3370 002e 3548     		ldr	r0, .L218+4
 3371 0030 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 3372              	.LVL276:
 167:Core/Src/main.c ****   EPD_Init();
 3373              		.loc 1 167 3 view .LVU911
 3374 0034 FFF7FEFF 		bl	DS18_INIT
 3375              	.LVL277:
 168:Core/Src/main.c **** 
 3376              		.loc 1 168 3 view .LVU912
 3377 0038 FFF7FEFF 		bl	EPD_Init
 3378              	.LVL278:
 170:Core/Src/main.c **** 
 3379              		.loc 1 170 3 view .LVU913
 3380 003c FFF7FEFF 		bl	q_init
 3381              	.LVL279:
 172:Core/Src/main.c **** 
 3382              		.loc 1 172 2 view .LVU914
 172:Core/Src/main.c **** 
 3383              		.loc 1 172 25 is_stmt 0 view .LVU915
 3384 0040 FFF7FEFF 		bl	q_load
 3385              	.LVL280:
 174:Core/Src/main.c **** 
 3386              		.loc 1 174 2 is_stmt 1 view .LVU916
 176:Core/Src/main.c ****     // shutdown(true);
 3387              		.loc 1 176 3 view .LVU917
 176:Core/Src/main.c ****     // shutdown(true);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 94


 3388              		.loc 1 176 6 is_stmt 0 view .LVU918
 3389 0044 00B3     		cbz	r0, .L213
 3390              	.LVL281:
 3391              	.L204:
 185:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(LPTIM1_IRQn);
 3392              		.loc 1 185 3 is_stmt 1 view .LVU919
 3393 0046 0022     		movs	r2, #0
 3394 0048 1146     		mov	r1, r2
 3395 004a 4120     		movs	r0, #65
 3396 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 3397              	.LVL282:
 186:Core/Src/main.c ****   Start_Timer();
 3398              		.loc 1 186 3 view .LVU920
 3399 0050 4120     		movs	r0, #65
 3400 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 3401              	.LVL283:
 187:Core/Src/main.c **** 
 3402              		.loc 1 187 3 view .LVU921
 3403 0056 FFF7FEFF 		bl	Start_Timer
 3404              	.LVL284:
 189:Core/Src/main.c ****   // q_push(DS18_GET()*100);
 3405              		.loc 1 189 3 view .LVU922
 189:Core/Src/main.c ****   // q_push(DS18_GET()*100);
 3406              		.loc 1 189 10 is_stmt 0 view .LVU923
 3407 005a FFF7FEFF 		bl	DS18_GET
 3408              	.LVL285:
 189:Core/Src/main.c ****   // q_push(DS18_GET()*100);
 3409              		.loc 1 189 20 discriminator 1 view .LVU924
 3410 005e DFED2A7A 		vldr.32	s15, .L218+8
 3411 0062 60EE277A 		vmul.f32	s15, s0, s15
 189:Core/Src/main.c ****   // q_push(DS18_GET()*100);
 3412              		.loc 1 189 3 discriminator 1 view .LVU925
 3413 0066 FDEEE77A 		vcvt.s32.f32	s15, s15
 3414 006a 17EE903A 		vmov	r3, s15	@ int
 3415 006e 18B2     		sxth	r0, r3
 3416 0070 FFF7FEFF 		bl	q_push
 3417              	.LVL286:
 193:Core/Src/main.c ****   plot();
 3418              		.loc 1 193 3 is_stmt 1 view .LVU926
 3419 0074 FFF7FEFF 		bl	q_save
 3420              	.LVL287:
 194:Core/Src/main.c ****   if(!USB_DEVICE_IsConnected()){  
 3421              		.loc 1 194 3 view .LVU927
 3422 0078 FFF7FEFF 		bl	plot
 3423              	.LVL288:
 195:Core/Src/main.c ****     shutdown(false);
 3424              		.loc 1 195 3 view .LVU928
 195:Core/Src/main.c ****     shutdown(false);
 3425              		.loc 1 195 7 is_stmt 0 view .LVU929
 3426 007c FFF7FEFF 		bl	USB_DEVICE_IsConnected
 3427              	.LVL289:
 195:Core/Src/main.c ****     shutdown(false);
 3428              		.loc 1 195 5 discriminator 1 view .LVU930
 3429 0080 88B9     		cbnz	r0, .L210
 196:Core/Src/main.c ****   }
 3430              		.loc 1 196 5 is_stmt 1 view .LVU931
 3431 0082 FFF7FEFF 		bl	shutdown
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 95


 3432              	.LVL290:
 3433 0086 0EE0     		b	.L210
 3434              	.LVL291:
 3435              	.L213:
 181:Core/Src/main.c ****   }
 3436              		.loc 1 181 5 view .LVU932
 3437 0088 FFF7FEFF 		bl	set_time
 3438              	.LVL292:
 181:Core/Src/main.c ****   }
 3439              		.loc 1 181 5 is_stmt 0 view .LVU933
 3440 008c DBE7     		b	.L204
 3441              	.L206:
 211:Core/Src/main.c ****       initialise_usb_connection = false;
 3442              		.loc 1 211 5 is_stmt 1 view .LVU934
 211:Core/Src/main.c ****       initialise_usb_connection = false;
 3443              		.loc 1 211 8 is_stmt 0 view .LVU935
 3444 008e 1F4B     		ldr	r3, .L218+12
 3445 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 211:Core/Src/main.c ****       initialise_usb_connection = false;
 3446              		.loc 1 211 7 view .LVU936
 3447 0092 D3B9     		cbnz	r3, .L214
 3448              	.L207:
 230:Core/Src/main.c ****       send_usb_data = false;
 3449              		.loc 1 230 5 is_stmt 1 view .LVU937
 230:Core/Src/main.c ****       send_usb_data = false;
 3450              		.loc 1 230 8 is_stmt 0 view .LVU938
 3451 0094 1E4B     		ldr	r3, .L218+16
 3452 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 230:Core/Src/main.c ****       send_usb_data = false;
 3453              		.loc 1 230 7 view .LVU939
 3454 0098 0BBB     		cbnz	r3, .L215
 3455              	.L208:
 235:Core/Src/main.c ****       set_rtc = false;
 3456              		.loc 1 235 5 is_stmt 1 view .LVU940
 235:Core/Src/main.c ****       set_rtc = false;
 3457              		.loc 1 235 8 is_stmt 0 view .LVU941
 3458 009a 1E4B     		ldr	r3, .L218+20
 3459 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 235:Core/Src/main.c ****       set_rtc = false;
 3460              		.loc 1 235 7 view .LVU942
 3461 009e 23BB     		cbnz	r3, .L216
 3462              	.L209:
 246:Core/Src/main.c ****       HAL_PWREx_EnterSTOP2Mode(PWR_STOPENTRY_WFI);
 3463              		.loc 1 246 5 is_stmt 1 view .LVU943
 246:Core/Src/main.c ****       HAL_PWREx_EnterSTOP2Mode(PWR_STOPENTRY_WFI);
 3464              		.loc 1 246 8 is_stmt 0 view .LVU944
 3465 00a0 1D4B     		ldr	r3, .L218+24
 3466 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 246:Core/Src/main.c ****       HAL_PWREx_EnterSTOP2Mode(PWR_STOPENTRY_WFI);
 3467              		.loc 1 246 7 view .LVU945
 3468 00a4 3BBB     		cbnz	r3, .L217
 3469              	.L210:
 202:Core/Src/main.c ****   { 
 3470              		.loc 1 202 3 is_stmt 1 view .LVU946
 204:Core/Src/main.c ****       measure = false;
 3471              		.loc 1 204 5 view .LVU947
 204:Core/Src/main.c ****       measure = false;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 96


 3472              		.loc 1 204 8 is_stmt 0 view .LVU948
 3473 00a6 1D4B     		ldr	r3, .L218+28
 3474 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 204:Core/Src/main.c ****       measure = false;
 3475              		.loc 1 204 7 view .LVU949
 3476 00aa 002B     		cmp	r3, #0
 3477 00ac EFD0     		beq	.L206
 205:Core/Src/main.c ****       get_data(!send_usb);
 3478              		.loc 1 205 7 is_stmt 1 view .LVU950
 205:Core/Src/main.c ****       get_data(!send_usb);
 3479              		.loc 1 205 15 is_stmt 0 view .LVU951
 3480 00ae 0025     		movs	r5, #0
 3481 00b0 1A4B     		ldr	r3, .L218+28
 3482 00b2 1D70     		strb	r5, [r3]
 206:Core/Src/main.c ****       send_usb = false;
 3483              		.loc 1 206 7 is_stmt 1 view .LVU952
 3484 00b4 1A4C     		ldr	r4, .L218+32
 3485 00b6 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 3486 00b8 80F00100 		eor	r0, r0, #1
 3487 00bc FFF7FEFF 		bl	get_data
 3488              	.LVL293:
 207:Core/Src/main.c ****       ready = true;
 3489              		.loc 1 207 7 view .LVU953
 207:Core/Src/main.c ****       ready = true;
 3490              		.loc 1 207 16 is_stmt 0 view .LVU954
 3491 00c0 2570     		strb	r5, [r4]
 208:Core/Src/main.c ****     }
 3492              		.loc 1 208 7 is_stmt 1 view .LVU955
 208:Core/Src/main.c ****     }
 3493              		.loc 1 208 13 is_stmt 0 view .LVU956
 3494 00c2 184B     		ldr	r3, .L218+36
 3495 00c4 0122     		movs	r2, #1
 3496 00c6 1A70     		strb	r2, [r3]
 3497 00c8 E1E7     		b	.L206
 3498              	.L214:
 212:Core/Src/main.c ****       power_on();
 3499              		.loc 1 212 7 is_stmt 1 view .LVU957
 212:Core/Src/main.c ****       power_on();
 3500              		.loc 1 212 33 is_stmt 0 view .LVU958
 3501 00ca 104B     		ldr	r3, .L218+12
 3502 00cc 0022     		movs	r2, #0
 3503 00ce 1A70     		strb	r2, [r3]
 213:Core/Src/main.c ****       usb_conn_tmr = HAL_GetTick();
 3504              		.loc 1 213 7 is_stmt 1 view .LVU959
 3505 00d0 FFF7FEFF 		bl	power_on
 3506              	.LVL294:
 214:Core/Src/main.c **** 
 3507              		.loc 1 214 7 view .LVU960
 214:Core/Src/main.c **** 
 3508              		.loc 1 214 22 is_stmt 0 view .LVU961
 3509 00d4 FFF7FEFF 		bl	HAL_GetTick
 3510              	.LVL295:
 214:Core/Src/main.c **** 
 3511              		.loc 1 214 20 discriminator 1 view .LVU962
 3512 00d8 134B     		ldr	r3, .L218+40
 3513 00da 1860     		str	r0, [r3]
 3514 00dc DAE7     		b	.L207
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 97


 3515              	.L215:
 231:Core/Src/main.c ****       USB_SendAllData();
 3516              		.loc 1 231 7 is_stmt 1 view .LVU963
 231:Core/Src/main.c ****       USB_SendAllData();
 3517              		.loc 1 231 21 is_stmt 0 view .LVU964
 3518 00de 0C4B     		ldr	r3, .L218+16
 3519 00e0 0022     		movs	r2, #0
 3520 00e2 1A70     		strb	r2, [r3]
 232:Core/Src/main.c ****     }
 3521              		.loc 1 232 7 is_stmt 1 view .LVU965
 3522 00e4 FFF7FEFF 		bl	USB_SendAllData
 3523              	.LVL296:
 3524 00e8 D7E7     		b	.L208
 3525              	.L216:
 236:Core/Src/main.c ****       syncRTC();
 3526              		.loc 1 236 7 view .LVU966
 236:Core/Src/main.c ****       syncRTC();
 3527              		.loc 1 236 15 is_stmt 0 view .LVU967
 3528 00ea 0A4B     		ldr	r3, .L218+20
 3529 00ec 0022     		movs	r2, #0
 3530 00ee 1A70     		strb	r2, [r3]
 237:Core/Src/main.c ****     }
 3531              		.loc 1 237 7 is_stmt 1 view .LVU968
 3532 00f0 FFF7FEFF 		bl	syncRTC
 3533              	.LVL297:
 3534 00f4 D4E7     		b	.L209
 3535              	.L217:
 247:Core/Src/main.c ****     }
 3536              		.loc 1 247 7 view .LVU969
 3537 00f6 0120     		movs	r0, #1
 3538 00f8 FFF7FEFF 		bl	HAL_PWREx_EnterSTOP2Mode
 3539              	.LVL298:
 3540 00fc D3E7     		b	.L210
 3541              	.L219:
 3542 00fe 00BF     		.align	2
 3543              	.L218:
 3544 0100 00000000 		.word	adcData
 3545 0104 00000000 		.word	hadc1
 3546 0108 0000C842 		.word	1120403456
 3547 010c 00000000 		.word	initialise_usb_connection
 3548 0110 00000000 		.word	send_usb_data
 3549 0114 00000000 		.word	set_rtc
 3550 0118 00000000 		.word	go_to_sleep
 3551 011c 00000000 		.word	measure
 3552 0120 00000000 		.word	send_usb
 3553 0124 00000000 		.word	ready
 3554 0128 00000000 		.word	usb_conn_tmr
 3555              		.cfi_endproc
 3556              	.LFE323:
 3558              		.global	seconds_passed
 3559              		.section	.bss.seconds_passed,"aw",%nobits
 3560              		.align	2
 3563              	seconds_passed:
 3564 0000 00000000 		.space	4
 3565              		.global	usb_conn_tmr
 3566              		.section	.bss.usb_conn_tmr,"aw",%nobits
 3567              		.align	2
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 98


 3570              	usb_conn_tmr:
 3571 0000 00000000 		.space	4
 3572              		.global	rtc_buf
 3573              		.section	.bss.rtc_buf,"aw",%nobits
 3574              		.align	2
 3577              	rtc_buf:
 3578 0000 00000000 		.space	30
 3578      00000000 
 3578      00000000 
 3578      00000000 
 3578      00000000 
 3579              		.global	set_rtc
 3580              		.section	.bss.set_rtc,"aw",%nobits
 3583              	set_rtc:
 3584 0000 00       		.space	1
 3585              		.global	go_to_sleep
 3586              		.section	.bss.go_to_sleep,"aw",%nobits
 3589              	go_to_sleep:
 3590 0000 00       		.space	1
 3591              		.global	initialise_usb_connection
 3592              		.section	.bss.initialise_usb_connection,"aw",%nobits
 3595              	initialise_usb_connection:
 3596 0000 00       		.space	1
 3597              		.global	ready
 3598              		.section	.bss.ready,"aw",%nobits
 3601              	ready:
 3602 0000 00       		.space	1
 3603              		.global	measure
 3604              		.section	.bss.measure,"aw",%nobits
 3607              	measure:
 3608 0000 00       		.space	1
 3609              		.global	send_usb_data
 3610              		.section	.bss.send_usb_data,"aw",%nobits
 3613              	send_usb_data:
 3614 0000 00       		.space	1
 3615              		.global	send_usb
 3616              		.section	.bss.send_usb,"aw",%nobits
 3619              	send_usb:
 3620 0000 00       		.space	1
 3621              		.global	BlackImage
 3622              		.section	.bss.BlackImage,"aw",%nobits
 3623              		.align	2
 3626              	BlackImage:
 3627 0000 00000000 		.space	4000
 3627      00000000 
 3627      00000000 
 3627      00000000 
 3627      00000000 
 3628              		.global	temp
 3629              		.section	.bss.temp,"aw",%nobits
 3630              		.align	2
 3633              	temp:
 3634 0000 00000000 		.space	4
 3635              		.global	temperatureSensor
 3636              		.section	.bss.temperatureSensor,"aw",%nobits
 3637              		.align	2
 3640              	temperatureSensor:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 99


 3641 0000 00000000 		.space	24
 3641      00000000 
 3641      00000000 
 3641      00000000 
 3641      00000000 
 3642              		.global	adcData
 3643              		.section	.bss.adcData,"aw",%nobits
 3644              		.align	1
 3647              	adcData:
 3648 0000 0000     		.space	2
 3649              		.global	mcuVoltage
 3650              		.section	.bss.mcuVoltage,"aw",%nobits
 3651              		.align	2
 3654              	mcuVoltage:
 3655 0000 00000000 		.space	4
 3656              		.global	huart2
 3657              		.section	.bss.huart2,"aw",%nobits
 3658              		.align	2
 3661              	huart2:
 3662 0000 00000000 		.space	136
 3662      00000000 
 3662      00000000 
 3662      00000000 
 3662      00000000 
 3663              		.global	hspi1
 3664              		.section	.bss.hspi1,"aw",%nobits
 3665              		.align	2
 3668              	hspi1:
 3669 0000 00000000 		.space	100
 3669      00000000 
 3669      00000000 
 3669      00000000 
 3669      00000000 
 3670              		.global	hrtc
 3671              		.section	.bss.hrtc,"aw",%nobits
 3672              		.align	2
 3675              	hrtc:
 3676 0000 00000000 		.space	44
 3676      00000000 
 3676      00000000 
 3676      00000000 
 3676      00000000 
 3677              		.global	hlptim1
 3678              		.section	.bss.hlptim1,"aw",%nobits
 3679              		.align	2
 3682              	hlptim1:
 3683 0000 00000000 		.space	60
 3683      00000000 
 3683      00000000 
 3683      00000000 
 3683      00000000 
 3684              		.global	hdma_adc1
 3685              		.section	.bss.hdma_adc1,"aw",%nobits
 3686              		.align	2
 3689              	hdma_adc1:
 3690 0000 00000000 		.space	72
 3690      00000000 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 100


 3690      00000000 
 3690      00000000 
 3690      00000000 
 3691              		.global	hadc1
 3692              		.section	.bss.hadc1,"aw",%nobits
 3693              		.align	2
 3696              	hadc1:
 3697 0000 00000000 		.space	100
 3697      00000000 
 3697      00000000 
 3697      00000000 
 3697      00000000 
 3698              		.global	dead_batt_26x16
 3699              		.section	.rodata.dead_batt_26x16,"a"
 3700              		.align	2
 3703              	dead_batt_26x16:
 3704 0000 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\001\001\001\001"
 3704      01010101 
 3704      01010101 
 3704      01
 3705 000d 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\001\001\001\001"
 3705      01010101 
 3705      01010101 
 3705      01
 3706 001a 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\001\001\001\001"
 3706      01010101 
 3706      01010101 
 3706      01
 3707 0027 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\001\001\001\001"
 3707      01010101 
 3707      01010101 
 3707      01
 3708 0034 01010100 		.ascii	"\001\001\001\000\000\000\000\000\000\000\000\000\000"
 3708      00000000 
 3708      00000000 
 3708      00
 3709 0041 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\001\001\001\001"
 3709      00000000 
 3709      00010101 
 3709      01
 3710 004e 01010000 		.ascii	"\001\001\000\000\001\001\001\001\001\001\001\001\001"
 3710      01010101 
 3710      01010101 
 3710      01
 3711 005b 01010101 		.ascii	"\001\001\001\001\001\001\001\001\000\000\001\001\001"
 3711      01010101 
 3711      00000101 
 3711      01
 3712 0068 01010000 		.ascii	"\001\001\000\000\001\000\000\001\001\001\001\001\001"
 3712      01000001 
 3712      01010101 
 3712      01
 3713 0075 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\000\001\001\001"
 3713      01010101 
 3713      01000101 
 3713      01
 3714 0082 01010000 		.ascii	"\001\001\000\000\001\000\000\001\001\001\001\001\001"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 101


 3714      01000001 
 3714      01010101 
 3714      01
 3715 008f 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\000\001\001\001"
 3715      01010101 
 3715      01000101 
 3715      01
 3716 009c 01010000 		.ascii	"\001\001\000\000\001\000\000\001\001\001\001\001\001"
 3716      01000001 
 3716      01010101 
 3716      01
 3717 00a9 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\000\000\000\001"
 3717      01010101 
 3717      01000000 
 3717      01
 3718 00b6 01010000 		.ascii	"\001\001\000\000\001\000\000\001\001\001\001\001\001"
 3718      01000001 
 3718      01010101 
 3718      01
 3719 00c3 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\000\000\000\001"
 3719      01010101 
 3719      01000000 
 3719      01
 3720 00d0 01010000 		.ascii	"\001\001\000\000\001\000\000\001\001\001\001\001\001"
 3720      01000001 
 3720      01010101 
 3720      01
 3721 00dd 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\000\000\000\001"
 3721      01010101 
 3721      01000000 
 3721      01
 3722 00ea 01010000 		.ascii	"\001\001\000\000\001\000\000\001\001\001\001\001\001"
 3722      01000001 
 3722      01010101 
 3722      01
 3723 00f7 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\000\000\000\001"
 3723      01010101 
 3723      01000000 
 3723      01
 3724 0104 01010000 		.ascii	"\001\001\000\000\001\000\000\001\001\001\001\001\001"
 3724      01000001 
 3724      01010101 
 3724      01
 3725 0111 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\000\000\000\001"
 3725      01010101 
 3725      01000000 
 3725      01
 3726 011e 01010000 		.ascii	"\001\001\000\000\001\000\000\001\001\001\001\001\001"
 3726      01000001 
 3726      01010101 
 3726      01
 3727 012b 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\000\001\001\001"
 3727      01010101 
 3727      01000101 
 3727      01
 3728 0138 01010000 		.ascii	"\001\001\000\000\001\000\000\001\001\001\001\001\001"
 3728      01000001 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 102


 3728      01010101 
 3728      01
 3729 0145 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\000\001\001\001"
 3729      01010101 
 3729      01000101 
 3729      01
 3730 0152 01010000 		.ascii	"\001\001\000\000\001\001\001\001\001\001\001\001\001"
 3730      01010101 
 3730      01010101 
 3730      01
 3731 015f 01010101 		.ascii	"\001\001\001\001\001\001\001\001\000\000\001\001\001"
 3731      01010101 
 3731      00000101 
 3731      01
 3732 016c 01010100 		.ascii	"\001\001\001\000\000\000\000\000\000\000\000\000\000"
 3732      00000000 
 3732      00000000 
 3732      00
 3733 0179 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\001\001\001\001"
 3733      00000000 
 3733      00010101 
 3733      01
 3734 0186 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\001\001\001\001"
 3734      01010101 
 3734      01010101 
 3734      01
 3735 0193 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\001\001\001\001"
 3735      01010101 
 3735      01010101 
 3735      01
 3736              		.text
 3737              	.Letext0:
 3738              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l412xx.h"
 3739              		.file 4 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/ma
 3740              		.file 5 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/sy
 3741              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 3742              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 3743              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 3744              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 3745              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 3746              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 3747              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 3748              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_lptim.h"
 3749              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rtc.h"
 3750              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 3751              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 3752              		.file 17 "Core/Inc/Fonts/../Fonts/fonts.h"
 3753              		.file 18 "Core/Inc/EPD_GUI.h"
 3754              		.file 19 "Core/Inc/bitmaps.h"
 3755              		.file 20 "Core/Inc/ds18b20.h"
 3756              		.file 21 "Core/Inc/buttons.h"
 3757              		.file 22 "Core/Inc/USB_storage.h"
 3758              		.file 23 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/s
 3759              		.file 24 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rtc_ex.h"
 3760              		.file 25 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/s
 3761              		.file 26 "USB_DEVICE/App/usbd_cdc_if.h"
 3762              		.file 27 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 103


 3763              		.file 28 "Core/Inc/EPD.h"
 3764              		.file 29 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/s
 3765              		.file 30 "Core/Inc/queue.h"
 3766              		.file 31 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 3767              		.file 32 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 3768              		.file 33 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 3769              		.file 34 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 3770              		.file 35 "USB_DEVICE/App/usb_device.h"
 3771              		.file 36 "<built-in>"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 104


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:21     .text.MX_DMA_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:26     .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:71     .text.MX_DMA_Init:00000030 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:76     .text.MX_GPIO_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:81     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:355    .text.MX_GPIO_Init:00000158 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:362    .text.map:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:368    .text.map:00000000 map
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:430    .text.shutdown:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:436    .text.shutdown:00000000 shutdown
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:507    .text.shutdown:00000050 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3668   .bss.hspi1:00000000 hspi1
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3589   .bss.go_to_sleep:00000000 go_to_sleep
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:514    .text.Start_Timer:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:520    .text.Start_Timer:00000000 Start_Timer
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:540    .text.Start_Timer:00000010 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3682   .bss.hlptim1:00000000 hlptim1
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:545    .text.Start_Next_Interval:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:551    .text.Start_Next_Interval:00000000 Start_Next_Interval
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:564    .text.DS18_INIT:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:570    .text.DS18_INIT:00000000 DS18_INIT
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:636    .text.DS18_INIT:0000004c $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3640   .bss.temperatureSensor:00000000 temperatureSensor
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3661   .bss.huart2:00000000 huart2
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:642    .text.DS18_GET:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:648    .text.DS18_GET:00000000 DS18_GET
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:691    .text.DS18_GET:00000030 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:696    .rodata.set_time.str1.4:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:700    .text.set_time:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:706    .text.set_time:00000000 set_time
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:865    .text.set_time:000000dc $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3675   .bss.hrtc:00000000 hrtc
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:873    .text.timestamp_to_time:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:879    .text.timestamp_to_time:00000000 timestamp_to_time
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:933    .text.timestamp_to_time:00000034 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:941    .rodata.plot.str1.4:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:963    .text.plot:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:969    .text.plot:00000000 plot
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:1528   .text.plot:000002dc $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3626   .bss.BlackImage:00000000 BlackImage
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:1540   .text.plot:000002fc $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:1942   .text.plot:00000568 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3647   .bss.adcData:00000000 adcData
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3654   .bss.mcuVoltage:00000000 mcuVoltage
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3703   .rodata.dead_batt_26x16:00000000 dead_batt_26x16
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:1962   .rodata.USB_CDC_RxHandler.str1.4:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:1966   .text.USB_CDC_RxHandler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:1972   .text.USB_CDC_RxHandler:00000000 USB_CDC_RxHandler
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2046   .text.USB_CDC_RxHandler:00000050 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3613   .bss.send_usb_data:00000000 send_usb_data
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3583   .bss.set_rtc:00000000 set_rtc
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3577   .bss.rtc_buf:00000000 rtc_buf
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2054   .rodata.syncRTC.str1.4:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2058   .text.syncRTC:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2064   .text.syncRTC:00000000 syncRTC
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 105


C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2197   .text.syncRTC:000000b8 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2205   .rodata.USB_SendAllData.str1.4:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2212   .text.USB_SendAllData:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2218   .text.USB_SendAllData:00000000 USB_SendAllData
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2338   .text.USB_SendAllData:0000007c $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2344   .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2350   .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2381   .text.HAL_GPIO_EXTI_Callback:00000010 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3595   .bss.initialise_usb_connection:00000000 initialise_usb_connection
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2386   .text.USB_DEVICE_IsConnected:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2392   .text.USB_DEVICE_IsConnected:00000000 USB_DEVICE_IsConnected
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2416   .text.USB_DEVICE_IsConnected:00000014 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2421   .text.HAL_LPTIM_AutoReloadMatchCallback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2427   .text.HAL_LPTIM_AutoReloadMatchCallback:00000000 HAL_LPTIM_AutoReloadMatchCallback
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2483   .text.HAL_LPTIM_AutoReloadMatchCallback:00000030 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3563   .bss.seconds_passed:00000000 seconds_passed
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3607   .bss.measure:00000000 measure
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3601   .bss.ready:00000000 ready
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3619   .bss.send_usb:00000000 send_usb
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2492   .text.Error_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2498   .text.Error_Handler:00000000 Error_Handler
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2530   .text.MX_SPI1_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2535   .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2612   .text.MX_SPI1_Init:00000048 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2618   .text.MX_RTC_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2623   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2766   .text.MX_RTC_Init:00000098 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2773   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2778   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2838   .text.MX_USART2_UART_Init:00000030 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2844   .text.MX_ADC1_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2849   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:2994   .text.MX_ADC1_Init:0000008c $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3696   .bss.hadc1:00000000 hadc1
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3001   .text.MX_LPTIM1_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3006   .text.MX_LPTIM1_Init:00000000 MX_LPTIM1_Init
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3066   .text.MX_LPTIM1_Init:00000030 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3072   .text.SystemClock_Config:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3078   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3200   .text.SystemClock_Config:00000080 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3205   .text.power_on:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3211   .text.power_on:00000000 power_on
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3245   .text.get_data:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3251   .text.get_data:00000000 get_data
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3314   .text.get_data:00000040 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3319   .text.main:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3325   .text.main:00000000 main
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3544   .text.main:00000100 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3570   .bss.usb_conn_tmr:00000000 usb_conn_tmr
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3560   .bss.seconds_passed:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3567   .bss.usb_conn_tmr:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3574   .bss.rtc_buf:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3584   .bss.set_rtc:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3590   .bss.go_to_sleep:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3596   .bss.initialise_usb_connection:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3602   .bss.ready:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3608   .bss.measure:00000000 $d
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 106


C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3614   .bss.send_usb_data:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3620   .bss.send_usb:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3623   .bss.BlackImage:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3633   .bss.temp:00000000 temp
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3630   .bss.temp:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3637   .bss.temperatureSensor:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3644   .bss.adcData:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3651   .bss.mcuVoltage:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3658   .bss.huart2:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3665   .bss.hspi1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3672   .bss.hrtc:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3679   .bss.hlptim1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3689   .bss.hdma_adc1:00000000 hdma_adc1
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3686   .bss.hdma_adc1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3693   .bss.hadc1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s:3700   .rodata.dead_batt_26x16:00000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_WritePin
HAL_GPIO_Init
EPD_Sleep
EPD_Exit
HAL_SPI_DeInit
HAL_SuspendTick
HAL_PWREx_EnterSTOP2Mode
HAL_LPTIM_Counter_Start_IT
DS18B20_Init
DS18B20_InitializationCommand
DS18B20_ReadRom
DS18B20_ReadScratchpad
DS18B20_SkipRom
DS18B20_WriteScratchpad
DS18B20_ConvertT
HAL_GetTick
tick
isClicked
HAL_RTC_SetDate
HAL_RTC_SetTime
EPD_NewImage
EPD_SelectImage
EPD_Clear
q_get
q_len
EPD_DrawLine
sprintf
EPD_SetRotate
EPD_DrawString_EN
HAL_RTCEx_BKUPRead
Font8
__aeabi_i2d
__aeabi_ddiv
__aeabi_d2f
HAL_RTC_GetTime
HAL_RTC_GetDate
EPD_DrawDate
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQS0ADX.s 			page 107


EPD_Display_Base
HAL_Delay
EPD_DrawBMP
Font12
Font16
CDC_Transmit_FS
atoi
HAL_PWR_EnableBkUpAccess
HAL_RTCEx_BKUPWrite
UDISK_len
UDISK_get
UDISK_tst
HAL_GPIO_ReadPin
HAL_SPI_Init
HAL_RTC_Init
HAL_HalfDuplex_Init
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_LPTIM_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_EnableMSIPLLMode
HAL_ResumeTick
MX_USB_DEVICE_Init
EPD_Init
q_load
q_push
q_save
HAL_Init
HAL_ADC_Start_DMA
q_init
