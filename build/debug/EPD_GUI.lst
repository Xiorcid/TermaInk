ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"EPD_GUI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/EPD_GUI.c"
  20              		.section	.text.EPD_NewImage,"ax",%progbits
  21              		.align	1
  22              		.global	EPD_NewImage
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	EPD_NewImage:
  28              	.LVL0:
  29              	.LFB322:
   1:Core/Src/EPD_GUI.c **** /******************************************************************************
   2:Core/Src/EPD_GUI.c **** * | File      	:   GUI_Paint.c
   3:Core/Src/EPD_GUI.c **** * | Author      :   Waveshare electronics
   4:Core/Src/EPD_GUI.c **** * | Function    :	Achieve drawing: draw points, lines, boxes, circles and
   5:Core/Src/EPD_GUI.c **** *                   their size, solid dotted line, solid rectangle hollow
   6:Core/Src/EPD_GUI.c **** *                   rectangle, solid circle hollow circle.
   7:Core/Src/EPD_GUI.c **** * | Info        :
   8:Core/Src/EPD_GUI.c **** *   Achieve display characters: Display a single character, string, number
   9:Core/Src/EPD_GUI.c **** *   Achieve time display: adaptive size display time minutes and seconds
  10:Core/Src/EPD_GUI.c **** *----------------
  11:Core/Src/EPD_GUI.c **** * |	This version:   V3.1
  12:Core/Src/EPD_GUI.c **** * | Date        :   2020-07-08
  13:Core/Src/EPD_GUI.c **** * | Info        :
  14:Core/Src/EPD_GUI.c **** * -----------------------------------------------------------------------------
  15:Core/Src/EPD_GUI.c **** * V3.1(2020-07-08):
  16:Core/Src/EPD_GUI.c **** * 1.Change: EPD_SetScale(UBYTE scale)
  17:Core/Src/EPD_GUI.c **** *		 Add scale 7 for 5.65f e-Parper
  18:Core/Src/EPD_GUI.c **** * 2.Change: EPD_SetPixel(UWORD Xpoint, UWORD Ypoint, UWORD Color)
  19:Core/Src/EPD_GUI.c **** *		 Add the branch for scale 7
  20:Core/Src/EPD_GUI.c **** * 3.Change: EPD_Clear(UWORD Color)
  21:Core/Src/EPD_GUI.c **** *		 Add the branch for scale 7
  22:Core/Src/EPD_GUI.c **** *
  23:Core/Src/EPD_GUI.c **** * -----------------------------------------------------------------------------
  24:Core/Src/EPD_GUI.c **** * V3.0(2019-04-18):
  25:Core/Src/EPD_GUI.c **** * 1.Change: 
  26:Core/Src/EPD_GUI.c **** *    EPD_DrawPoint(..., DOT_STYLE DOT_STYLE)
  27:Core/Src/EPD_GUI.c **** * => EPD_DrawPoint(..., DOT_STYLE Dot_Style)
  28:Core/Src/EPD_GUI.c **** *    EPD_DrawLine(..., LINE_STYLE Line_Style, DOT_PIXEL Dot_Pixel)
  29:Core/Src/EPD_GUI.c **** * => EPD_DrawLine(..., DOT_PIXEL Line_width, LINE_STYLE Line_Style)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 2


  30:Core/Src/EPD_GUI.c **** *    EPD_DrawRectangle(..., DRAW_FILL Filled, DOT_PIXEL Dot_Pixel)
  31:Core/Src/EPD_GUI.c **** * => EPD_DrawRectangle(..., DOT_PIXEL Line_width, DRAW_FILL Draw_Fill)
  32:Core/Src/EPD_GUI.c **** *    EPD_DrawCircle(..., DRAW_FILL Draw_Fill, DOT_PIXEL Dot_Pixel)
  33:Core/Src/EPD_GUI.c **** * => EPD_DrawCircle(..., DOT_PIXEL Line_width, DRAW_FILL Draw_Filll)
  34:Core/Src/EPD_GUI.c **** *
  35:Core/Src/EPD_GUI.c **** * -----------------------------------------------------------------------------
  36:Core/Src/EPD_GUI.c **** * V2.0(2018-11-15):
  37:Core/Src/EPD_GUI.c **** * 1.add: EPD_NewImage()
  38:Core/Src/EPD_GUI.c **** *    Create an image's properties
  39:Core/Src/EPD_GUI.c **** * 2.add: EPD_SelectImage()
  40:Core/Src/EPD_GUI.c **** *    Select the picture to be drawn
  41:Core/Src/EPD_GUI.c **** * 3.add: EPD_SetRotate()
  42:Core/Src/EPD_GUI.c **** *    Set the direction of the cache    
  43:Core/Src/EPD_GUI.c **** * 4.add: EPD_RotateImage() 
  44:Core/Src/EPD_GUI.c **** *    Can flip the picture, Support 0-360 degrees, 
  45:Core/Src/EPD_GUI.c **** *    but only 90.180.270 rotation is better
  46:Core/Src/EPD_GUI.c **** * 4.add: EPD_SetMirroring() 
  47:Core/Src/EPD_GUI.c **** *    Can Mirroring the picture, horizontal, vertical, origin
  48:Core/Src/EPD_GUI.c **** * 5.add: EPD_DrawString_CN() 
  49:Core/Src/EPD_GUI.c **** *    Can display Chinese(GB1312)   
  50:Core/Src/EPD_GUI.c **** *
  51:Core/Src/EPD_GUI.c **** * ----------------------------------------------------------------------------- 
  52:Core/Src/EPD_GUI.c **** * V1.0(2018-07-17):
  53:Core/Src/EPD_GUI.c **** *   Create library
  54:Core/Src/EPD_GUI.c **** *
  55:Core/Src/EPD_GUI.c **** * Permission is hereby granted, free of charge, to any person obtaining a copy
  56:Core/Src/EPD_GUI.c **** * of this software and associated documnetation files (the "Software"), to deal
  57:Core/Src/EPD_GUI.c **** * in the Software without restriction, including without limitation the rights
  58:Core/Src/EPD_GUI.c **** * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  59:Core/Src/EPD_GUI.c **** * copies of the Software, and to permit persons to  whom the Software is
  60:Core/Src/EPD_GUI.c **** * furished to do so, subject to the following conditions:
  61:Core/Src/EPD_GUI.c **** *
  62:Core/Src/EPD_GUI.c **** * The above copyright notice and this permission notice shall be included in
  63:Core/Src/EPD_GUI.c **** * all copies or substantial portions of the Software.
  64:Core/Src/EPD_GUI.c **** *
  65:Core/Src/EPD_GUI.c **** * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  66:Core/Src/EPD_GUI.c **** * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  67:Core/Src/EPD_GUI.c **** * FITNESS OR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  68:Core/Src/EPD_GUI.c **** * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  69:Core/Src/EPD_GUI.c **** * LIABILITY WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  70:Core/Src/EPD_GUI.c **** * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  71:Core/Src/EPD_GUI.c **** * THE SOFTWARE.
  72:Core/Src/EPD_GUI.c **** *
  73:Core/Src/EPD_GUI.c **** ******************************************************************************/
  74:Core/Src/EPD_GUI.c **** #include "EPD_GUI.h"
  75:Core/Src/EPD_GUI.c **** #include "EPD_Conf.h"
  76:Core/Src/EPD_GUI.c **** #include <stdint.h>
  77:Core/Src/EPD_GUI.c **** #include <stdlib.h>
  78:Core/Src/EPD_GUI.c **** #include <string.h> //memset()
  79:Core/Src/EPD_GUI.c **** #include <math.h>
  80:Core/Src/EPD_GUI.c **** 
  81:Core/Src/EPD_GUI.c **** PAINT Paint;
  82:Core/Src/EPD_GUI.c **** 
  83:Core/Src/EPD_GUI.c **** /******************************************************************************
  84:Core/Src/EPD_GUI.c **** function: Create Image
  85:Core/Src/EPD_GUI.c **** parameter:
  86:Core/Src/EPD_GUI.c ****     image   :   Pointer to the image cache
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 3


  87:Core/Src/EPD_GUI.c ****     width   :   The width of the picture
  88:Core/Src/EPD_GUI.c ****     Height  :   The height of the picture
  89:Core/Src/EPD_GUI.c ****     Color   :   Whether the picture is inverted
  90:Core/Src/EPD_GUI.c **** ******************************************************************************/
  91:Core/Src/EPD_GUI.c **** void EPD_NewImage(UBYTE *image, UWORD Width, UWORD Height, UWORD Rotate, UWORD Color)
  92:Core/Src/EPD_GUI.c **** {
  30              		.loc 1 92 1 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 92 1 is_stmt 0 view .LVU1
  36 0000 30B4     		push	{r4, r5}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 5, -4
  93:Core/Src/EPD_GUI.c ****     Paint.Image = NULL;
  40              		.loc 1 93 5 is_stmt 1 view .LVU2
  41              		.loc 1 93 17 is_stmt 0 view .LVU3
  42 0002 124C     		ldr	r4, .L8
  43 0004 0025     		movs	r5, #0
  44 0006 2560     		str	r5, [r4]
  94:Core/Src/EPD_GUI.c ****     Paint.Image = image;
  45              		.loc 1 94 5 is_stmt 1 view .LVU4
  46              		.loc 1 94 17 is_stmt 0 view .LVU5
  47 0008 2060     		str	r0, [r4]
  95:Core/Src/EPD_GUI.c **** 
  96:Core/Src/EPD_GUI.c ****     Paint.WidthMemory = Width;
  48              		.loc 1 96 5 is_stmt 1 view .LVU6
  49              		.loc 1 96 23 is_stmt 0 view .LVU7
  50 000a 2181     		strh	r1, [r4, #8]	@ movhi
  97:Core/Src/EPD_GUI.c ****     Paint.HeightMemory = Height;
  51              		.loc 1 97 5 is_stmt 1 view .LVU8
  52              		.loc 1 97 24 is_stmt 0 view .LVU9
  53 000c 6281     		strh	r2, [r4, #10]	@ movhi
  98:Core/Src/EPD_GUI.c ****     Paint.Color = Color;    
  54              		.loc 1 98 5 is_stmt 1 view .LVU10
  55              		.loc 1 98 17 is_stmt 0 view .LVU11
  56 000e BDF80800 		ldrh	r0, [sp, #8]
  57              	.LVL1:
  58              		.loc 1 98 17 view .LVU12
  59 0012 A081     		strh	r0, [r4, #12]	@ movhi
  99:Core/Src/EPD_GUI.c **** 	Paint.Scale = 2;
  60              		.loc 1 99 2 is_stmt 1 view .LVU13
  61              		.loc 1 99 14 is_stmt 0 view .LVU14
  62 0014 0220     		movs	r0, #2
  63 0016 E082     		strh	r0, [r4, #22]	@ movhi
 100:Core/Src/EPD_GUI.c **** 		
 101:Core/Src/EPD_GUI.c ****     Paint.WidthByte = (Width % 8 == 0)? (Width / 8 ): (Width / 8 + 1);
  64              		.loc 1 101 5 is_stmt 1 view .LVU15
  65              		.loc 1 101 21 is_stmt 0 view .LVU16
  66 0018 11F0070F 		tst	r1, #7
  67 001c 0DD1     		bne	.L2
  68              		.loc 1 101 21 discriminator 1 view .LVU17
  69 001e CC08     		lsrs	r4, r1, #3
  70              	.L3:
  71              		.loc 1 101 21 discriminator 4 view .LVU18
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 4


  72 0020 0A48     		ldr	r0, .L8
  73              		.loc 1 101 21 discriminator 4 view .LVU19
  74 0022 4482     		strh	r4, [r0, #18]	@ movhi
 102:Core/Src/EPD_GUI.c ****     Paint.HeightByte = Height;    
  75              		.loc 1 102 5 is_stmt 1 view .LVU20
  76              		.loc 1 102 22 is_stmt 0 view .LVU21
  77 0024 8282     		strh	r2, [r0, #20]	@ movhi
 103:Core/Src/EPD_GUI.c **** //    printf("WidthByte = %d, HeightByte = %d\r\n", Paint.WidthByte, Paint.HeightByte);
 104:Core/Src/EPD_GUI.c **** //    printf(" EPD_WIDTH / 8 = %d\r\n",  122 / 8);
 105:Core/Src/EPD_GUI.c ****    
 106:Core/Src/EPD_GUI.c ****     Paint.Rotate = Rotate;
  78              		.loc 1 106 5 is_stmt 1 view .LVU22
  79              		.loc 1 106 18 is_stmt 0 view .LVU23
  80 0026 C381     		strh	r3, [r0, #14]	@ movhi
 107:Core/Src/EPD_GUI.c ****     Paint.Mirror = MIRROR_NONE;
  81              		.loc 1 107 5 is_stmt 1 view .LVU24
  82              		.loc 1 107 18 is_stmt 0 view .LVU25
  83 0028 0024     		movs	r4, #0
  84 002a 0482     		strh	r4, [r0, #16]	@ movhi
 108:Core/Src/EPD_GUI.c ****     
 109:Core/Src/EPD_GUI.c ****     if(Rotate == ROTATE_0 || Rotate == ROTATE_180) {
  85              		.loc 1 109 5 is_stmt 1 view .LVU26
  86              		.loc 1 109 7 is_stmt 0 view .LVU27
  87 002c 43B1     		cbz	r3, .L4
  88              		.loc 1 109 27 discriminator 1 view .LVU28
  89 002e B42B     		cmp	r3, #180
  90 0030 06D0     		beq	.L4
 110:Core/Src/EPD_GUI.c ****         Paint.Width = Width;
 111:Core/Src/EPD_GUI.c ****         Paint.Height = Height;
 112:Core/Src/EPD_GUI.c ****     } else {
 113:Core/Src/EPD_GUI.c ****         Paint.Width = Height;
  91              		.loc 1 113 9 is_stmt 1 view .LVU29
  92              		.loc 1 113 21 is_stmt 0 view .LVU30
  93 0032 064B     		ldr	r3, .L8
  94              	.LVL2:
  95              		.loc 1 113 21 view .LVU31
  96 0034 9A80     		strh	r2, [r3, #4]	@ movhi
 114:Core/Src/EPD_GUI.c ****         Paint.Height = Width;
  97              		.loc 1 114 9 is_stmt 1 view .LVU32
  98              		.loc 1 114 22 is_stmt 0 view .LVU33
  99 0036 D980     		strh	r1, [r3, #6]	@ movhi
 115:Core/Src/EPD_GUI.c ****     }
 116:Core/Src/EPD_GUI.c **** }
 100              		.loc 1 116 1 view .LVU34
 101 0038 05E0     		b	.L1
 102              	.LVL3:
 103              	.L2:
 101:Core/Src/EPD_GUI.c ****     Paint.HeightByte = Height;    
 104              		.loc 1 101 66 discriminator 2 view .LVU35
 105 003a CC08     		lsrs	r4, r1, #3
 101:Core/Src/EPD_GUI.c ****     Paint.HeightByte = Height;    
 106              		.loc 1 101 21 discriminator 2 view .LVU36
 107 003c 0134     		adds	r4, r4, #1
 108 003e EFE7     		b	.L3
 109              	.L4:
 110:Core/Src/EPD_GUI.c ****         Paint.Height = Height;
 110              		.loc 1 110 9 is_stmt 1 view .LVU37
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 5


 110:Core/Src/EPD_GUI.c ****         Paint.Height = Height;
 111              		.loc 1 110 21 is_stmt 0 view .LVU38
 112 0040 024B     		ldr	r3, .L8
 113              	.LVL4:
 110:Core/Src/EPD_GUI.c ****         Paint.Height = Height;
 114              		.loc 1 110 21 view .LVU39
 115 0042 9980     		strh	r1, [r3, #4]	@ movhi
 111:Core/Src/EPD_GUI.c ****     } else {
 116              		.loc 1 111 9 is_stmt 1 view .LVU40
 111:Core/Src/EPD_GUI.c ****     } else {
 117              		.loc 1 111 22 is_stmt 0 view .LVU41
 118 0044 DA80     		strh	r2, [r3, #6]	@ movhi
 119              	.L1:
 120              		.loc 1 116 1 view .LVU42
 121 0046 30BC     		pop	{r4, r5}
 122              		.cfi_restore 5
 123              		.cfi_restore 4
 124              		.cfi_def_cfa_offset 0
 125              	.LVL5:
 126              		.loc 1 116 1 view .LVU43
 127 0048 7047     		bx	lr
 128              	.L9:
 129 004a 00BF     		.align	2
 130              	.L8:
 131 004c 00000000 		.word	Paint
 132              		.cfi_endproc
 133              	.LFE322:
 135              		.section	.text.EPD_SelectImage,"ax",%progbits
 136              		.align	1
 137              		.global	EPD_SelectImage
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	EPD_SelectImage:
 143              	.LVL6:
 144              	.LFB323:
 117:Core/Src/EPD_GUI.c **** 
 118:Core/Src/EPD_GUI.c **** /******************************************************************************
 119:Core/Src/EPD_GUI.c **** function: Select Image
 120:Core/Src/EPD_GUI.c **** parameter:
 121:Core/Src/EPD_GUI.c ****     image : Pointer to the image cache
 122:Core/Src/EPD_GUI.c **** ******************************************************************************/
 123:Core/Src/EPD_GUI.c **** void EPD_SelectImage(UBYTE *image)
 124:Core/Src/EPD_GUI.c **** {
 145              		.loc 1 124 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 125:Core/Src/EPD_GUI.c ****     Paint.Image = image;
 150              		.loc 1 125 5 view .LVU45
 151              		.loc 1 125 17 is_stmt 0 view .LVU46
 152 0000 014B     		ldr	r3, .L11
 153 0002 1860     		str	r0, [r3]
 126:Core/Src/EPD_GUI.c **** }
 154              		.loc 1 126 1 view .LVU47
 155 0004 7047     		bx	lr
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 6


 156              	.L12:
 157 0006 00BF     		.align	2
 158              	.L11:
 159 0008 00000000 		.word	Paint
 160              		.cfi_endproc
 161              	.LFE323:
 163              		.section	.text.EPD_SetRotate,"ax",%progbits
 164              		.align	1
 165              		.global	EPD_SetRotate
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 170              	EPD_SetRotate:
 171              	.LVL7:
 172              	.LFB324:
 127:Core/Src/EPD_GUI.c **** 
 128:Core/Src/EPD_GUI.c **** /******************************************************************************
 129:Core/Src/EPD_GUI.c **** function: Select Image Rotate
 130:Core/Src/EPD_GUI.c **** parameter:
 131:Core/Src/EPD_GUI.c ****     Rotate : 0,90,180,270
 132:Core/Src/EPD_GUI.c **** ******************************************************************************/
 133:Core/Src/EPD_GUI.c **** void EPD_SetRotate(UWORD Rotate)
 134:Core/Src/EPD_GUI.c **** {
 173              		.loc 1 134 1 is_stmt 1 view -0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 135:Core/Src/EPD_GUI.c ****     if(Rotate == ROTATE_0 || Rotate == ROTATE_90 || Rotate == ROTATE_180 || Rotate == ROTATE_270) {
 178              		.loc 1 135 5 view .LVU49
 179              		.loc 1 135 7 is_stmt 0 view .LVU50
 180 0000 0346     		mov	r3, r0
 181 0002 30B1     		cbz	r0, .L14
 182              		.loc 1 135 27 discriminator 1 view .LVU51
 183 0004 5A28     		cmp	r0, #90
 184 0006 04D0     		beq	.L14
 185              		.loc 1 135 50 discriminator 2 view .LVU52
 186 0008 B428     		cmp	r0, #180
 187 000a 02D0     		beq	.L14
 188              		.loc 1 135 74 discriminator 3 view .LVU53
 189 000c B0F5877F 		cmp	r0, #270
 190 0010 01D1     		bne	.L13
 191              	.L14:
 136:Core/Src/EPD_GUI.c ****         Paint.Rotate = Rotate;
 192              		.loc 1 136 9 is_stmt 1 view .LVU54
 193              		.loc 1 136 22 is_stmt 0 view .LVU55
 194 0012 014A     		ldr	r2, .L16
 195 0014 D381     		strh	r3, [r2, #14]	@ movhi
 196              	.L13:
 137:Core/Src/EPD_GUI.c ****     } else {
 138:Core/Src/EPD_GUI.c ****     }
 139:Core/Src/EPD_GUI.c **** }
 197              		.loc 1 139 1 view .LVU56
 198 0016 7047     		bx	lr
 199              	.L17:
 200              		.align	2
 201              	.L16:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 7


 202 0018 00000000 		.word	Paint
 203              		.cfi_endproc
 204              	.LFE324:
 206              		.section	.text.EPD_SetScale,"ax",%progbits
 207              		.align	1
 208              		.global	EPD_SetScale
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 213              	EPD_SetScale:
 214              	.LVL8:
 215              	.LFB325:
 140:Core/Src/EPD_GUI.c **** 
 141:Core/Src/EPD_GUI.c **** void EPD_SetScale(UBYTE scale)
 142:Core/Src/EPD_GUI.c **** {
 216              		.loc 1 142 1 is_stmt 1 view -0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 143:Core/Src/EPD_GUI.c ****     if(scale == 2){
 221              		.loc 1 143 5 view .LVU58
 222              		.loc 1 143 7 is_stmt 0 view .LVU59
 223 0000 0228     		cmp	r0, #2
 224 0002 04D0     		beq	.L26
 144:Core/Src/EPD_GUI.c ****         Paint.Scale = scale;
 145:Core/Src/EPD_GUI.c ****         Paint.WidthByte = (Paint.WidthMemory % 8 == 0)? (Paint.WidthMemory / 8 ): (Paint.WidthMemor
 146:Core/Src/EPD_GUI.c ****     }else if(scale == 4){
 225              		.loc 1 146 11 is_stmt 1 view .LVU60
 226              		.loc 1 146 13 is_stmt 0 view .LVU61
 227 0004 0428     		cmp	r0, #4
 228 0006 0FD0     		beq	.L27
 147:Core/Src/EPD_GUI.c ****         Paint.Scale = scale;
 148:Core/Src/EPD_GUI.c ****         Paint.WidthByte = (Paint.WidthMemory % 4 == 0)? (Paint.WidthMemory / 4 ): (Paint.WidthMemor
 149:Core/Src/EPD_GUI.c ****     }else if(scale == 7){//Only applicable with 5in65 e-Paper
 229              		.loc 1 149 11 is_stmt 1 view .LVU62
 230              		.loc 1 149 13 is_stmt 0 view .LVU63
 231 0008 0728     		cmp	r0, #7
 232 000a 1AD0     		beq	.L28
 233              	.L18:
 150:Core/Src/EPD_GUI.c **** 				Paint.Scale = scale;
 151:Core/Src/EPD_GUI.c **** 				Paint.WidthByte = (Paint.WidthMemory % 2 == 0)? (Paint.WidthMemory / 2 ): (Paint.WidthMemory / 
 152:Core/Src/EPD_GUI.c **** 		}else{
 153:Core/Src/EPD_GUI.c ****     }
 154:Core/Src/EPD_GUI.c **** }
 234              		.loc 1 154 1 view .LVU64
 235 000c 7047     		bx	lr
 236              	.L26:
 144:Core/Src/EPD_GUI.c ****         Paint.WidthByte = (Paint.WidthMemory % 8 == 0)? (Paint.WidthMemory / 8 ): (Paint.WidthMemor
 237              		.loc 1 144 9 is_stmt 1 view .LVU65
 144:Core/Src/EPD_GUI.c ****         Paint.WidthByte = (Paint.WidthMemory % 8 == 0)? (Paint.WidthMemory / 8 ): (Paint.WidthMemor
 238              		.loc 1 144 21 is_stmt 0 view .LVU66
 239 000e 114B     		ldr	r3, .L29
 240 0010 D882     		strh	r0, [r3, #22]	@ movhi
 145:Core/Src/EPD_GUI.c ****     }else if(scale == 4){
 241              		.loc 1 145 9 is_stmt 1 view .LVU67
 145:Core/Src/EPD_GUI.c ****     }else if(scale == 4){
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 8


 242              		.loc 1 145 33 is_stmt 0 view .LVU68
 243 0012 1B89     		ldrh	r3, [r3, #8]
 145:Core/Src/EPD_GUI.c ****     }else if(scale == 4){
 244              		.loc 1 145 25 view .LVU69
 245 0014 13F0070F 		tst	r3, #7
 246 0018 03D1     		bne	.L20
 145:Core/Src/EPD_GUI.c ****     }else if(scale == 4){
 247              		.loc 1 145 25 discriminator 1 view .LVU70
 248 001a DB08     		lsrs	r3, r3, #3
 249              	.L21:
 145:Core/Src/EPD_GUI.c ****     }else if(scale == 4){
 250              		.loc 1 145 25 discriminator 4 view .LVU71
 251 001c 0D4A     		ldr	r2, .L29
 252 001e 5382     		strh	r3, [r2, #18]	@ movhi
 253 0020 7047     		bx	lr
 254              	.L20:
 145:Core/Src/EPD_GUI.c ****     }else if(scale == 4){
 255              		.loc 1 145 106 discriminator 2 view .LVU72
 256 0022 DB08     		lsrs	r3, r3, #3
 145:Core/Src/EPD_GUI.c ****     }else if(scale == 4){
 257              		.loc 1 145 25 discriminator 2 view .LVU73
 258 0024 0133     		adds	r3, r3, #1
 259 0026 F9E7     		b	.L21
 260              	.L27:
 147:Core/Src/EPD_GUI.c ****         Paint.WidthByte = (Paint.WidthMemory % 4 == 0)? (Paint.WidthMemory / 4 ): (Paint.WidthMemor
 261              		.loc 1 147 9 is_stmt 1 view .LVU74
 147:Core/Src/EPD_GUI.c ****         Paint.WidthByte = (Paint.WidthMemory % 4 == 0)? (Paint.WidthMemory / 4 ): (Paint.WidthMemor
 262              		.loc 1 147 21 is_stmt 0 view .LVU75
 263 0028 0A4B     		ldr	r3, .L29
 264 002a D882     		strh	r0, [r3, #22]	@ movhi
 148:Core/Src/EPD_GUI.c ****     }else if(scale == 7){//Only applicable with 5in65 e-Paper
 265              		.loc 1 148 9 is_stmt 1 view .LVU76
 148:Core/Src/EPD_GUI.c ****     }else if(scale == 7){//Only applicable with 5in65 e-Paper
 266              		.loc 1 148 33 is_stmt 0 view .LVU77
 267 002c 1B89     		ldrh	r3, [r3, #8]
 148:Core/Src/EPD_GUI.c ****     }else if(scale == 7){//Only applicable with 5in65 e-Paper
 268              		.loc 1 148 25 view .LVU78
 269 002e 13F0030F 		tst	r3, #3
 270 0032 03D1     		bne	.L24
 148:Core/Src/EPD_GUI.c ****     }else if(scale == 7){//Only applicable with 5in65 e-Paper
 271              		.loc 1 148 25 discriminator 1 view .LVU79
 272 0034 9B08     		lsrs	r3, r3, #2
 273              	.L25:
 148:Core/Src/EPD_GUI.c ****     }else if(scale == 7){//Only applicable with 5in65 e-Paper
 274              		.loc 1 148 25 discriminator 4 view .LVU80
 275 0036 074A     		ldr	r2, .L29
 276 0038 5382     		strh	r3, [r2, #18]	@ movhi
 277 003a 7047     		bx	lr
 278              	.L24:
 148:Core/Src/EPD_GUI.c ****     }else if(scale == 7){//Only applicable with 5in65 e-Paper
 279              		.loc 1 148 106 discriminator 2 view .LVU81
 280 003c 9B08     		lsrs	r3, r3, #2
 148:Core/Src/EPD_GUI.c ****     }else if(scale == 7){//Only applicable with 5in65 e-Paper
 281              		.loc 1 148 25 discriminator 2 view .LVU82
 282 003e 0133     		adds	r3, r3, #1
 283 0040 F9E7     		b	.L25
 284              	.L28:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 9


 150:Core/Src/EPD_GUI.c **** 				Paint.WidthByte = (Paint.WidthMemory % 2 == 0)? (Paint.WidthMemory / 2 ): (Paint.WidthMemory / 
 285              		.loc 1 150 5 is_stmt 1 view .LVU83
 150:Core/Src/EPD_GUI.c **** 				Paint.WidthByte = (Paint.WidthMemory % 2 == 0)? (Paint.WidthMemory / 2 ): (Paint.WidthMemory / 
 286              		.loc 1 150 17 is_stmt 0 view .LVU84
 287 0042 044B     		ldr	r3, .L29
 288 0044 D882     		strh	r0, [r3, #22]	@ movhi
 151:Core/Src/EPD_GUI.c **** 		}else{
 289              		.loc 1 151 5 is_stmt 1 view .LVU85
 151:Core/Src/EPD_GUI.c **** 		}else{
 290              		.loc 1 151 29 is_stmt 0 view .LVU86
 291 0046 1989     		ldrh	r1, [r3, #8]
 151:Core/Src/EPD_GUI.c **** 		}else{
 292              		.loc 1 151 77 view .LVU87
 293 0048 01F00102 		and	r2, r1, #1
 294 004c 02EB5102 		add	r2, r2, r1, lsr #1
 151:Core/Src/EPD_GUI.c **** 		}else{
 295              		.loc 1 151 21 view .LVU88
 296 0050 5A82     		strh	r2, [r3, #18]	@ movhi
 151:Core/Src/EPD_GUI.c **** 		}else{
 297              		.loc 1 151 107 is_stmt 1 view .LVU89
 153:Core/Src/EPD_GUI.c **** }
 298              		.loc 1 153 5 view .LVU90
 299              		.loc 1 154 1 is_stmt 0 view .LVU91
 300 0052 DBE7     		b	.L18
 301              	.L30:
 302              		.align	2
 303              	.L29:
 304 0054 00000000 		.word	Paint
 305              		.cfi_endproc
 306              	.LFE325:
 308              		.section	.text.EPD_SetMirroring,"ax",%progbits
 309              		.align	1
 310              		.global	EPD_SetMirroring
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 315              	EPD_SetMirroring:
 316              	.LVL9:
 317              	.LFB326:
 155:Core/Src/EPD_GUI.c **** /******************************************************************************
 156:Core/Src/EPD_GUI.c **** function:	Select Image mirror
 157:Core/Src/EPD_GUI.c **** parameter:
 158:Core/Src/EPD_GUI.c ****     mirror   :Not mirror,Horizontal mirror,Vertical mirror,Origin mirror
 159:Core/Src/EPD_GUI.c **** ******************************************************************************/
 160:Core/Src/EPD_GUI.c **** void EPD_SetMirroring(UBYTE mirror)
 161:Core/Src/EPD_GUI.c **** {
 318              		.loc 1 161 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 162:Core/Src/EPD_GUI.c ****     if(mirror == MIRROR_NONE || mirror == MIRROR_HORIZONTAL || 
 323              		.loc 1 162 5 view .LVU93
 324              		.loc 1 162 7 is_stmt 0 view .LVU94
 325 0000 0328     		cmp	r0, #3
 326 0002 01D8     		bhi	.L31
 163:Core/Src/EPD_GUI.c ****         mirror == MIRROR_VERTICAL || mirror == MIRROR_ORIGIN) {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 10


 164:Core/Src/EPD_GUI.c ****         Paint.Mirror = mirror;
 327              		.loc 1 164 9 is_stmt 1 view .LVU95
 328              		.loc 1 164 22 is_stmt 0 view .LVU96
 329 0004 014B     		ldr	r3, .L33
 330 0006 1882     		strh	r0, [r3, #16]	@ movhi
 165:Core/Src/EPD_GUI.c ****     } else {
 166:Core/Src/EPD_GUI.c **** 
 167:Core/Src/EPD_GUI.c ****     }    
 331              		.loc 1 167 5 is_stmt 1 view .LVU97
 332              	.L31:
 168:Core/Src/EPD_GUI.c **** }
 333              		.loc 1 168 1 is_stmt 0 view .LVU98
 334 0008 7047     		bx	lr
 335              	.L34:
 336 000a 00BF     		.align	2
 337              	.L33:
 338 000c 00000000 		.word	Paint
 339              		.cfi_endproc
 340              	.LFE326:
 342              		.section	.text.EPD_SetPixel,"ax",%progbits
 343              		.align	1
 344              		.global	EPD_SetPixel
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 349              	EPD_SetPixel:
 350              	.LVL10:
 351              	.LFB327:
 169:Core/Src/EPD_GUI.c **** 
 170:Core/Src/EPD_GUI.c **** /******************************************************************************
 171:Core/Src/EPD_GUI.c **** function: Draw Pixels
 172:Core/Src/EPD_GUI.c **** parameter:
 173:Core/Src/EPD_GUI.c ****     Xpoint : At point X
 174:Core/Src/EPD_GUI.c ****     Ypoint : At point Y
 175:Core/Src/EPD_GUI.c ****     Color  : Painted colors
 176:Core/Src/EPD_GUI.c **** ******************************************************************************/
 177:Core/Src/EPD_GUI.c **** void EPD_SetPixel(UWORD Xpoint, UWORD Ypoint, UWORD Color)
 178:Core/Src/EPD_GUI.c **** {
 352              		.loc 1 178 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 179:Core/Src/EPD_GUI.c ****     if(Xpoint > Paint.Width || Ypoint > Paint.Height){
 357              		.loc 1 179 5 view .LVU100
 358              		.loc 1 179 22 is_stmt 0 view .LVU101
 359 0000 584B     		ldr	r3, .L59
 360 0002 9B88     		ldrh	r3, [r3, #4]
 361              		.loc 1 179 7 view .LVU102
 362 0004 8342     		cmp	r3, r0
 363 0006 C0F0AB80 		bcc	.L53
 364              		.loc 1 179 46 discriminator 1 view .LVU103
 365 000a 564B     		ldr	r3, .L59
 366 000c DB88     		ldrh	r3, [r3, #6]
 367              		.loc 1 179 29 discriminator 1 view .LVU104
 368 000e 8B42     		cmp	r3, r1
 369 0010 C0F0A680 		bcc	.L53
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 11


 178:Core/Src/EPD_GUI.c ****     if(Xpoint > Paint.Width || Ypoint > Paint.Height){
 370              		.loc 1 178 1 view .LVU105
 371 0014 10B4     		push	{r4}
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 4, -4
 180:Core/Src/EPD_GUI.c ****         return;
 181:Core/Src/EPD_GUI.c ****     }      
 182:Core/Src/EPD_GUI.c ****     UWORD X, Y;
 374              		.loc 1 182 5 is_stmt 1 view .LVU106
 183:Core/Src/EPD_GUI.c **** 
 184:Core/Src/EPD_GUI.c ****     switch(Paint.Rotate) {
 375              		.loc 1 184 5 view .LVU107
 376              		.loc 1 184 17 is_stmt 0 view .LVU108
 377 0016 534B     		ldr	r3, .L59
 378 0018 DB89     		ldrh	r3, [r3, #14]
 379              		.loc 1 184 5 view .LVU109
 380 001a B42B     		cmp	r3, #180
 381 001c 16D0     		beq	.L37
 382 001e 0AD8     		bhi	.L38
 383 0020 FBB1     		cbz	r3, .L39
 384 0022 5A2B     		cmp	r3, #90
 385 0024 3BD1     		bne	.L35
 185:Core/Src/EPD_GUI.c ****     case 0:
 186:Core/Src/EPD_GUI.c ****         X = Xpoint;
 187:Core/Src/EPD_GUI.c ****         Y = Ypoint;  
 188:Core/Src/EPD_GUI.c ****         break;
 189:Core/Src/EPD_GUI.c ****     case 90:
 190:Core/Src/EPD_GUI.c ****         X = Paint.WidthMemory - Ypoint - 1;
 386              		.loc 1 190 9 is_stmt 1 view .LVU110
 387              		.loc 1 190 18 is_stmt 0 view .LVU111
 388 0026 4F4B     		ldr	r3, .L59
 389 0028 1B89     		ldrh	r3, [r3, #8]
 390              		.loc 1 190 31 view .LVU112
 391 002a 5B1A     		subs	r3, r3, r1
 392 002c 9BB2     		uxth	r3, r3
 393              		.loc 1 190 11 view .LVU113
 394 002e 013B     		subs	r3, r3, #1
 395              	.LVL11:
 191:Core/Src/EPD_GUI.c ****         Y = Xpoint;
 396              		.loc 1 191 9 is_stmt 1 view .LVU114
 192:Core/Src/EPD_GUI.c ****         break;
 397              		.loc 1 192 9 view .LVU115
 191:Core/Src/EPD_GUI.c ****         Y = Xpoint;
 398              		.loc 1 191 11 is_stmt 0 view .LVU116
 399 0030 0146     		mov	r1, r0
 400              	.LVL12:
 190:Core/Src/EPD_GUI.c ****         Y = Xpoint;
 401              		.loc 1 190 11 view .LVU117
 402 0032 98B2     		uxth	r0, r3
 403              	.LVL13:
 404              		.loc 1 192 9 view .LVU118
 405 0034 15E0     		b	.L39
 406              	.LVL14:
 407              	.L38:
 184:Core/Src/EPD_GUI.c ****     case 0:
 408              		.loc 1 184 5 view .LVU119
 409 0036 B3F5877F 		cmp	r3, #270
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 12


 410 003a 30D1     		bne	.L35
 193:Core/Src/EPD_GUI.c ****     case 180:
 194:Core/Src/EPD_GUI.c ****         X = Paint.WidthMemory - Xpoint - 1;
 195:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Ypoint - 1;
 196:Core/Src/EPD_GUI.c ****         break;
 197:Core/Src/EPD_GUI.c ****     case 270:
 198:Core/Src/EPD_GUI.c ****         X = Ypoint;
 411              		.loc 1 198 9 is_stmt 1 view .LVU120
 412              	.LVL15:
 199:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Xpoint - 1;
 413              		.loc 1 199 9 view .LVU121
 414              		.loc 1 199 18 is_stmt 0 view .LVU122
 415 003c 494B     		ldr	r3, .L59
 416 003e 5B89     		ldrh	r3, [r3, #10]
 417              		.loc 1 199 32 view .LVU123
 418 0040 1B1A     		subs	r3, r3, r0
 419 0042 9BB2     		uxth	r3, r3
 420              		.loc 1 199 11 view .LVU124
 421 0044 013B     		subs	r3, r3, #1
 422              	.LVL16:
 200:Core/Src/EPD_GUI.c ****         break;
 423              		.loc 1 200 9 is_stmt 1 view .LVU125
 198:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Xpoint - 1;
 424              		.loc 1 198 11 is_stmt 0 view .LVU126
 425 0046 0846     		mov	r0, r1
 426              	.LVL17:
 199:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Xpoint - 1;
 427              		.loc 1 199 11 view .LVU127
 428 0048 99B2     		uxth	r1, r3
 429              	.LVL18:
 430              		.loc 1 200 9 view .LVU128
 431 004a 0AE0     		b	.L39
 432              	.LVL19:
 433              	.L37:
 194:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Ypoint - 1;
 434              		.loc 1 194 9 is_stmt 1 view .LVU129
 194:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Ypoint - 1;
 435              		.loc 1 194 18 is_stmt 0 view .LVU130
 436 004c 454C     		ldr	r4, .L59
 437 004e 2389     		ldrh	r3, [r4, #8]
 194:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Ypoint - 1;
 438              		.loc 1 194 31 view .LVU131
 439 0050 1B1A     		subs	r3, r3, r0
 440 0052 9BB2     		uxth	r3, r3
 194:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Ypoint - 1;
 441              		.loc 1 194 11 view .LVU132
 442 0054 013B     		subs	r3, r3, #1
 443 0056 98B2     		uxth	r0, r3
 444              	.LVL20:
 195:Core/Src/EPD_GUI.c ****         break;
 445              		.loc 1 195 9 is_stmt 1 view .LVU133
 195:Core/Src/EPD_GUI.c ****         break;
 446              		.loc 1 195 18 is_stmt 0 view .LVU134
 447 0058 6389     		ldrh	r3, [r4, #10]
 195:Core/Src/EPD_GUI.c ****         break;
 448              		.loc 1 195 32 view .LVU135
 449 005a 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 13


 450 005c 9BB2     		uxth	r3, r3
 195:Core/Src/EPD_GUI.c ****         break;
 451              		.loc 1 195 11 view .LVU136
 452 005e 013B     		subs	r3, r3, #1
 453 0060 99B2     		uxth	r1, r3
 454              	.LVL21:
 196:Core/Src/EPD_GUI.c ****     case 270:
 455              		.loc 1 196 9 is_stmt 1 view .LVU137
 456              	.L39:
 201:Core/Src/EPD_GUI.c ****     default:
 202:Core/Src/EPD_GUI.c ****         return;
 203:Core/Src/EPD_GUI.c ****     }
 204:Core/Src/EPD_GUI.c ****     
 205:Core/Src/EPD_GUI.c ****     switch(Paint.Mirror) {
 457              		.loc 1 205 5 view .LVU138
 458              		.loc 1 205 17 is_stmt 0 view .LVU139
 459 0062 404B     		ldr	r3, .L59
 460 0064 1B8A     		ldrh	r3, [r3, #16]
 461              		.loc 1 205 5 view .LVU140
 462 0066 032B     		cmp	r3, #3
 463 0068 19D8     		bhi	.L35
 464 006a DFE803F0 		tbb	[pc, r3]
 465              	.L43:
 466 006e 08       		.byte	(.L46-.L43)/2
 467 006f 02       		.byte	(.L45-.L43)/2
 468 0070 1B       		.byte	(.L44-.L43)/2
 469 0071 22       		.byte	(.L42-.L43)/2
 470              		.p2align 1
 471              	.L45:
 206:Core/Src/EPD_GUI.c ****     case MIRROR_NONE:
 207:Core/Src/EPD_GUI.c ****         break;
 208:Core/Src/EPD_GUI.c ****     case MIRROR_HORIZONTAL:
 209:Core/Src/EPD_GUI.c ****         X = Paint.WidthMemory - X - 1;
 472              		.loc 1 209 9 is_stmt 1 view .LVU141
 473              		.loc 1 209 18 is_stmt 0 view .LVU142
 474 0072 3C4B     		ldr	r3, .L59
 475 0074 1B89     		ldrh	r3, [r3, #8]
 476              		.loc 1 209 31 view .LVU143
 477 0076 1B1A     		subs	r3, r3, r0
 478 0078 9BB2     		uxth	r3, r3
 479              		.loc 1 209 11 view .LVU144
 480 007a 013B     		subs	r3, r3, #1
 481 007c 98B2     		uxth	r0, r3
 482              	.LVL22:
 210:Core/Src/EPD_GUI.c ****         break;
 483              		.loc 1 210 9 is_stmt 1 view .LVU145
 484              	.L46:
 211:Core/Src/EPD_GUI.c ****     case MIRROR_VERTICAL:
 212:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Y - 1;
 213:Core/Src/EPD_GUI.c ****         break;
 214:Core/Src/EPD_GUI.c ****     case MIRROR_ORIGIN:
 215:Core/Src/EPD_GUI.c ****         X = Paint.WidthMemory - X - 1;
 216:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Y - 1;
 217:Core/Src/EPD_GUI.c ****         break;
 218:Core/Src/EPD_GUI.c ****     default:
 219:Core/Src/EPD_GUI.c ****         return;
 220:Core/Src/EPD_GUI.c ****     }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 14


 221:Core/Src/EPD_GUI.c **** 
 222:Core/Src/EPD_GUI.c ****     if(X > Paint.WidthMemory || Y > Paint.HeightMemory){
 485              		.loc 1 222 5 view .LVU146
 486              		.loc 1 222 17 is_stmt 0 view .LVU147
 487 007e 394B     		ldr	r3, .L59
 488 0080 1B89     		ldrh	r3, [r3, #8]
 489              		.loc 1 222 7 view .LVU148
 490 0082 8342     		cmp	r3, r0
 491 0084 0BD3     		bcc	.L35
 492              		.loc 1 222 42 discriminator 1 view .LVU149
 493 0086 374B     		ldr	r3, .L59
 494 0088 5B89     		ldrh	r3, [r3, #10]
 495              		.loc 1 222 30 discriminator 1 view .LVU150
 496 008a 8B42     		cmp	r3, r1
 497 008c 07D3     		bcc	.L35
 223:Core/Src/EPD_GUI.c ****         return;
 224:Core/Src/EPD_GUI.c ****     }
 225:Core/Src/EPD_GUI.c ****     
 226:Core/Src/EPD_GUI.c ****     if(Paint.Scale == 2){
 498              		.loc 1 226 5 is_stmt 1 view .LVU151
 499              		.loc 1 226 13 is_stmt 0 view .LVU152
 500 008e 354B     		ldr	r3, .L59
 501 0090 DB8A     		ldrh	r3, [r3, #22]
 502              		.loc 1 226 7 view .LVU153
 503 0092 022B     		cmp	r3, #2
 504 0094 19D0     		beq	.L56
 227:Core/Src/EPD_GUI.c ****         UDOUBLE Addr = X / 8 + Y * Paint.WidthByte;
 228:Core/Src/EPD_GUI.c ****         UBYTE Rdata = Paint.Image[Addr];
 229:Core/Src/EPD_GUI.c ****         if(Color == BLACK)
 230:Core/Src/EPD_GUI.c ****             Paint.Image[Addr] = Rdata & ~(0x80 >> (X % 8));
 231:Core/Src/EPD_GUI.c ****         else
 232:Core/Src/EPD_GUI.c ****             Paint.Image[Addr] = Rdata | (0x80 >> (X % 8));
 233:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 4){
 505              		.loc 1 233 11 is_stmt 1 view .LVU154
 506              		.loc 1 233 13 is_stmt 0 view .LVU155
 507 0096 042B     		cmp	r3, #4
 508 0098 30D0     		beq	.L57
 234:Core/Src/EPD_GUI.c ****         UDOUBLE Addr = X / 4 + Y * Paint.WidthByte;
 235:Core/Src/EPD_GUI.c ****         Color = Color % 4;//Guaranteed color scale is 4  --- 0~3
 236:Core/Src/EPD_GUI.c ****         UBYTE Rdata = Paint.Image[Addr];
 237:Core/Src/EPD_GUI.c ****         
 238:Core/Src/EPD_GUI.c ****         Rdata = Rdata & (~(0xC0 >> ((X % 4)*2)));
 239:Core/Src/EPD_GUI.c ****         Paint.Image[Addr] = Rdata | ((Color << 6) >> ((X % 4)*2));
 240:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 7){
 509              		.loc 1 240 11 is_stmt 1 view .LVU156
 510              		.loc 1 240 13 is_stmt 0 view .LVU157
 511 009a 072B     		cmp	r3, #7
 512 009c 48D0     		beq	.L58
 513              	.LVL23:
 514              	.L35:
 241:Core/Src/EPD_GUI.c **** 		UDOUBLE Addr = X / 2  + Y * Paint.WidthByte;
 242:Core/Src/EPD_GUI.c **** 		UBYTE Rdata = Paint.Image[Addr];
 243:Core/Src/EPD_GUI.c **** 		Rdata = Rdata & (~(0xF0 >> ((X % 2)*4)));//Clear first, then set value
 244:Core/Src/EPD_GUI.c **** 		Paint.Image[Addr] = Rdata | ((Color << 4) >> ((X % 2)*4));
 245:Core/Src/EPD_GUI.c **** 		//printf("Add =  %d ,data = %d\r\n",Addr,Rdata);
 246:Core/Src/EPD_GUI.c **** 		}
 247:Core/Src/EPD_GUI.c **** }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 15


 515              		.loc 1 247 1 view .LVU158
 516 009e 5DF8044B 		ldr	r4, [sp], #4
 517              		.cfi_remember_state
 518              		.cfi_restore 4
 519              		.cfi_def_cfa_offset 0
 520 00a2 7047     		bx	lr
 521              	.LVL24:
 522              	.L44:
 523              		.cfi_restore_state
 212:Core/Src/EPD_GUI.c ****         break;
 524              		.loc 1 212 9 is_stmt 1 view .LVU159
 212:Core/Src/EPD_GUI.c ****         break;
 525              		.loc 1 212 18 is_stmt 0 view .LVU160
 526 00a4 2F4B     		ldr	r3, .L59
 527 00a6 5B89     		ldrh	r3, [r3, #10]
 212:Core/Src/EPD_GUI.c ****         break;
 528              		.loc 1 212 32 view .LVU161
 529 00a8 5B1A     		subs	r3, r3, r1
 530 00aa 9BB2     		uxth	r3, r3
 212:Core/Src/EPD_GUI.c ****         break;
 531              		.loc 1 212 11 view .LVU162
 532 00ac 013B     		subs	r3, r3, #1
 533 00ae 99B2     		uxth	r1, r3
 534              	.LVL25:
 213:Core/Src/EPD_GUI.c ****     case MIRROR_ORIGIN:
 535              		.loc 1 213 9 is_stmt 1 view .LVU163
 536 00b0 E5E7     		b	.L46
 537              	.L42:
 215:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Y - 1;
 538              		.loc 1 215 9 view .LVU164
 215:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Y - 1;
 539              		.loc 1 215 18 is_stmt 0 view .LVU165
 540 00b2 2C4C     		ldr	r4, .L59
 541 00b4 2389     		ldrh	r3, [r4, #8]
 215:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Y - 1;
 542              		.loc 1 215 31 view .LVU166
 543 00b6 1B1A     		subs	r3, r3, r0
 544 00b8 9BB2     		uxth	r3, r3
 215:Core/Src/EPD_GUI.c ****         Y = Paint.HeightMemory - Y - 1;
 545              		.loc 1 215 11 view .LVU167
 546 00ba 013B     		subs	r3, r3, #1
 547 00bc 98B2     		uxth	r0, r3
 548              	.LVL26:
 216:Core/Src/EPD_GUI.c ****         break;
 549              		.loc 1 216 9 is_stmt 1 view .LVU168
 216:Core/Src/EPD_GUI.c ****         break;
 550              		.loc 1 216 18 is_stmt 0 view .LVU169
 551 00be 6389     		ldrh	r3, [r4, #10]
 216:Core/Src/EPD_GUI.c ****         break;
 552              		.loc 1 216 32 view .LVU170
 553 00c0 5B1A     		subs	r3, r3, r1
 554 00c2 9BB2     		uxth	r3, r3
 216:Core/Src/EPD_GUI.c ****         break;
 555              		.loc 1 216 11 view .LVU171
 556 00c4 013B     		subs	r3, r3, #1
 557 00c6 99B2     		uxth	r1, r3
 558              	.LVL27:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 16


 217:Core/Src/EPD_GUI.c ****     default:
 559              		.loc 1 217 9 is_stmt 1 view .LVU172
 560 00c8 D9E7     		b	.L46
 561              	.L56:
 562              	.LBB2:
 227:Core/Src/EPD_GUI.c ****         UBYTE Rdata = Paint.Image[Addr];
 563              		.loc 1 227 9 view .LVU173
 227:Core/Src/EPD_GUI.c ****         UBYTE Rdata = Paint.Image[Addr];
 564              		.loc 1 227 26 is_stmt 0 view .LVU174
 565 00ca C0F3CF03 		ubfx	r3, r0, #3, #16
 227:Core/Src/EPD_GUI.c ****         UBYTE Rdata = Paint.Image[Addr];
 566              		.loc 1 227 41 view .LVU175
 567 00ce 254C     		ldr	r4, .L59
 568 00d0 B4F812C0 		ldrh	ip, [r4, #18]
 227:Core/Src/EPD_GUI.c ****         UBYTE Rdata = Paint.Image[Addr];
 569              		.loc 1 227 30 view .LVU176
 570 00d4 0CFB0133 		mla	r3, ip, r1, r3
 571              	.LVL28:
 228:Core/Src/EPD_GUI.c ****         if(Color == BLACK)
 572              		.loc 1 228 9 is_stmt 1 view .LVU177
 228:Core/Src/EPD_GUI.c ****         if(Color == BLACK)
 573              		.loc 1 228 28 is_stmt 0 view .LVU178
 574 00d8 2468     		ldr	r4, [r4]
 228:Core/Src/EPD_GUI.c ****         if(Color == BLACK)
 575              		.loc 1 228 15 view .LVU179
 576 00da E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 577              	.LVL29:
 229:Core/Src/EPD_GUI.c ****             Paint.Image[Addr] = Rdata & ~(0x80 >> (X % 8));
 578              		.loc 1 229 9 is_stmt 1 view .LVU180
 229:Core/Src/EPD_GUI.c ****             Paint.Image[Addr] = Rdata & ~(0x80 >> (X % 8));
 579              		.loc 1 229 11 is_stmt 0 view .LVU181
 580 00dc 3AB9     		cbnz	r2, .L48
 230:Core/Src/EPD_GUI.c ****         else
 581              		.loc 1 230 13 is_stmt 1 view .LVU182
 230:Core/Src/EPD_GUI.c ****         else
 582              		.loc 1 230 54 is_stmt 0 view .LVU183
 583 00de 00F00700 		and	r0, r0, #7
 584              	.LVL30:
 230:Core/Src/EPD_GUI.c ****         else
 585              		.loc 1 230 41 view .LVU184
 586 00e2 6FF08002 		mvn	r2, #128
 587              	.LVL31:
 230:Core/Src/EPD_GUI.c ****         else
 588              		.loc 1 230 41 view .LVU185
 589 00e6 0241     		asrs	r2, r2, r0
 230:Core/Src/EPD_GUI.c ****         else
 590              		.loc 1 230 39 view .LVU186
 591 00e8 1140     		ands	r1, r1, r2
 592              	.LVL32:
 230:Core/Src/EPD_GUI.c ****         else
 593              		.loc 1 230 31 view .LVU187
 594 00ea E154     		strb	r1, [r4, r3]
 595              	.LVL33:
 230:Core/Src/EPD_GUI.c ****         else
 596              		.loc 1 230 31 view .LVU188
 597 00ec D7E7     		b	.L35
 598              	.LVL34:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 17


 599              	.L48:
 232:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 4){
 600              		.loc 1 232 13 is_stmt 1 view .LVU189
 232:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 4){
 601              		.loc 1 232 53 is_stmt 0 view .LVU190
 602 00ee 00F00700 		and	r0, r0, #7
 603              	.LVL35:
 232:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 4){
 604              		.loc 1 232 47 view .LVU191
 605 00f2 8022     		movs	r2, #128
 606              	.LVL36:
 232:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 4){
 607              		.loc 1 232 47 view .LVU192
 608 00f4 0241     		asrs	r2, r2, r0
 232:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 4){
 609              		.loc 1 232 39 view .LVU193
 610 00f6 1143     		orrs	r1, r1, r2
 611              	.LVL37:
 232:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 4){
 612              		.loc 1 232 31 view .LVU194
 613 00f8 E154     		strb	r1, [r4, r3]
 614              	.LVL38:
 232:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 4){
 615              		.loc 1 232 31 view .LVU195
 616 00fa D0E7     		b	.L35
 617              	.LVL39:
 618              	.L57:
 232:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 4){
 619              		.loc 1 232 31 view .LVU196
 620              	.LBE2:
 621              	.LBB3:
 234:Core/Src/EPD_GUI.c ****         Color = Color % 4;//Guaranteed color scale is 4  --- 0~3
 622              		.loc 1 234 9 is_stmt 1 view .LVU197
 234:Core/Src/EPD_GUI.c ****         Color = Color % 4;//Guaranteed color scale is 4  --- 0~3
 623              		.loc 1 234 26 is_stmt 0 view .LVU198
 624 00fc C0F38F04 		ubfx	r4, r0, #2, #16
 234:Core/Src/EPD_GUI.c ****         Color = Color % 4;//Guaranteed color scale is 4  --- 0~3
 625              		.loc 1 234 41 view .LVU199
 626 0100 184B     		ldr	r3, .L59
 627 0102 B3F812C0 		ldrh	ip, [r3, #18]
 234:Core/Src/EPD_GUI.c ****         Color = Color % 4;//Guaranteed color scale is 4  --- 0~3
 628              		.loc 1 234 30 view .LVU200
 629 0106 0CFB0141 		mla	r1, ip, r1, r4
 630              	.LVL40:
 235:Core/Src/EPD_GUI.c ****         UBYTE Rdata = Paint.Image[Addr];
 631              		.loc 1 235 9 is_stmt 1 view .LVU201
 235:Core/Src/EPD_GUI.c ****         UBYTE Rdata = Paint.Image[Addr];
 632              		.loc 1 235 15 is_stmt 0 view .LVU202
 633 010a 02F00302 		and	r2, r2, #3
 634              	.LVL41:
 236:Core/Src/EPD_GUI.c ****         
 635              		.loc 1 236 9 is_stmt 1 view .LVU203
 236:Core/Src/EPD_GUI.c ****         
 636              		.loc 1 236 28 is_stmt 0 view .LVU204
 637 010e 1C68     		ldr	r4, [r3]
 236:Core/Src/EPD_GUI.c ****         
 638              		.loc 1 236 15 view .LVU205
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 18


 639 0110 14F801C0 		ldrb	ip, [r4, r1]	@ zero_extendqisi2
 640              	.LVL42:
 238:Core/Src/EPD_GUI.c ****         Paint.Image[Addr] = Rdata | ((Color << 6) >> ((X % 4)*2));
 641              		.loc 1 238 9 is_stmt 1 view .LVU206
 238:Core/Src/EPD_GUI.c ****         Paint.Image[Addr] = Rdata | ((Color << 6) >> ((X % 4)*2));
 642              		.loc 1 238 40 is_stmt 0 view .LVU207
 643 0114 00F00300 		and	r0, r0, #3
 644              	.LVL43:
 238:Core/Src/EPD_GUI.c ****         Paint.Image[Addr] = Rdata | ((Color << 6) >> ((X % 4)*2));
 645              		.loc 1 238 44 view .LVU208
 646 0118 4000     		lsls	r0, r0, #1
 238:Core/Src/EPD_GUI.c ****         Paint.Image[Addr] = Rdata | ((Color << 6) >> ((X % 4)*2));
 647              		.loc 1 238 26 view .LVU209
 648 011a 6FF0C003 		mvn	r3, #192
 649 011e 0341     		asrs	r3, r3, r0
 238:Core/Src/EPD_GUI.c ****         Paint.Image[Addr] = Rdata | ((Color << 6) >> ((X % 4)*2));
 650              		.loc 1 238 23 view .LVU210
 651 0120 03EA0C03 		and	r3, r3, ip
 652 0124 5BB2     		sxtb	r3, r3
 653              	.LVL44:
 239:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 7){
 654              		.loc 1 239 9 is_stmt 1 view .LVU211
 239:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 7){
 655              		.loc 1 239 45 is_stmt 0 view .LVU212
 656 0126 9201     		lsls	r2, r2, #6
 657              	.LVL45:
 239:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 7){
 658              		.loc 1 239 51 view .LVU213
 659 0128 0241     		asrs	r2, r2, r0
 239:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 7){
 660              		.loc 1 239 35 view .LVU214
 661 012a 1343     		orrs	r3, r3, r2
 662              	.LVL46:
 239:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 7){
 663              		.loc 1 239 27 view .LVU215
 664 012c 6354     		strb	r3, [r4, r1]
 665              	.LBE3:
 666 012e B6E7     		b	.L35
 667              	.LVL47:
 668              	.L58:
 669              	.LBB4:
 241:Core/Src/EPD_GUI.c **** 		UBYTE Rdata = Paint.Image[Addr];
 670              		.loc 1 241 3 is_stmt 1 view .LVU216
 241:Core/Src/EPD_GUI.c **** 		UBYTE Rdata = Paint.Image[Addr];
 671              		.loc 1 241 20 is_stmt 0 view .LVU217
 672 0130 C0F34F04 		ubfx	r4, r0, #1, #16
 241:Core/Src/EPD_GUI.c **** 		UBYTE Rdata = Paint.Image[Addr];
 673              		.loc 1 241 36 view .LVU218
 674 0134 0B4B     		ldr	r3, .L59
 675 0136 B3F812C0 		ldrh	ip, [r3, #18]
 241:Core/Src/EPD_GUI.c **** 		UBYTE Rdata = Paint.Image[Addr];
 676              		.loc 1 241 25 view .LVU219
 677 013a 0CFB0141 		mla	r1, ip, r1, r4
 678              	.LVL48:
 242:Core/Src/EPD_GUI.c **** 		Rdata = Rdata & (~(0xF0 >> ((X % 2)*4)));//Clear first, then set value
 679              		.loc 1 242 3 is_stmt 1 view .LVU220
 242:Core/Src/EPD_GUI.c **** 		Rdata = Rdata & (~(0xF0 >> ((X % 2)*4)));//Clear first, then set value
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 19


 680              		.loc 1 242 22 is_stmt 0 view .LVU221
 681 013e 1C68     		ldr	r4, [r3]
 242:Core/Src/EPD_GUI.c **** 		Rdata = Rdata & (~(0xF0 >> ((X % 2)*4)));//Clear first, then set value
 682              		.loc 1 242 9 view .LVU222
 683 0140 14F801C0 		ldrb	ip, [r4, r1]	@ zero_extendqisi2
 684              	.LVL49:
 243:Core/Src/EPD_GUI.c **** 		Paint.Image[Addr] = Rdata | ((Color << 4) >> ((X % 2)*4));
 685              		.loc 1 243 3 is_stmt 1 view .LVU223
 243:Core/Src/EPD_GUI.c **** 		Paint.Image[Addr] = Rdata | ((Color << 4) >> ((X % 2)*4));
 686              		.loc 1 243 34 is_stmt 0 view .LVU224
 687 0144 00F00100 		and	r0, r0, #1
 688              	.LVL50:
 243:Core/Src/EPD_GUI.c **** 		Paint.Image[Addr] = Rdata | ((Color << 4) >> ((X % 2)*4));
 689              		.loc 1 243 38 view .LVU225
 690 0148 8000     		lsls	r0, r0, #2
 243:Core/Src/EPD_GUI.c **** 		Paint.Image[Addr] = Rdata | ((Color << 4) >> ((X % 2)*4));
 691              		.loc 1 243 20 view .LVU226
 692 014a 6FF0F003 		mvn	r3, #240
 693 014e 0341     		asrs	r3, r3, r0
 243:Core/Src/EPD_GUI.c **** 		Paint.Image[Addr] = Rdata | ((Color << 4) >> ((X % 2)*4));
 694              		.loc 1 243 17 view .LVU227
 695 0150 03EA0C03 		and	r3, r3, ip
 696 0154 5BB2     		sxtb	r3, r3
 697              	.LVL51:
 244:Core/Src/EPD_GUI.c **** 		//printf("Add =  %d ,data = %d\r\n",Addr,Rdata);
 698              		.loc 1 244 3 is_stmt 1 view .LVU228
 244:Core/Src/EPD_GUI.c **** 		//printf("Add =  %d ,data = %d\r\n",Addr,Rdata);
 699              		.loc 1 244 39 is_stmt 0 view .LVU229
 700 0156 1201     		lsls	r2, r2, #4
 701              	.LVL52:
 244:Core/Src/EPD_GUI.c **** 		//printf("Add =  %d ,data = %d\r\n",Addr,Rdata);
 702              		.loc 1 244 45 view .LVU230
 703 0158 0241     		asrs	r2, r2, r0
 244:Core/Src/EPD_GUI.c **** 		//printf("Add =  %d ,data = %d\r\n",Addr,Rdata);
 704              		.loc 1 244 29 view .LVU231
 705 015a 1343     		orrs	r3, r3, r2
 706              	.LVL53:
 244:Core/Src/EPD_GUI.c **** 		//printf("Add =  %d ,data = %d\r\n",Addr,Rdata);
 707              		.loc 1 244 21 view .LVU232
 708 015c 6354     		strb	r3, [r4, r1]
 709 015e 9EE7     		b	.L35
 710              	.LVL54:
 711              	.L53:
 712              		.cfi_def_cfa_offset 0
 713              		.cfi_restore 4
 244:Core/Src/EPD_GUI.c **** 		//printf("Add =  %d ,data = %d\r\n",Addr,Rdata);
 714              		.loc 1 244 21 view .LVU233
 715 0160 7047     		bx	lr
 716              	.L60:
 717 0162 00BF     		.align	2
 718              	.L59:
 719 0164 00000000 		.word	Paint
 720              	.LBE4:
 721              		.cfi_endproc
 722              	.LFE327:
 724              		.section	.text.EPD_Clear,"ax",%progbits
 725              		.align	1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 20


 726              		.global	EPD_Clear
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 731              	EPD_Clear:
 732              	.LVL55:
 733              	.LFB328:
 248:Core/Src/EPD_GUI.c **** 
 249:Core/Src/EPD_GUI.c **** /******************************************************************************
 250:Core/Src/EPD_GUI.c **** function: Clear the color of the picture
 251:Core/Src/EPD_GUI.c **** parameter:
 252:Core/Src/EPD_GUI.c ****     Color : Painted colors
 253:Core/Src/EPD_GUI.c **** ******************************************************************************/
 254:Core/Src/EPD_GUI.c **** void EPD_Clear(UWORD Color)
 255:Core/Src/EPD_GUI.c **** {
 734              		.loc 1 255 1 is_stmt 1 view -0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 256:Core/Src/EPD_GUI.c **** 	if(Paint.Scale == 2) {
 738              		.loc 1 256 2 view .LVU235
 739              		.loc 1 256 10 is_stmt 0 view .LVU236
 740 0000 2F4B     		ldr	r3, .L90
 741 0002 DB8A     		ldrh	r3, [r3, #22]
 742              		.loc 1 256 4 view .LVU237
 743 0004 022B     		cmp	r3, #2
 744 0006 1AD0     		beq	.L85
 255:Core/Src/EPD_GUI.c **** 	if(Paint.Scale == 2) {
 745              		.loc 1 255 1 view .LVU238
 746 0008 10B5     		push	{r4, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 4, -8
 749              		.cfi_offset 14, -4
 257:Core/Src/EPD_GUI.c **** 		for (UWORD Y = 0; Y < Paint.HeightByte; Y++) {
 258:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 259:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 260:Core/Src/EPD_GUI.c **** 				Paint.Image[Addr] = Color;
 261:Core/Src/EPD_GUI.c **** 			}
 262:Core/Src/EPD_GUI.c **** 		}		
 263:Core/Src/EPD_GUI.c ****     }else if(Paint.Scale == 4) {
 750              		.loc 1 263 11 is_stmt 1 view .LVU239
 751              		.loc 1 263 13 is_stmt 0 view .LVU240
 752 000a 042B     		cmp	r3, #4
 753 000c 3AD0     		beq	.L86
 264:Core/Src/EPD_GUI.c ****         for (UWORD Y = 0; Y < Paint.HeightByte; Y++) {
 265:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 266:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 267:Core/Src/EPD_GUI.c **** 				Paint.Image[Addr] = (Color<<6)|(Color<<4)|(Color<<2)|Color;
 268:Core/Src/EPD_GUI.c **** 			}
 269:Core/Src/EPD_GUI.c **** 		}		
 270:Core/Src/EPD_GUI.c **** 	}else if(Paint.Scale == 7) {
 754              		.loc 1 270 8 is_stmt 1 view .LVU241
 755              		.loc 1 270 10 is_stmt 0 view .LVU242
 756 000e 072B     		cmp	r3, #7
 757 0010 53D0     		beq	.L87
 758              	.L61:
 271:Core/Src/EPD_GUI.c **** 		for (UWORD Y = 0; Y < Paint.HeightByte; Y++) {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 21


 272:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 273:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 274:Core/Src/EPD_GUI.c **** 				Paint.Image[Addr] = (Color<<4)|Color;
 275:Core/Src/EPD_GUI.c **** 			}
 276:Core/Src/EPD_GUI.c **** 		}		
 277:Core/Src/EPD_GUI.c **** 	}
 278:Core/Src/EPD_GUI.c **** }
 759              		.loc 1 278 1 view .LVU243
 760 0012 10BD     		pop	{r4, pc}
 761              	.LVL56:
 762              	.L64:
 763              		.cfi_def_cfa_offset 0
 764              		.cfi_restore 4
 765              		.cfi_restore 14
 766              	.LBB5:
 767              	.LBB6:
 768              	.LBB7:
 259:Core/Src/EPD_GUI.c **** 				Paint.Image[Addr] = Color;
 769              		.loc 1 259 5 is_stmt 1 view .LVU244
 259:Core/Src/EPD_GUI.c **** 				Paint.Image[Addr] = Color;
 770              		.loc 1 259 22 is_stmt 0 view .LVU245
 771 0014 02FB0C32 		mla	r2, r2, ip, r3
 772              	.LVL57:
 260:Core/Src/EPD_GUI.c **** 			}
 773              		.loc 1 260 5 is_stmt 1 view .LVU246
 260:Core/Src/EPD_GUI.c **** 			}
 774              		.loc 1 260 10 is_stmt 0 view .LVU247
 775 0018 2949     		ldr	r1, .L90
 776 001a 0968     		ldr	r1, [r1]
 260:Core/Src/EPD_GUI.c **** 			}
 777              		.loc 1 260 23 view .LVU248
 778 001c 8854     		strb	r0, [r1, r2]
 779              	.LBE7:
 258:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 780              		.loc 1 258 44 is_stmt 1 discriminator 3 view .LVU249
 781 001e 0133     		adds	r3, r3, #1
 782              	.LVL58:
 258:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 783              		.loc 1 258 44 is_stmt 0 discriminator 3 view .LVU250
 784 0020 9BB2     		uxth	r3, r3
 785              	.LVL59:
 786              	.L65:
 258:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 787              		.loc 1 258 24 is_stmt 1 discriminator 1 view .LVU251
 258:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 788              		.loc 1 258 31 is_stmt 0 discriminator 1 view .LVU252
 789 0022 274A     		ldr	r2, .L90
 790 0024 528A     		ldrh	r2, [r2, #18]
 258:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 791              		.loc 1 258 24 discriminator 1 view .LVU253
 792 0026 9A42     		cmp	r2, r3
 793 0028 F4D8     		bhi	.L64
 794              	.LBE6:
 257:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 795              		.loc 1 257 44 is_stmt 1 discriminator 2 view .LVU254
 796 002a 0CF1010C 		add	ip, ip, #1
 797              	.LVL60:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 22


 257:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 798              		.loc 1 257 44 is_stmt 0 discriminator 2 view .LVU255
 799 002e 1FFA8CFC 		uxth	ip, ip
 800              	.LVL61:
 801              	.L62:
 257:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 802              		.loc 1 257 23 is_stmt 1 discriminator 1 view .LVU256
 257:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 803              		.loc 1 257 30 is_stmt 0 discriminator 1 view .LVU257
 804 0032 234B     		ldr	r3, .L90
 805 0034 9B8A     		ldrh	r3, [r3, #20]
 257:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 806              		.loc 1 257 23 discriminator 1 view .LVU258
 807 0036 6345     		cmp	r3, ip
 808 0038 04D9     		bls	.L88
 809              	.LBB8:
 258:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 810              		.loc 1 258 15 view .LVU259
 811 003a 0023     		movs	r3, #0
 812 003c F1E7     		b	.L65
 813              	.LVL62:
 814              	.L85:
 258:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 815              		.loc 1 258 15 view .LVU260
 816              	.LBE8:
 257:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 817              		.loc 1 257 14 view .LVU261
 818 003e 4FF0000C 		mov	ip, #0
 819 0042 F6E7     		b	.L62
 820              	.LVL63:
 821              	.L88:
 257:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 822              		.loc 1 257 14 view .LVU262
 823 0044 7047     		bx	lr
 824              	.LVL64:
 825              	.L69:
 826              		.cfi_def_cfa_offset 8
 827              		.cfi_offset 4, -8
 828              		.cfi_offset 14, -4
 257:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 829              		.loc 1 257 14 view .LVU263
 830              	.LBE5:
 831              	.LBB9:
 832              	.LBB10:
 833              	.LBB11:
 266:Core/Src/EPD_GUI.c **** 				Paint.Image[Addr] = (Color<<6)|(Color<<4)|(Color<<2)|Color;
 834              		.loc 1 266 5 is_stmt 1 view .LVU264
 266:Core/Src/EPD_GUI.c **** 				Paint.Image[Addr] = (Color<<6)|(Color<<4)|(Color<<2)|Color;
 835              		.loc 1 266 22 is_stmt 0 view .LVU265
 836 0046 03FB0E1C 		mla	ip, r3, lr, r1
 837              	.LVL65:
 267:Core/Src/EPD_GUI.c **** 			}
 838              		.loc 1 267 5 is_stmt 1 view .LVU266
 267:Core/Src/EPD_GUI.c **** 			}
 839              		.loc 1 267 35 is_stmt 0 view .LVU267
 840 004a 42B2     		sxtb	r2, r0
 841 004c 1301     		lsls	r3, r2, #4
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 23


 842 004e 43EA8213 		orr	r3, r3, r2, lsl #6
 843 0052 5BB2     		sxtb	r3, r3
 267:Core/Src/EPD_GUI.c **** 			}
 844              		.loc 1 267 46 view .LVU268
 845 0054 43EA8203 		orr	r3, r3, r2, lsl #2
 846 0058 5BB2     		sxtb	r3, r3
 267:Core/Src/EPD_GUI.c **** 			}
 847              		.loc 1 267 10 view .LVU269
 848 005a 194C     		ldr	r4, .L90
 849 005c 2468     		ldr	r4, [r4]
 267:Core/Src/EPD_GUI.c **** 			}
 850              		.loc 1 267 57 view .LVU270
 851 005e 1A43     		orrs	r2, r2, r3
 267:Core/Src/EPD_GUI.c **** 			}
 852              		.loc 1 267 23 view .LVU271
 853 0060 04F80C20 		strb	r2, [r4, ip]
 854              	.LBE11:
 265:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 855              		.loc 1 265 44 is_stmt 1 discriminator 3 view .LVU272
 856 0064 0131     		adds	r1, r1, #1
 857              	.LVL66:
 265:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 858              		.loc 1 265 44 is_stmt 0 discriminator 3 view .LVU273
 859 0066 89B2     		uxth	r1, r1
 860              	.LVL67:
 861              	.L70:
 265:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 862              		.loc 1 265 24 is_stmt 1 discriminator 1 view .LVU274
 265:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 863              		.loc 1 265 31 is_stmt 0 discriminator 1 view .LVU275
 864 0068 154B     		ldr	r3, .L90
 865 006a 5B8A     		ldrh	r3, [r3, #18]
 265:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 866              		.loc 1 265 24 discriminator 1 view .LVU276
 867 006c 8B42     		cmp	r3, r1
 868 006e EAD8     		bhi	.L69
 869              	.LBE10:
 264:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 870              		.loc 1 264 50 is_stmt 1 discriminator 2 view .LVU277
 871 0070 0EF1010E 		add	lr, lr, #1
 872              	.LVL68:
 264:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 873              		.loc 1 264 50 is_stmt 0 discriminator 2 view .LVU278
 874 0074 1FFA8EFE 		uxth	lr, lr
 875              	.LVL69:
 876              	.L67:
 264:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 877              		.loc 1 264 29 is_stmt 1 discriminator 1 view .LVU279
 264:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 878              		.loc 1 264 36 is_stmt 0 discriminator 1 view .LVU280
 879 0078 114B     		ldr	r3, .L90
 880 007a 9B8A     		ldrh	r3, [r3, #20]
 264:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 881              		.loc 1 264 29 discriminator 1 view .LVU281
 882 007c 7345     		cmp	r3, lr
 883 007e C8D9     		bls	.L61
 884              	.LBB12:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 24


 265:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 885              		.loc 1 265 15 view .LVU282
 886 0080 0021     		movs	r1, #0
 887 0082 F1E7     		b	.L70
 888              	.LVL70:
 889              	.L86:
 265:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 890              		.loc 1 265 15 view .LVU283
 891              	.LBE12:
 264:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 892              		.loc 1 264 20 view .LVU284
 893 0084 4FF0000E 		mov	lr, #0
 894 0088 F6E7     		b	.L67
 895              	.LVL71:
 896              	.L89:
 264:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 897              		.loc 1 264 20 view .LVU285
 898              	.LBE9:
 899              	.LBB13:
 271:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 900              		.loc 1 271 44 is_stmt 1 discriminator 2 view .LVU286
 901 008a 0CF1010C 		add	ip, ip, #1
 902              	.LVL72:
 271:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 903              		.loc 1 271 44 is_stmt 0 discriminator 2 view .LVU287
 904 008e 1FFA8CFC 		uxth	ip, ip
 905              	.LVL73:
 906              	.L71:
 271:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 907              		.loc 1 271 23 is_stmt 1 discriminator 1 view .LVU288
 271:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 908              		.loc 1 271 30 is_stmt 0 discriminator 1 view .LVU289
 909 0092 0B4B     		ldr	r3, .L90
 910 0094 9B8A     		ldrh	r3, [r3, #20]
 271:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 911              		.loc 1 271 23 discriminator 1 view .LVU290
 912 0096 6345     		cmp	r3, ip
 913 0098 BBD9     		bls	.L61
 914              	.LBB14:
 272:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 915              		.loc 1 272 15 view .LVU291
 916 009a 0022     		movs	r2, #0
 917              	.L73:
 918              	.LVL74:
 272:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 919              		.loc 1 272 24 is_stmt 1 discriminator 1 view .LVU292
 272:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 920              		.loc 1 272 31 is_stmt 0 discriminator 1 view .LVU293
 921 009c 084B     		ldr	r3, .L90
 922 009e 5B8A     		ldrh	r3, [r3, #18]
 272:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 923              		.loc 1 272 24 discriminator 1 view .LVU294
 924 00a0 9342     		cmp	r3, r2
 925 00a2 F2D9     		bls	.L89
 926              	.LBB15:
 273:Core/Src/EPD_GUI.c **** 				Paint.Image[Addr] = (Color<<4)|Color;
 927              		.loc 1 273 5 is_stmt 1 view .LVU295
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 25


 273:Core/Src/EPD_GUI.c **** 				Paint.Image[Addr] = (Color<<4)|Color;
 928              		.loc 1 273 22 is_stmt 0 view .LVU296
 929 00a4 03FB0C21 		mla	r1, r3, ip, r2
 930              	.LVL75:
 274:Core/Src/EPD_GUI.c **** 			}
 931              		.loc 1 274 5 is_stmt 1 view .LVU297
 274:Core/Src/EPD_GUI.c **** 			}
 932              		.loc 1 274 35 is_stmt 0 view .LVU298
 933 00a8 43B2     		sxtb	r3, r0
 274:Core/Src/EPD_GUI.c **** 			}
 934              		.loc 1 274 10 view .LVU299
 935 00aa 054C     		ldr	r4, .L90
 936 00ac 2468     		ldr	r4, [r4]
 274:Core/Src/EPD_GUI.c **** 			}
 937              		.loc 1 274 35 view .LVU300
 938 00ae 43EA0313 		orr	r3, r3, r3, lsl #4
 274:Core/Src/EPD_GUI.c **** 			}
 939              		.loc 1 274 23 view .LVU301
 940 00b2 6354     		strb	r3, [r4, r1]
 941              	.LBE15:
 272:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 942              		.loc 1 272 44 is_stmt 1 discriminator 3 view .LVU302
 943 00b4 0132     		adds	r2, r2, #1
 944              	.LVL76:
 272:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 945              		.loc 1 272 44 is_stmt 0 discriminator 3 view .LVU303
 946 00b6 92B2     		uxth	r2, r2
 947              	.LVL77:
 272:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 948              		.loc 1 272 44 discriminator 3 view .LVU304
 949 00b8 F0E7     		b	.L73
 950              	.LVL78:
 951              	.L87:
 272:Core/Src/EPD_GUI.c **** 				UDOUBLE Addr = X + Y*Paint.WidthByte;
 952              		.loc 1 272 44 discriminator 3 view .LVU305
 953              	.LBE14:
 271:Core/Src/EPD_GUI.c **** 			for (UWORD X = 0; X < Paint.WidthByte; X++ ) {
 954              		.loc 1 271 14 view .LVU306
 955 00ba 4FF0000C 		mov	ip, #0
 956 00be E8E7     		b	.L71
 957              	.L91:
 958              		.align	2
 959              	.L90:
 960 00c0 00000000 		.word	Paint
 961              	.LBE13:
 962              		.cfi_endproc
 963              	.LFE328:
 965              		.section	.text.EPD_ClearWindows,"ax",%progbits
 966              		.align	1
 967              		.global	EPD_ClearWindows
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 972              	EPD_ClearWindows:
 973              	.LVL79:
 974              	.LFB329:
 279:Core/Src/EPD_GUI.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 26


 280:Core/Src/EPD_GUI.c **** /******************************************************************************
 281:Core/Src/EPD_GUI.c **** function: Clear the color of a window
 282:Core/Src/EPD_GUI.c **** parameter:
 283:Core/Src/EPD_GUI.c ****     Xstart : x starting point
 284:Core/Src/EPD_GUI.c ****     Ystart : Y starting point
 285:Core/Src/EPD_GUI.c ****     Xend   : x end point
 286:Core/Src/EPD_GUI.c ****     Yend   : y end point
 287:Core/Src/EPD_GUI.c ****     Color  : Painted colors
 288:Core/Src/EPD_GUI.c **** ******************************************************************************/
 289:Core/Src/EPD_GUI.c **** void EPD_ClearWindows(UWORD Xstart, UWORD Ystart, UWORD Xend, UWORD Yend, UWORD Color)
 290:Core/Src/EPD_GUI.c **** {
 975              		.loc 1 290 1 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 4, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979              		.loc 1 290 1 is_stmt 0 view .LVU308
 980 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 981              		.cfi_def_cfa_offset 32
 982              		.cfi_offset 3, -32
 983              		.cfi_offset 4, -28
 984              		.cfi_offset 5, -24
 985              		.cfi_offset 6, -20
 986              		.cfi_offset 7, -16
 987              		.cfi_offset 8, -12
 988              		.cfi_offset 9, -8
 989              		.cfi_offset 14, -4
 990 0004 8146     		mov	r9, r0
 991 0006 0D46     		mov	r5, r1
 992 0008 1746     		mov	r7, r2
 993 000a 9846     		mov	r8, r3
 994 000c BDF82060 		ldrh	r6, [sp, #32]
 291:Core/Src/EPD_GUI.c ****     UWORD X, Y;
 995              		.loc 1 291 5 is_stmt 1 view .LVU309
 292:Core/Src/EPD_GUI.c ****     for (Y = Ystart; Y < Yend; Y++) {
 996              		.loc 1 292 5 view .LVU310
 997              	.LVL80:
 998              		.loc 1 292 5 is_stmt 0 view .LVU311
 999 0010 0AE0     		b	.L93
 1000              	.LVL81:
 1001              	.L94:
 293:Core/Src/EPD_GUI.c ****         for (X = Xstart; X < Xend; X++) {//8 pixel =  1 byte
 294:Core/Src/EPD_GUI.c ****             EPD_SetPixel(X, Y, Color);
 1002              		.loc 1 294 13 is_stmt 1 view .LVU312
 1003 0012 3246     		mov	r2, r6
 1004 0014 2946     		mov	r1, r5
 1005 0016 2046     		mov	r0, r4
 1006 0018 FFF7FEFF 		bl	EPD_SetPixel
 1007              	.LVL82:
 293:Core/Src/EPD_GUI.c ****         for (X = Xstart; X < Xend; X++) {//8 pixel =  1 byte
 1008              		.loc 1 293 37 discriminator 3 view .LVU313
 1009 001c 0134     		adds	r4, r4, #1
 1010              	.LVL83:
 293:Core/Src/EPD_GUI.c ****         for (X = Xstart; X < Xend; X++) {//8 pixel =  1 byte
 1011              		.loc 1 293 37 is_stmt 0 discriminator 3 view .LVU314
 1012 001e A4B2     		uxth	r4, r4
 1013              	.LVL84:
 1014              	.L95:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 27


 293:Core/Src/EPD_GUI.c ****         for (X = Xstart; X < Xend; X++) {//8 pixel =  1 byte
 1015              		.loc 1 293 28 is_stmt 1 discriminator 1 view .LVU315
 1016 0020 BC42     		cmp	r4, r7
 1017 0022 F6D3     		bcc	.L94
 292:Core/Src/EPD_GUI.c ****     for (Y = Ystart; Y < Yend; Y++) {
 1018              		.loc 1 292 33 discriminator 2 view .LVU316
 1019 0024 0135     		adds	r5, r5, #1
 1020              	.LVL85:
 292:Core/Src/EPD_GUI.c ****     for (Y = Ystart; Y < Yend; Y++) {
 1021              		.loc 1 292 33 is_stmt 0 discriminator 2 view .LVU317
 1022 0026 ADB2     		uxth	r5, r5
 1023              	.LVL86:
 1024              	.L93:
 292:Core/Src/EPD_GUI.c ****     for (Y = Ystart; Y < Yend; Y++) {
 1025              		.loc 1 292 24 is_stmt 1 discriminator 1 view .LVU318
 1026 0028 4545     		cmp	r5, r8
 1027 002a 01D2     		bcs	.L98
 293:Core/Src/EPD_GUI.c ****         for (X = Xstart; X < Xend; X++) {//8 pixel =  1 byte
 1028              		.loc 1 293 16 is_stmt 0 view .LVU319
 1029 002c 4C46     		mov	r4, r9
 1030 002e F7E7     		b	.L95
 1031              	.L98:
 295:Core/Src/EPD_GUI.c ****         }
 296:Core/Src/EPD_GUI.c ****     }
 297:Core/Src/EPD_GUI.c **** }
 1032              		.loc 1 297 1 view .LVU320
 1033 0030 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1034              		.loc 1 297 1 view .LVU321
 1035              		.cfi_endproc
 1036              	.LFE329:
 1038              		.section	.text.EPD_DrawPoint,"ax",%progbits
 1039              		.align	1
 1040              		.global	EPD_DrawPoint
 1041              		.syntax unified
 1042              		.thumb
 1043              		.thumb_func
 1045              	EPD_DrawPoint:
 1046              	.LVL87:
 1047              	.LFB330:
 298:Core/Src/EPD_GUI.c **** 
 299:Core/Src/EPD_GUI.c **** /******************************************************************************
 300:Core/Src/EPD_GUI.c **** function: Draw Point(Xpoint, Ypoint) Fill the color
 301:Core/Src/EPD_GUI.c **** parameter:
 302:Core/Src/EPD_GUI.c ****     Xpoint		: The Xpoint coordinate of the point
 303:Core/Src/EPD_GUI.c ****     Ypoint		: The Ypoint coordinate of the point
 304:Core/Src/EPD_GUI.c ****     Color		: Painted color
 305:Core/Src/EPD_GUI.c ****     Dot_Pixel	: point size
 306:Core/Src/EPD_GUI.c ****     Dot_Style	: point Style
 307:Core/Src/EPD_GUI.c **** ******************************************************************************/
 308:Core/Src/EPD_GUI.c **** void EPD_DrawPoint(UWORD Xpoint, UWORD Ypoint, UWORD Color,
 309:Core/Src/EPD_GUI.c ****                      DOT_PIXEL Dot_Pixel, DOT_STYLE Dot_Style)
 310:Core/Src/EPD_GUI.c **** {
 1048              		.loc 1 310 1 is_stmt 1 view -0
 1049              		.cfi_startproc
 1050              		@ args = 4, pretend = 0, frame = 0
 1051              		@ frame_needed = 0, uses_anonymous_args = 0
 1052              		.loc 1 310 1 is_stmt 0 view .LVU323
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 28


 1053 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1054              		.cfi_def_cfa_offset 40
 1055              		.cfi_offset 3, -40
 1056              		.cfi_offset 4, -36
 1057              		.cfi_offset 5, -32
 1058              		.cfi_offset 6, -28
 1059              		.cfi_offset 7, -24
 1060              		.cfi_offset 8, -20
 1061              		.cfi_offset 9, -16
 1062              		.cfi_offset 10, -12
 1063              		.cfi_offset 11, -8
 1064              		.cfi_offset 14, -4
 1065 0004 1D46     		mov	r5, r3
 311:Core/Src/EPD_GUI.c ****     if (Xpoint > Paint.Width || Ypoint > Paint.Height) {
 1066              		.loc 1 311 5 is_stmt 1 view .LVU324
 1067              		.loc 1 311 23 is_stmt 0 view .LVU325
 1068 0006 2D4B     		ldr	r3, .L112
 1069              	.LVL88:
 1070              		.loc 1 311 23 view .LVU326
 1071 0008 9B88     		ldrh	r3, [r3, #4]
 1072              		.loc 1 311 8 view .LVU327
 1073 000a 8342     		cmp	r3, r0
 1074 000c 53D3     		bcc	.L99
 1075 000e 0646     		mov	r6, r0
 1076 0010 0F46     		mov	r7, r1
 1077 0012 9046     		mov	r8, r2
 1078              		.loc 1 311 47 discriminator 1 view .LVU328
 1079 0014 294B     		ldr	r3, .L112
 1080 0016 DB88     		ldrh	r3, [r3, #6]
 1081              		.loc 1 311 30 discriminator 1 view .LVU329
 1082 0018 8B42     		cmp	r3, r1
 1083 001a 4CD3     		bcc	.L99
 312:Core/Src/EPD_GUI.c ****         return;
 313:Core/Src/EPD_GUI.c ****     }
 314:Core/Src/EPD_GUI.c **** 
 315:Core/Src/EPD_GUI.c ****     int16_t XDir_Num , YDir_Num;
 1084              		.loc 1 315 5 is_stmt 1 view .LVU330
 316:Core/Src/EPD_GUI.c ****     if (Dot_Style == DOT_FILL_AROUND) {
 1085              		.loc 1 316 5 view .LVU331
 1086              		.loc 1 316 8 is_stmt 0 view .LVU332
 1087 001c 9DF82830 		ldrb	r3, [sp, #40]	@ zero_extendqisi2
 1088 0020 012B     		cmp	r3, #1
 1089 0022 29D0     		beq	.L108
 317:Core/Src/EPD_GUI.c ****         for (XDir_Num = 0; XDir_Num < 2 * Dot_Pixel - 1; XDir_Num++) {
 318:Core/Src/EPD_GUI.c ****             for (YDir_Num = 0; YDir_Num < 2 * Dot_Pixel - 1; YDir_Num++) {
 319:Core/Src/EPD_GUI.c ****                 if(Xpoint + XDir_Num - Dot_Pixel < 0 || Ypoint + YDir_Num - Dot_Pixel < 0)
 320:Core/Src/EPD_GUI.c ****                     break;
 321:Core/Src/EPD_GUI.c ****                 // printf("x = %d, y = %d\r\n", Xpoint + XDir_Num - Dot_Pixel, Ypoint + YDir_Num - 
 322:Core/Src/EPD_GUI.c ****                 EPD_SetPixel(Xpoint + XDir_Num - Dot_Pixel, Ypoint + YDir_Num - Dot_Pixel, Color);
 323:Core/Src/EPD_GUI.c ****             }
 324:Core/Src/EPD_GUI.c ****         }
 325:Core/Src/EPD_GUI.c ****     } else {
 326:Core/Src/EPD_GUI.c ****         for (XDir_Num = 0; XDir_Num <  Dot_Pixel; XDir_Num++) {
 1090              		.loc 1 326 23 view .LVU333
 1091 0024 4FF00009 		mov	r9, #0
 1092 0028 40E0     		b	.L102
 1093              	.LVL89:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 29


 1094              	.L103:
 317:Core/Src/EPD_GUI.c ****         for (XDir_Num = 0; XDir_Num < 2 * Dot_Pixel - 1; XDir_Num++) {
 1095              		.loc 1 317 66 is_stmt 1 discriminator 2 view .LVU334
 1096 002a 0134     		adds	r4, r4, #1
 1097              	.LVL90:
 317:Core/Src/EPD_GUI.c ****         for (XDir_Num = 0; XDir_Num < 2 * Dot_Pixel - 1; XDir_Num++) {
 1098              		.loc 1 317 66 is_stmt 0 discriminator 2 view .LVU335
 1099 002c 24B2     		sxth	r4, r4
 1100              	.LVL91:
 1101              	.L101:
 317:Core/Src/EPD_GUI.c ****         for (XDir_Num = 0; XDir_Num < 2 * Dot_Pixel - 1; XDir_Num++) {
 1102              		.loc 1 317 37 is_stmt 1 discriminator 1 view .LVU336
 1103 002e A246     		mov	r10, r4
 317:Core/Src/EPD_GUI.c ****         for (XDir_Num = 0; XDir_Num < 2 * Dot_Pixel - 1; XDir_Num++) {
 1104              		.loc 1 317 41 is_stmt 0 discriminator 1 view .LVU337
 1105 0030 4FEA4509 		lsl	r9, r5, #1
 317:Core/Src/EPD_GUI.c ****         for (XDir_Num = 0; XDir_Num < 2 * Dot_Pixel - 1; XDir_Num++) {
 1106              		.loc 1 317 53 discriminator 1 view .LVU338
 1107 0034 09F1FF39 		add	r9, r9, #-1
 317:Core/Src/EPD_GUI.c ****         for (XDir_Num = 0; XDir_Num < 2 * Dot_Pixel - 1; XDir_Num++) {
 1108              		.loc 1 317 37 discriminator 1 view .LVU339
 1109 0038 4C45     		cmp	r4, r9
 1110 003a 3CDA     		bge	.L99
 318:Core/Src/EPD_GUI.c ****                 if(Xpoint + XDir_Num - Dot_Pixel < 0 || Ypoint + YDir_Num - Dot_Pixel < 0)
 1111              		.loc 1 318 27 view .LVU340
 1112 003c 0023     		movs	r3, #0
 1113              	.L105:
 1114              	.LVL92:
 318:Core/Src/EPD_GUI.c ****                 if(Xpoint + XDir_Num - Dot_Pixel < 0 || Ypoint + YDir_Num - Dot_Pixel < 0)
 1115              		.loc 1 318 41 is_stmt 1 discriminator 1 view .LVU341
 1116 003e 4B45     		cmp	r3, r9
 1117 0040 F3DA     		bge	.L103
 319:Core/Src/EPD_GUI.c ****                     break;
 1118              		.loc 1 319 17 view .LVU342
 319:Core/Src/EPD_GUI.c ****                     break;
 1119              		.loc 1 319 27 is_stmt 0 view .LVU343
 1120 0042 06EB0A02 		add	r2, r6, r10
 319:Core/Src/EPD_GUI.c ****                     break;
 1121              		.loc 1 319 38 view .LVU344
 1122 0046 521B     		subs	r2, r2, r5
 319:Core/Src/EPD_GUI.c ****                     break;
 1123              		.loc 1 319 19 view .LVU345
 1124 0048 002A     		cmp	r2, #0
 1125 004a EEDB     		blt	.L103
 319:Core/Src/EPD_GUI.c ****                     break;
 1126              		.loc 1 319 64 discriminator 1 view .LVU346
 1127 004c FA18     		adds	r2, r7, r3
 319:Core/Src/EPD_GUI.c ****                     break;
 1128              		.loc 1 319 75 discriminator 1 view .LVU347
 1129 004e 521B     		subs	r2, r2, r5
 319:Core/Src/EPD_GUI.c ****                     break;
 1130              		.loc 1 319 54 discriminator 1 view .LVU348
 1131 0050 002A     		cmp	r2, #0
 1132 0052 EADB     		blt	.L103
 322:Core/Src/EPD_GUI.c ****             }
 1133              		.loc 1 322 17 is_stmt 1 view .LVU349
 322:Core/Src/EPD_GUI.c ****             }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 30


 1134              		.loc 1 322 37 is_stmt 0 view .LVU350
 1135 0054 3019     		adds	r0, r6, r4
 1136 0056 80B2     		uxth	r0, r0
 322:Core/Src/EPD_GUI.c ****             }
 1137              		.loc 1 322 68 view .LVU351
 1138 0058 1FFA83FB 		uxth	fp, r3
 1139 005c 0BEB0701 		add	r1, fp, r7
 1140 0060 89B2     		uxth	r1, r1
 322:Core/Src/EPD_GUI.c ****             }
 1141              		.loc 1 322 17 view .LVU352
 1142 0062 491B     		subs	r1, r1, r5
 1143 0064 401B     		subs	r0, r0, r5
 1144 0066 4246     		mov	r2, r8
 1145 0068 89B2     		uxth	r1, r1
 1146 006a 80B2     		uxth	r0, r0
 1147 006c FFF7FEFF 		bl	EPD_SetPixel
 1148              	.LVL93:
 318:Core/Src/EPD_GUI.c ****                 if(Xpoint + XDir_Num - Dot_Pixel < 0 || Ypoint + YDir_Num - Dot_Pixel < 0)
 1149              		.loc 1 318 70 is_stmt 1 discriminator 2 view .LVU353
 1150 0070 0BF10103 		add	r3, fp, #1
 1151 0074 1BB2     		sxth	r3, r3
 1152              	.LVL94:
 318:Core/Src/EPD_GUI.c ****                 if(Xpoint + XDir_Num - Dot_Pixel < 0 || Ypoint + YDir_Num - Dot_Pixel < 0)
 1153              		.loc 1 318 70 is_stmt 0 discriminator 2 view .LVU354
 1154 0076 E2E7     		b	.L105
 1155              	.LVL95:
 1156              	.L108:
 317:Core/Src/EPD_GUI.c ****             for (YDir_Num = 0; YDir_Num < 2 * Dot_Pixel - 1; YDir_Num++) {
 1157              		.loc 1 317 23 view .LVU355
 1158 0078 0024     		movs	r4, #0
 1159 007a D8E7     		b	.L101
 1160              	.LVL96:
 1161              	.L106:
 327:Core/Src/EPD_GUI.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 328:Core/Src/EPD_GUI.c ****                 EPD_SetPixel(Xpoint + XDir_Num - 1, Ypoint + YDir_Num - 1, Color);
 1162              		.loc 1 328 17 is_stmt 1 view .LVU356
 1163              		.loc 1 328 37 is_stmt 0 view .LVU357
 1164 007c 06EB0900 		add	r0, r6, r9
 1165 0080 80B2     		uxth	r0, r0
 1166              		.loc 1 328 60 view .LVU358
 1167 0082 1FFA8CF4 		uxth	r4, ip
 1168 0086 E119     		adds	r1, r4, r7
 1169 0088 89B2     		uxth	r1, r1
 1170              		.loc 1 328 17 view .LVU359
 1171 008a 0139     		subs	r1, r1, #1
 1172 008c 0138     		subs	r0, r0, #1
 1173 008e 4246     		mov	r2, r8
 1174 0090 89B2     		uxth	r1, r1
 1175 0092 80B2     		uxth	r0, r0
 1176 0094 FFF7FEFF 		bl	EPD_SetPixel
 1177              	.LVL97:
 327:Core/Src/EPD_GUI.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 1178              		.loc 1 327 63 is_stmt 1 discriminator 3 view .LVU360
 1179 0098 04F1010C 		add	ip, r4, #1
 1180 009c 0FFA8CFC 		sxth	ip, ip
 1181              	.LVL98:
 1182              	.L107:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 31


 327:Core/Src/EPD_GUI.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 1183              		.loc 1 327 41 discriminator 1 view .LVU361
 1184 00a0 AC45     		cmp	ip, r5
 1185 00a2 EBDB     		blt	.L106
 326:Core/Src/EPD_GUI.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 1186              		.loc 1 326 59 discriminator 2 view .LVU362
 1187 00a4 09F10109 		add	r9, r9, #1
 1188              	.LVL99:
 326:Core/Src/EPD_GUI.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 1189              		.loc 1 326 59 is_stmt 0 discriminator 2 view .LVU363
 1190 00a8 0FFA89F9 		sxth	r9, r9
 1191              	.LVL100:
 1192              	.L102:
 326:Core/Src/EPD_GUI.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 1193              		.loc 1 326 37 is_stmt 1 discriminator 1 view .LVU364
 1194 00ac A945     		cmp	r9, r5
 1195 00ae 02DA     		bge	.L99
 327:Core/Src/EPD_GUI.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 1196              		.loc 1 327 27 is_stmt 0 view .LVU365
 1197 00b0 4FF0000C 		mov	ip, #0
 1198 00b4 F4E7     		b	.L107
 1199              	.LVL101:
 1200              	.L99:
 329:Core/Src/EPD_GUI.c ****             }
 330:Core/Src/EPD_GUI.c ****         }
 331:Core/Src/EPD_GUI.c ****     }
 332:Core/Src/EPD_GUI.c **** }
 1201              		.loc 1 332 1 view .LVU366
 1202 00b6 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1203              	.LVL102:
 1204              	.L113:
 1205              		.loc 1 332 1 view .LVU367
 1206 00ba 00BF     		.align	2
 1207              	.L112:
 1208 00bc 00000000 		.word	Paint
 1209              		.cfi_endproc
 1210              	.LFE330:
 1212              		.section	.text.EPD_DrawLine,"ax",%progbits
 1213              		.align	1
 1214              		.global	EPD_DrawLine
 1215              		.syntax unified
 1216              		.thumb
 1217              		.thumb_func
 1219              	EPD_DrawLine:
 1220              	.LVL103:
 1221              	.LFB331:
 333:Core/Src/EPD_GUI.c **** 
 334:Core/Src/EPD_GUI.c **** /******************************************************************************
 335:Core/Src/EPD_GUI.c **** function: Draw a line of arbitrary slope
 336:Core/Src/EPD_GUI.c **** parameter:
 337:Core/Src/EPD_GUI.c ****     Xstart ：Starting Xpoint point coordinates
 338:Core/Src/EPD_GUI.c ****     Ystart ：Starting Xpoint point coordinates
 339:Core/Src/EPD_GUI.c ****     Xend   ：End point Xpoint coordinate
 340:Core/Src/EPD_GUI.c ****     Yend   ：End point Ypoint coordinate
 341:Core/Src/EPD_GUI.c ****     Color  ：The color of the line segment
 342:Core/Src/EPD_GUI.c ****     Line_width : Line width
 343:Core/Src/EPD_GUI.c ****     Line_Style: Solid and dotted lines
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 32


 344:Core/Src/EPD_GUI.c **** ******************************************************************************/
 345:Core/Src/EPD_GUI.c **** void EPD_DrawLine(UWORD Xstart, UWORD Ystart, UWORD Xend, UWORD Yend,
 346:Core/Src/EPD_GUI.c ****                     UWORD Color, DOT_PIXEL Line_width, LINE_STYLE Line_Style)
 347:Core/Src/EPD_GUI.c **** {
 1222              		.loc 1 347 1 is_stmt 1 view -0
 1223              		.cfi_startproc
 1224              		@ args = 12, pretend = 0, frame = 32
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              		.loc 1 347 1 is_stmt 0 view .LVU369
 1227 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1228              		.cfi_def_cfa_offset 36
 1229              		.cfi_offset 4, -36
 1230              		.cfi_offset 5, -32
 1231              		.cfi_offset 6, -28
 1232              		.cfi_offset 7, -24
 1233              		.cfi_offset 8, -20
 1234              		.cfi_offset 9, -16
 1235              		.cfi_offset 10, -12
 1236              		.cfi_offset 11, -8
 1237              		.cfi_offset 14, -4
 1238 0004 8BB0     		sub	sp, sp, #44
 1239              		.cfi_def_cfa_offset 80
 1240 0006 0546     		mov	r5, r0
 1241 0008 0E46     		mov	r6, r1
 1242 000a 0692     		str	r2, [sp, #24]
 1243 000c 1C46     		mov	r4, r3
 1244 000e 0593     		str	r3, [sp, #20]
 1245 0010 BDF85010 		ldrh	r1, [sp, #80]
 1246              	.LVL104:
 1247              		.loc 1 347 1 view .LVU370
 1248 0014 0391     		str	r1, [sp, #12]
 1249 0016 9DF854B0 		ldrb	fp, [sp, #84]	@ zero_extendqisi2
 1250 001a 9DF858A0 		ldrb	r10, [sp, #88]	@ zero_extendqisi2
 348:Core/Src/EPD_GUI.c ****     if (Xstart > Paint.Width || Ystart > Paint.Height ||
 1251              		.loc 1 348 5 is_stmt 1 view .LVU371
 1252              		.loc 1 348 23 is_stmt 0 view .LVU372
 1253 001e 374B     		ldr	r3, .L126
 1254              	.LVL105:
 1255              		.loc 1 348 23 view .LVU373
 1256 0020 9B88     		ldrh	r3, [r3, #4]
 1257              		.loc 1 348 8 view .LVU374
 1258 0022 8342     		cmp	r3, r0
 1259 0024 66D3     		bcc	.L114
 1260 0026 1046     		mov	r0, r2
 1261              	.LVL106:
 1262              		.loc 1 348 47 discriminator 1 view .LVU375
 1263 0028 344A     		ldr	r2, .L126
 1264              	.LVL107:
 1265              		.loc 1 348 47 discriminator 1 view .LVU376
 1266 002a D288     		ldrh	r2, [r2, #6]
 1267              		.loc 1 348 30 discriminator 1 view .LVU377
 1268 002c B242     		cmp	r2, r6
 1269 002e 61D3     		bcc	.L114
 1270              		.loc 1 348 55 discriminator 2 view .LVU378
 1271 0030 8342     		cmp	r3, r0
 1272 0032 5FD3     		bcc	.L114
 349:Core/Src/EPD_GUI.c ****         Xend > Paint.Width || Yend > Paint.Height) {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 33


 1273              		.loc 1 349 28 view .LVU379
 1274 0034 A242     		cmp	r2, r4
 1275 0036 5DD3     		bcc	.L114
 350:Core/Src/EPD_GUI.c ****         return;
 351:Core/Src/EPD_GUI.c ****     }
 352:Core/Src/EPD_GUI.c **** 
 353:Core/Src/EPD_GUI.c ****     UWORD Xpoint = Xstart;
 1276              		.loc 1 353 5 is_stmt 1 view .LVU380
 1277              	.LVL108:
 354:Core/Src/EPD_GUI.c ****     UWORD Ypoint = Ystart;
 1278              		.loc 1 354 5 view .LVU381
 355:Core/Src/EPD_GUI.c ****     int dx = (int)Xend - (int)Xstart >= 0 ? Xend - Xstart : Xstart - Xend;
 1279              		.loc 1 355 5 view .LVU382
 1280              		.loc 1 355 24 is_stmt 0 view .LVU383
 1281 0038 A0EB0509 		sub	r9, r0, r5
 1282              		.loc 1 355 9 view .LVU384
 1283 003c B9F1000F 		cmp	r9, #0
 1284 0040 B8BF     		it	lt
 1285 0042 C9F10009 		rsblt	r9, r9, #0
 1286              	.LVL109:
 356:Core/Src/EPD_GUI.c ****     int dy = (int)Yend - (int)Ystart <= 0 ? Yend - Ystart : Ystart - Yend;
 1287              		.loc 1 356 5 is_stmt 1 view .LVU385
 1288              		.loc 1 356 24 is_stmt 0 view .LVU386
 1289 0046 A31B     		subs	r3, r4, r6
 1290              		.loc 1 356 59 view .LVU387
 1291 0048 83EAE371 		eor	r1, r3, r3, asr #31
 1292 004c A1EBE371 		sub	r1, r1, r3, asr #31
 1293 0050 0791     		str	r1, [sp, #28]
 1294 0052 4B42     		rsbs	r3, r1, #0
 1295 0054 0493     		str	r3, [sp, #16]
 1296              	.LVL110:
 357:Core/Src/EPD_GUI.c **** 
 358:Core/Src/EPD_GUI.c ****     // Increment direction, 1 is positive, -1 is counter;
 359:Core/Src/EPD_GUI.c ****     int XAddway = Xstart < Xend ? 1 : -1;
 1297              		.loc 1 359 5 is_stmt 1 view .LVU388
 1298              		.loc 1 359 37 is_stmt 0 view .LVU389
 1299 0056 8542     		cmp	r5, r0
 1300 0058 0BD2     		bcs	.L123
 1301              		.loc 1 359 37 discriminator 1 view .LVU390
 1302 005a 0123     		movs	r3, #1
 1303              	.LVL111:
 1304              		.loc 1 359 37 discriminator 1 view .LVU391
 1305 005c 0893     		str	r3, [sp, #32]
 1306              	.L116:
 1307              	.LVL112:
 360:Core/Src/EPD_GUI.c ****     int YAddway = Ystart < Yend ? 1 : -1;
 1308              		.loc 1 360 5 is_stmt 1 view .LVU392
 1309              		.loc 1 360 37 is_stmt 0 view .LVU393
 1310 005e 059B     		ldr	r3, [sp, #20]
 1311 0060 9E42     		cmp	r6, r3
 1312 0062 0AD2     		bcs	.L124
 1313              		.loc 1 360 37 discriminator 1 view .LVU394
 1314 0064 0123     		movs	r3, #1
 1315 0066 0993     		str	r3, [sp, #36]
 1316              	.L117:
 1317              	.LVL113:
 361:Core/Src/EPD_GUI.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 34


 362:Core/Src/EPD_GUI.c ****     //Cumulative error
 363:Core/Src/EPD_GUI.c ****     int Esp = dx + dy;
 1318              		.loc 1 363 5 is_stmt 1 view .LVU395
 1319              		.loc 1 363 9 is_stmt 0 view .LVU396
 1320 0068 079B     		ldr	r3, [sp, #28]
 1321 006a A9EB0308 		sub	r8, r9, r3
 1322              	.LVL114:
 364:Core/Src/EPD_GUI.c ****     char Dotted_Len = 0;
 1323              		.loc 1 364 5 is_stmt 1 view .LVU397
 1324              		.loc 1 364 10 is_stmt 0 view .LVU398
 1325 006e 0024     		movs	r4, #0
 1326              	.LVL115:
 1327              		.loc 1 364 10 view .LVU399
 1328 0070 26E0     		b	.L118
 1329              	.LVL116:
 1330              	.L123:
 359:Core/Src/EPD_GUI.c ****     int YAddway = Ystart < Yend ? 1 : -1;
 1331              		.loc 1 359 37 discriminator 2 view .LVU400
 1332 0072 4FF0FF33 		mov	r3, #-1
 1333              	.LVL117:
 359:Core/Src/EPD_GUI.c ****     int YAddway = Ystart < Yend ? 1 : -1;
 1334              		.loc 1 359 37 discriminator 2 view .LVU401
 1335 0076 0893     		str	r3, [sp, #32]
 1336 0078 F1E7     		b	.L116
 1337              	.LVL118:
 1338              	.L124:
 360:Core/Src/EPD_GUI.c **** 
 1339              		.loc 1 360 37 discriminator 2 view .LVU402
 1340 007a 4FF0FF33 		mov	r3, #-1
 1341 007e 0993     		str	r3, [sp, #36]
 1342 0080 F2E7     		b	.L117
 1343              	.LVL119:
 1344              	.L119:
 365:Core/Src/EPD_GUI.c **** 
 366:Core/Src/EPD_GUI.c ****     for (;;) {
 367:Core/Src/EPD_GUI.c ****         Dotted_Len++;
 368:Core/Src/EPD_GUI.c ****         //Painted dotted line, 2 point is really virtual
 369:Core/Src/EPD_GUI.c ****         if (Line_Style == LINE_STYLE_DOTTED && Dotted_Len % 3 == 0) {
 370:Core/Src/EPD_GUI.c ****             //Debug("LINE_DOTTED\r\n");
 371:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(Xpoint, Ypoint, IMAGE_BACKGROUND, Line_width, DOT_STYLE_DFT);
 372:Core/Src/EPD_GUI.c ****             Dotted_Len = 0;
 373:Core/Src/EPD_GUI.c ****         } else {
 374:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(Xpoint, Ypoint, Color, Line_width, DOT_STYLE_DFT);
 1345              		.loc 1 374 13 is_stmt 1 view .LVU403
 1346 0082 0123     		movs	r3, #1
 1347 0084 0093     		str	r3, [sp]
 1348 0086 5B46     		mov	r3, fp
 1349 0088 039A     		ldr	r2, [sp, #12]
 1350 008a 3146     		mov	r1, r6
 1351 008c 2846     		mov	r0, r5
 1352 008e FFF7FEFF 		bl	EPD_DrawPoint
 1353              	.LVL120:
 1354              	.L120:
 375:Core/Src/EPD_GUI.c ****         }
 376:Core/Src/EPD_GUI.c ****         if (2 * Esp >= dy) {
 1355              		.loc 1 376 9 view .LVU404
 1356              		.loc 1 376 12 is_stmt 0 view .LVU405
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 35


 1357 0092 049B     		ldr	r3, [sp, #16]
 1358 0094 B3EB480F 		cmp	r3, r8, lsl #1
 1359 0098 08DC     		bgt	.L121
 377:Core/Src/EPD_GUI.c ****             if (Xpoint == Xend)
 1360              		.loc 1 377 13 is_stmt 1 view .LVU406
 1361              		.loc 1 377 16 is_stmt 0 view .LVU407
 1362 009a 069B     		ldr	r3, [sp, #24]
 1363 009c 9D42     		cmp	r5, r3
 1364 009e 29D0     		beq	.L114
 378:Core/Src/EPD_GUI.c ****                 break;
 379:Core/Src/EPD_GUI.c ****             Esp += dy;
 1365              		.loc 1 379 13 is_stmt 1 view .LVU408
 1366 00a0 079B     		ldr	r3, [sp, #28]
 1367 00a2 A8EB0308 		sub	r8, r8, r3
 1368              	.LVL121:
 380:Core/Src/EPD_GUI.c ****             Xpoint += XAddway;
 1369              		.loc 1 380 13 view .LVU409
 1370              		.loc 1 380 20 is_stmt 0 view .LVU410
 1371 00a6 089B     		ldr	r3, [sp, #32]
 1372 00a8 1D44     		add	r5, r5, r3
 1373              	.LVL122:
 1374              		.loc 1 380 20 view .LVU411
 1375 00aa ADB2     		uxth	r5, r5
 1376              	.L121:
 1377              	.LVL123:
 381:Core/Src/EPD_GUI.c ****         }
 382:Core/Src/EPD_GUI.c ****         if (2 * Esp <= dx) {
 1378              		.loc 1 382 9 is_stmt 1 view .LVU412
 1379              		.loc 1 382 12 is_stmt 0 view .LVU413
 1380 00ac B9EB480F 		cmp	r9, r8, lsl #1
 1381 00b0 06DB     		blt	.L118
 383:Core/Src/EPD_GUI.c ****             if (Ypoint == Yend)
 1382              		.loc 1 383 13 is_stmt 1 view .LVU414
 1383              		.loc 1 383 16 is_stmt 0 view .LVU415
 1384 00b2 059B     		ldr	r3, [sp, #20]
 1385 00b4 9E42     		cmp	r6, r3
 1386 00b6 1DD0     		beq	.L114
 384:Core/Src/EPD_GUI.c ****                 break;
 385:Core/Src/EPD_GUI.c ****             Esp += dx;
 1387              		.loc 1 385 13 is_stmt 1 view .LVU416
 1388              		.loc 1 385 17 is_stmt 0 view .LVU417
 1389 00b8 C844     		add	r8, r8, r9
 1390              	.LVL124:
 386:Core/Src/EPD_GUI.c ****             Ypoint += YAddway;
 1391              		.loc 1 386 13 is_stmt 1 view .LVU418
 1392              		.loc 1 386 20 is_stmt 0 view .LVU419
 1393 00ba 099B     		ldr	r3, [sp, #36]
 1394 00bc 1E44     		add	r6, r6, r3
 1395              	.LVL125:
 1396              		.loc 1 386 20 view .LVU420
 1397 00be B6B2     		uxth	r6, r6
 1398              	.LVL126:
 1399              	.L118:
 366:Core/Src/EPD_GUI.c ****         Dotted_Len++;
 1400              		.loc 1 366 5 is_stmt 1 view .LVU421
 367:Core/Src/EPD_GUI.c ****         //Painted dotted line, 2 point is really virtual
 1401              		.loc 1 367 9 view .LVU422
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 36


 367:Core/Src/EPD_GUI.c ****         //Painted dotted line, 2 point is really virtual
 1402              		.loc 1 367 19 is_stmt 0 view .LVU423
 1403 00c0 0134     		adds	r4, r4, #1
 1404              	.LVL127:
 367:Core/Src/EPD_GUI.c ****         //Painted dotted line, 2 point is really virtual
 1405              		.loc 1 367 19 view .LVU424
 1406 00c2 E4B2     		uxtb	r4, r4
 1407              	.LVL128:
 369:Core/Src/EPD_GUI.c ****             //Debug("LINE_DOTTED\r\n");
 1408              		.loc 1 369 9 is_stmt 1 view .LVU425
 369:Core/Src/EPD_GUI.c ****             //Debug("LINE_DOTTED\r\n");
 1409              		.loc 1 369 12 is_stmt 0 view .LVU426
 1410 00c4 BAF1010F 		cmp	r10, #1
 1411 00c8 DBD1     		bne	.L119
 369:Core/Src/EPD_GUI.c ****             //Debug("LINE_DOTTED\r\n");
 1412              		.loc 1 369 63 discriminator 1 view .LVU427
 1413 00ca 0D4B     		ldr	r3, .L126+4
 1414 00cc A3FB0423 		umull	r2, r3, r3, r4
 1415 00d0 23F00107 		bic	r7, r3, #1
 1416 00d4 07EB5307 		add	r7, r7, r3, lsr #1
 1417 00d8 E71B     		subs	r7, r4, r7
 369:Core/Src/EPD_GUI.c ****             //Debug("LINE_DOTTED\r\n");
 1418              		.loc 1 369 45 discriminator 1 view .LVU428
 1419 00da 17F0FF07 		ands	r7, r7, #255
 1420 00de D0D1     		bne	.L119
 371:Core/Src/EPD_GUI.c ****             Dotted_Len = 0;
 1421              		.loc 1 371 13 is_stmt 1 view .LVU429
 1422 00e0 0123     		movs	r3, #1
 1423 00e2 0093     		str	r3, [sp]
 1424 00e4 5B46     		mov	r3, fp
 1425 00e6 FF22     		movs	r2, #255
 1426 00e8 3146     		mov	r1, r6
 1427 00ea 2846     		mov	r0, r5
 1428 00ec FFF7FEFF 		bl	EPD_DrawPoint
 1429              	.LVL129:
 372:Core/Src/EPD_GUI.c ****         } else {
 1430              		.loc 1 372 13 view .LVU430
 372:Core/Src/EPD_GUI.c ****         } else {
 1431              		.loc 1 372 24 is_stmt 0 view .LVU431
 1432 00f0 3C46     		mov	r4, r7
 1433 00f2 CEE7     		b	.L120
 1434              	.LVL130:
 1435              	.L114:
 387:Core/Src/EPD_GUI.c ****         }
 388:Core/Src/EPD_GUI.c ****     }
 389:Core/Src/EPD_GUI.c **** }
 1436              		.loc 1 389 1 view .LVU432
 1437 00f4 0BB0     		add	sp, sp, #44
 1438              		.cfi_def_cfa_offset 36
 1439              		@ sp needed
 1440 00f6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1441              	.LVL131:
 1442              	.L127:
 1443              		.loc 1 389 1 view .LVU433
 1444 00fa 00BF     		.align	2
 1445              	.L126:
 1446 00fc 00000000 		.word	Paint
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 37


 1447 0100 ABAAAAAA 		.word	-1431655765
 1448              		.cfi_endproc
 1449              	.LFE331:
 1451              		.section	.text.EPD_DrawRectangle,"ax",%progbits
 1452              		.align	1
 1453              		.global	EPD_DrawRectangle
 1454              		.syntax unified
 1455              		.thumb
 1456              		.thumb_func
 1458              	EPD_DrawRectangle:
 1459              	.LVL132:
 1460              	.LFB332:
 390:Core/Src/EPD_GUI.c **** 
 391:Core/Src/EPD_GUI.c **** /******************************************************************************
 392:Core/Src/EPD_GUI.c **** function: Draw a rectangle
 393:Core/Src/EPD_GUI.c **** parameter:
 394:Core/Src/EPD_GUI.c ****     Xstart ：Rectangular  Starting Xpoint point coordinates
 395:Core/Src/EPD_GUI.c ****     Ystart ：Rectangular  Starting Xpoint point coordinates
 396:Core/Src/EPD_GUI.c ****     Xend   ：Rectangular  End point Xpoint coordinate
 397:Core/Src/EPD_GUI.c ****     Yend   ：Rectangular  End point Ypoint coordinate
 398:Core/Src/EPD_GUI.c ****     Color  ：The color of the Rectangular segment
 399:Core/Src/EPD_GUI.c ****     Line_width: Line width
 400:Core/Src/EPD_GUI.c ****     Draw_Fill : Whether to fill the inside of the rectangle
 401:Core/Src/EPD_GUI.c **** ******************************************************************************/
 402:Core/Src/EPD_GUI.c **** void EPD_DrawRectangle(UWORD Xstart, UWORD Ystart, UWORD Xend, UWORD Yend,
 403:Core/Src/EPD_GUI.c ****                          UWORD Color, DOT_PIXEL Line_width, DRAW_FILL Draw_Fill)
 404:Core/Src/EPD_GUI.c **** {
 1461              		.loc 1 404 1 is_stmt 1 view -0
 1462              		.cfi_startproc
 1463              		@ args = 12, pretend = 0, frame = 0
 1464              		@ frame_needed = 0, uses_anonymous_args = 0
 1465              		.loc 1 404 1 is_stmt 0 view .LVU435
 1466 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1467              		.cfi_def_cfa_offset 32
 1468              		.cfi_offset 4, -32
 1469              		.cfi_offset 5, -28
 1470              		.cfi_offset 6, -24
 1471              		.cfi_offset 7, -20
 1472              		.cfi_offset 8, -16
 1473              		.cfi_offset 9, -12
 1474              		.cfi_offset 10, -8
 1475              		.cfi_offset 14, -4
 1476 0004 84B0     		sub	sp, sp, #16
 1477              		.cfi_def_cfa_offset 48
 1478 0006 1646     		mov	r6, r2
 1479 0008 1F46     		mov	r7, r3
 1480 000a BDF83080 		ldrh	r8, [sp, #48]
 1481 000e 9DF83490 		ldrb	r9, [sp, #52]	@ zero_extendqisi2
 1482 0012 9DF83820 		ldrb	r2, [sp, #56]	@ zero_extendqisi2
 1483              	.LVL133:
 405:Core/Src/EPD_GUI.c ****     if (Xstart > Paint.Width || Ystart > Paint.Height ||
 1484              		.loc 1 405 5 is_stmt 1 view .LVU436
 1485              		.loc 1 405 23 is_stmt 0 view .LVU437
 1486 0016 2A4B     		ldr	r3, .L135
 1487              	.LVL134:
 1488              		.loc 1 405 23 view .LVU438
 1489 0018 B3F804C0 		ldrh	ip, [r3, #4]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 38


 1490              		.loc 1 405 8 view .LVU439
 1491 001c 8445     		cmp	ip, r0
 1492 001e 4BD3     		bcc	.L128
 1493 0020 0546     		mov	r5, r0
 1494 0022 0C46     		mov	r4, r1
 1495              		.loc 1 405 47 discriminator 1 view .LVU440
 1496 0024 DB88     		ldrh	r3, [r3, #6]
 1497              		.loc 1 405 30 discriminator 1 view .LVU441
 1498 0026 8B42     		cmp	r3, r1
 1499 0028 46D3     		bcc	.L128
 1500              		.loc 1 405 55 discriminator 2 view .LVU442
 1501 002a B445     		cmp	ip, r6
 1502 002c 44D3     		bcc	.L128
 406:Core/Src/EPD_GUI.c ****         Xend > Paint.Width || Yend > Paint.Height) {
 1503              		.loc 1 406 28 view .LVU443
 1504 002e BB42     		cmp	r3, r7
 1505 0030 42D3     		bcc	.L128
 407:Core/Src/EPD_GUI.c ****         return;
 408:Core/Src/EPD_GUI.c ****     }
 409:Core/Src/EPD_GUI.c **** 
 410:Core/Src/EPD_GUI.c ****     if (Draw_Fill) {
 1506              		.loc 1 410 5 is_stmt 1 view .LVU444
 1507              		.loc 1 410 8 is_stmt 0 view .LVU445
 1508 0032 002A     		cmp	r2, #0
 1509 0034 3ED1     		bne	.L130
 411:Core/Src/EPD_GUI.c ****         UWORD Ypoint;
 412:Core/Src/EPD_GUI.c ****         for(Ypoint = Ystart; Ypoint < Yend; Ypoint++) {
 413:Core/Src/EPD_GUI.c ****             EPD_DrawLine(Xstart, Ypoint, Xend, Ypoint, Color , Line_width, LINE_STYLE_SOLID);
 414:Core/Src/EPD_GUI.c ****         }
 415:Core/Src/EPD_GUI.c ****     } else {
 416:Core/Src/EPD_GUI.c ****         EPD_DrawLine(Xstart, Ystart, Xend, Ystart, Color, Line_width, LINE_STYLE_SOLID);
 1510              		.loc 1 416 9 is_stmt 1 view .LVU446
 1511 0036 4FF0000A 		mov	r10, #0
 1512 003a CDF808A0 		str	r10, [sp, #8]
 1513 003e CDF80490 		str	r9, [sp, #4]
 1514 0042 CDF80080 		str	r8, [sp]
 1515 0046 0B46     		mov	r3, r1
 1516 0048 3246     		mov	r2, r6
 1517 004a FFF7FEFF 		bl	EPD_DrawLine
 1518              	.LVL135:
 417:Core/Src/EPD_GUI.c ****         EPD_DrawLine(Xstart, Ystart, Xstart, Yend, Color, Line_width, LINE_STYLE_SOLID);
 1519              		.loc 1 417 9 view .LVU447
 1520 004e CDF808A0 		str	r10, [sp, #8]
 1521 0052 CDF80490 		str	r9, [sp, #4]
 1522 0056 CDF80080 		str	r8, [sp]
 1523 005a 3B46     		mov	r3, r7
 1524 005c 2A46     		mov	r2, r5
 1525 005e 2146     		mov	r1, r4
 1526 0060 2846     		mov	r0, r5
 1527 0062 FFF7FEFF 		bl	EPD_DrawLine
 1528              	.LVL136:
 418:Core/Src/EPD_GUI.c ****         EPD_DrawLine(Xend, Yend, Xend, Ystart, Color, Line_width, LINE_STYLE_SOLID);
 1529              		.loc 1 418 9 view .LVU448
 1530 0066 CDF808A0 		str	r10, [sp, #8]
 1531 006a CDF80490 		str	r9, [sp, #4]
 1532 006e CDF80080 		str	r8, [sp]
 1533 0072 2346     		mov	r3, r4
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 39


 1534 0074 3246     		mov	r2, r6
 1535 0076 3946     		mov	r1, r7
 1536 0078 3046     		mov	r0, r6
 1537 007a FFF7FEFF 		bl	EPD_DrawLine
 1538              	.LVL137:
 419:Core/Src/EPD_GUI.c ****         EPD_DrawLine(Xend, Yend, Xstart, Yend, Color, Line_width, LINE_STYLE_SOLID);
 1539              		.loc 1 419 9 view .LVU449
 1540 007e CDF808A0 		str	r10, [sp, #8]
 1541 0082 CDF80490 		str	r9, [sp, #4]
 1542 0086 CDF80080 		str	r8, [sp]
 1543 008a 3B46     		mov	r3, r7
 1544 008c 2A46     		mov	r2, r5
 1545 008e 3946     		mov	r1, r7
 1546 0090 3046     		mov	r0, r6
 1547 0092 FFF7FEFF 		bl	EPD_DrawLine
 1548              	.LVL138:
 1549 0096 0FE0     		b	.L128
 1550              	.LVL139:
 1551              	.L132:
 1552              	.LBB16:
 413:Core/Src/EPD_GUI.c ****         }
 1553              		.loc 1 413 13 view .LVU450
 1554 0098 0023     		movs	r3, #0
 1555 009a 0293     		str	r3, [sp, #8]
 1556 009c CDF80490 		str	r9, [sp, #4]
 1557 00a0 CDF80080 		str	r8, [sp]
 1558 00a4 2346     		mov	r3, r4
 1559 00a6 3246     		mov	r2, r6
 1560 00a8 2146     		mov	r1, r4
 1561 00aa 2846     		mov	r0, r5
 1562 00ac FFF7FEFF 		bl	EPD_DrawLine
 1563              	.LVL140:
 412:Core/Src/EPD_GUI.c ****             EPD_DrawLine(Xstart, Ypoint, Xend, Ypoint, Color , Line_width, LINE_STYLE_SOLID);
 1564              		.loc 1 412 51 discriminator 3 view .LVU451
 1565 00b0 0134     		adds	r4, r4, #1
 1566              	.LVL141:
 412:Core/Src/EPD_GUI.c ****             EPD_DrawLine(Xstart, Ypoint, Xend, Ypoint, Color , Line_width, LINE_STYLE_SOLID);
 1567              		.loc 1 412 51 is_stmt 0 discriminator 3 view .LVU452
 1568 00b2 A4B2     		uxth	r4, r4
 1569              	.LVL142:
 1570              	.L130:
 412:Core/Src/EPD_GUI.c ****             EPD_DrawLine(Xstart, Ypoint, Xend, Ypoint, Color , Line_width, LINE_STYLE_SOLID);
 1571              		.loc 1 412 37 is_stmt 1 discriminator 1 view .LVU453
 1572 00b4 BC42     		cmp	r4, r7
 1573 00b6 EFD3     		bcc	.L132
 1574              	.LVL143:
 1575              	.L128:
 412:Core/Src/EPD_GUI.c ****             EPD_DrawLine(Xstart, Ypoint, Xend, Ypoint, Color , Line_width, LINE_STYLE_SOLID);
 1576              		.loc 1 412 37 is_stmt 0 discriminator 1 view .LVU454
 1577              	.LBE16:
 420:Core/Src/EPD_GUI.c ****     }
 421:Core/Src/EPD_GUI.c **** }
 1578              		.loc 1 421 1 view .LVU455
 1579 00b8 04B0     		add	sp, sp, #16
 1580              		.cfi_def_cfa_offset 32
 1581              		@ sp needed
 1582 00ba BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 40


 1583              	.LVL144:
 1584              	.L136:
 1585              		.loc 1 421 1 view .LVU456
 1586 00be 00BF     		.align	2
 1587              	.L135:
 1588 00c0 00000000 		.word	Paint
 1589              		.cfi_endproc
 1590              	.LFE332:
 1592              		.section	.text.EPD_DrawCircle,"ax",%progbits
 1593              		.align	1
 1594              		.global	EPD_DrawCircle
 1595              		.syntax unified
 1596              		.thumb
 1597              		.thumb_func
 1599              	EPD_DrawCircle:
 1600              	.LVL145:
 1601              	.LFB333:
 422:Core/Src/EPD_GUI.c **** 
 423:Core/Src/EPD_GUI.c **** /******************************************************************************
 424:Core/Src/EPD_GUI.c **** function: Use the 8-point method to draw a circle of the
 425:Core/Src/EPD_GUI.c ****             specified size at the specified position->
 426:Core/Src/EPD_GUI.c **** parameter:
 427:Core/Src/EPD_GUI.c ****     X_Center  ：Center X coordinate
 428:Core/Src/EPD_GUI.c ****     Y_Center  ：Center Y coordinate
 429:Core/Src/EPD_GUI.c ****     Radius    ：circle Radius
 430:Core/Src/EPD_GUI.c ****     Color     ：The color of the ：circle segment
 431:Core/Src/EPD_GUI.c ****     Line_width: Line width
 432:Core/Src/EPD_GUI.c ****     Draw_Fill : Whether to fill the inside of the Circle
 433:Core/Src/EPD_GUI.c **** ******************************************************************************/
 434:Core/Src/EPD_GUI.c **** void EPD_DrawCircle(UWORD X_Center, UWORD Y_Center, UWORD Radius,
 435:Core/Src/EPD_GUI.c ****                       UWORD Color, DOT_PIXEL Line_width, DRAW_FILL Draw_Fill)
 436:Core/Src/EPD_GUI.c **** {
 1602              		.loc 1 436 1 is_stmt 1 view -0
 1603              		.cfi_startproc
 1604              		@ args = 8, pretend = 0, frame = 32
 1605              		@ frame_needed = 0, uses_anonymous_args = 0
 1606              		.loc 1 436 1 is_stmt 0 view .LVU458
 1607 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1608              		.cfi_def_cfa_offset 36
 1609              		.cfi_offset 4, -36
 1610              		.cfi_offset 5, -32
 1611              		.cfi_offset 6, -28
 1612              		.cfi_offset 7, -24
 1613              		.cfi_offset 8, -20
 1614              		.cfi_offset 9, -16
 1615              		.cfi_offset 10, -12
 1616              		.cfi_offset 11, -8
 1617              		.cfi_offset 14, -4
 1618 0004 8BB0     		sub	sp, sp, #44
 1619              		.cfi_def_cfa_offset 80
 1620 0006 9DF85060 		ldrb	r6, [sp, #80]	@ zero_extendqisi2
 437:Core/Src/EPD_GUI.c ****     if (X_Center > Paint.Width || Y_Center >= Paint.Height) {
 1621              		.loc 1 437 5 is_stmt 1 view .LVU459
 1622              		.loc 1 437 25 is_stmt 0 view .LVU460
 1623 000a 8C4C     		ldr	r4, .L153
 1624 000c A488     		ldrh	r4, [r4, #4]
 1625              		.loc 1 437 8 view .LVU461
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 41


 1626 000e 8442     		cmp	r4, r0
 1627 0010 C0F01181 		bcc	.L137
 1628 0014 9B46     		mov	fp, r3
 1629              		.loc 1 437 52 discriminator 1 view .LVU462
 1630 0016 894C     		ldr	r4, .L153
 1631 0018 E488     		ldrh	r4, [r4, #6]
 1632              		.loc 1 437 32 discriminator 1 view .LVU463
 1633 001a 8C42     		cmp	r4, r1
 1634 001c 40F20B81 		bls	.L137
 438:Core/Src/EPD_GUI.c ****         return;
 439:Core/Src/EPD_GUI.c ****     }
 440:Core/Src/EPD_GUI.c **** 
 441:Core/Src/EPD_GUI.c ****     //Draw a circle from(0, R) as a starting point
 442:Core/Src/EPD_GUI.c ****     int16_t XCurrent, YCurrent;
 1635              		.loc 1 442 5 is_stmt 1 view .LVU464
 443:Core/Src/EPD_GUI.c ****     XCurrent = 0;
 1636              		.loc 1 443 5 view .LVU465
 1637              	.LVL146:
 444:Core/Src/EPD_GUI.c ****     YCurrent = Radius;
 1638              		.loc 1 444 5 view .LVU466
 1639              		.loc 1 444 14 is_stmt 0 view .LVU467
 1640 0020 13B2     		sxth	r3, r2
 1641              	.LVL147:
 1642              		.loc 1 444 14 view .LVU468
 1643 0022 0593     		str	r3, [sp, #20]
 1644              	.LVL148:
 445:Core/Src/EPD_GUI.c **** 
 446:Core/Src/EPD_GUI.c ****     //Cumulative error,judge the next point of the logo
 447:Core/Src/EPD_GUI.c ****     int16_t Esp = 3 - (Radius << 1 );
 1645              		.loc 1 447 5 is_stmt 1 view .LVU469
 1646              		.loc 1 447 31 is_stmt 0 view .LVU470
 1647 0024 5200     		lsls	r2, r2, #1
 1648              	.LVL149:
 1649              		.loc 1 447 31 view .LVU471
 1650 0026 92B2     		uxth	r2, r2
 1651              		.loc 1 447 21 view .LVU472
 1652 0028 C2F10302 		rsb	r2, r2, #3
 1653              		.loc 1 447 13 view .LVU473
 1654 002c 13B2     		sxth	r3, r2
 1655              	.LVL150:
 1656              		.loc 1 447 13 view .LVU474
 1657 002e 0993     		str	r3, [sp, #36]
 1658              	.LVL151:
 448:Core/Src/EPD_GUI.c **** 
 449:Core/Src/EPD_GUI.c ****     int16_t sCountY;
 1659              		.loc 1 449 5 is_stmt 1 view .LVU475
 450:Core/Src/EPD_GUI.c ****     if (Draw_Fill == DRAW_FILL_FULL) {
 1660              		.loc 1 450 5 view .LVU476
 1661              		.loc 1 450 8 is_stmt 0 view .LVU477
 1662 0030 9DF85420 		ldrb	r2, [sp, #84]	@ zero_extendqisi2
 1663 0034 012A     		cmp	r2, #1
 1664 0036 7DD0     		beq	.L148
 443:Core/Src/EPD_GUI.c ****     YCurrent = Radius;
 1665              		.loc 1 443 14 view .LVU478
 1666 0038 0023     		movs	r3, #0
 1667 003a 0493     		str	r3, [sp, #16]
 1668 003c 8246     		mov	r10, r0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 42


 1669 003e 0391     		str	r1, [sp, #12]
 1670 0040 87E0     		b	.L140
 1671              	.LVL152:
 1672              	.L141:
 451:Core/Src/EPD_GUI.c ****         while (XCurrent <= YCurrent ) { //Realistic circles
 452:Core/Src/EPD_GUI.c ****             for (sCountY = XCurrent; sCountY <= YCurrent; sCountY ++ ) {
 453:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center + XCurrent, Y_Center + sCountY, Color, DOT_PIXEL_DFT, DOT_ST
 1673              		.loc 1 453 17 is_stmt 1 view .LVU479
 1674 0042 BDF81860 		ldrh	r6, [sp, #24]
 1675 0046 06EB0903 		add	r3, r6, r9
 1676 004a 98B2     		uxth	r0, r3
 1677 004c ADB2     		uxth	r5, r5
 1678              		.loc 1 453 17 is_stmt 0 view .LVU480
 1679 004e 039B     		ldr	r3, [sp, #12]
 1680 0050 EF18     		adds	r7, r5, r3
 1681 0052 BFB2     		uxth	r7, r7
 1682 0054 0124     		movs	r4, #1
 1683 0056 0094     		str	r4, [sp]
 1684 0058 2346     		mov	r3, r4
 1685 005a 5A46     		mov	r2, fp
 1686 005c 3946     		mov	r1, r7
 1687 005e 0490     		str	r0, [sp, #16]
 1688 0060 FFF7FEFF 		bl	EPD_DrawPoint
 1689              	.LVL153:
 454:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center - XCurrent, Y_Center + sCountY, Color, DOT_PIXEL_DFT, DOT_ST
 1690              		.loc 1 454 17 is_stmt 1 view .LVU481
 1691 0064 A9EB0608 		sub	r8, r9, r6
 1692 0068 1FFA88F8 		uxth	r8, r8
 1693 006c 0094     		str	r4, [sp]
 1694 006e 2346     		mov	r3, r4
 1695 0070 5A46     		mov	r2, fp
 1696 0072 3946     		mov	r1, r7
 1697 0074 4046     		mov	r0, r8
 1698 0076 FFF7FEFF 		bl	EPD_DrawPoint
 1699              	.LVL154:
 455:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center - sCountY, Y_Center + XCurrent, Color, DOT_PIXEL_DFT, DOT_ST
 1700              		.loc 1 455 17 view .LVU482
 1701 007a A9EB050A 		sub	r10, r9, r5
 1702 007e 1FFA8AFA 		uxth	r10, r10
 1703 0082 039B     		ldr	r3, [sp, #12]
 1704 0084 F718     		adds	r7, r6, r3
 1705 0086 BFB2     		uxth	r7, r7
 1706 0088 0094     		str	r4, [sp]
 1707 008a 2346     		mov	r3, r4
 1708 008c 5A46     		mov	r2, fp
 1709 008e 3946     		mov	r1, r7
 1710 0090 5046     		mov	r0, r10
 1711 0092 FFF7FEFF 		bl	EPD_DrawPoint
 1712              	.LVL155:
 456:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center - sCountY, Y_Center - XCurrent, Color, DOT_PIXEL_DFT, DOT_ST
 1713              		.loc 1 456 17 view .LVU483
 1714 0096 039B     		ldr	r3, [sp, #12]
 1715 0098 9E1B     		subs	r6, r3, r6
 1716 009a B6B2     		uxth	r6, r6
 1717 009c 0094     		str	r4, [sp]
 1718 009e 2346     		mov	r3, r4
 1719 00a0 5A46     		mov	r2, fp
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 43


 1720 00a2 3146     		mov	r1, r6
 1721 00a4 5046     		mov	r0, r10
 1722 00a6 FFF7FEFF 		bl	EPD_DrawPoint
 1723              	.LVL156:
 457:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center - XCurrent, Y_Center - sCountY, Color, DOT_PIXEL_DFT, DOT_ST
 1724              		.loc 1 457 17 view .LVU484
 1725 00aa 039B     		ldr	r3, [sp, #12]
 1726 00ac A3EB050A 		sub	r10, r3, r5
 1727 00b0 1FFA8AFA 		uxth	r10, r10
 1728 00b4 0094     		str	r4, [sp]
 1729 00b6 2346     		mov	r3, r4
 1730 00b8 5A46     		mov	r2, fp
 1731 00ba 5146     		mov	r1, r10
 1732 00bc 4046     		mov	r0, r8
 1733 00be FFF7FEFF 		bl	EPD_DrawPoint
 1734              	.LVL157:
 458:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center + XCurrent, Y_Center - sCountY, Color, DOT_PIXEL_DFT, DOT_ST
 1735              		.loc 1 458 17 view .LVU485
 1736 00c2 0094     		str	r4, [sp]
 1737 00c4 2346     		mov	r3, r4
 1738 00c6 5A46     		mov	r2, fp
 1739 00c8 5146     		mov	r1, r10
 1740 00ca 0498     		ldr	r0, [sp, #16]
 1741 00cc FFF7FEFF 		bl	EPD_DrawPoint
 1742              	.LVL158:
 459:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center + sCountY, Y_Center - XCurrent, Color, DOT_PIXEL_DFT, DOT_ST
 1743              		.loc 1 459 17 view .LVU486
 1744 00d0 05EB0908 		add	r8, r5, r9
 1745 00d4 1FFA88F8 		uxth	r8, r8
 1746 00d8 0094     		str	r4, [sp]
 1747 00da 2346     		mov	r3, r4
 1748 00dc 5A46     		mov	r2, fp
 1749 00de 3146     		mov	r1, r6
 1750 00e0 4046     		mov	r0, r8
 1751 00e2 FFF7FEFF 		bl	EPD_DrawPoint
 1752              	.LVL159:
 460:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center + sCountY, Y_Center + XCurrent, Color, DOT_PIXEL_DFT, DOT_ST
 1753              		.loc 1 460 17 view .LVU487
 1754 00e6 0094     		str	r4, [sp]
 1755 00e8 2346     		mov	r3, r4
 1756 00ea 5A46     		mov	r2, fp
 1757 00ec 3946     		mov	r1, r7
 1758 00ee 4046     		mov	r0, r8
 1759 00f0 FFF7FEFF 		bl	EPD_DrawPoint
 1760              	.LVL160:
 452:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center + XCurrent, Y_Center + sCountY, Color, DOT_PIXEL_DFT, DOT_ST
 1761              		.loc 1 452 67 discriminator 3 view .LVU488
 1762 00f4 2544     		add	r5, r5, r4
 1763              	.LVL161:
 452:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center + XCurrent, Y_Center + sCountY, Color, DOT_PIXEL_DFT, DOT_ST
 1764              		.loc 1 452 67 is_stmt 0 discriminator 3 view .LVU489
 1765 00f6 2DB2     		sxth	r5, r5
 1766              	.LVL162:
 1767              	.L144:
 452:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center + XCurrent, Y_Center + sCountY, Color, DOT_PIXEL_DFT, DOT_ST
 1768              		.loc 1 452 46 is_stmt 1 discriminator 1 view .LVU490
 1769 00f8 059B     		ldr	r3, [sp, #20]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 44


 1770 00fa AB42     		cmp	r3, r5
 1771 00fc A1DA     		bge	.L141
 461:Core/Src/EPD_GUI.c ****             }
 462:Core/Src/EPD_GUI.c ****             if (Esp < 0 )
 1772              		.loc 1 462 16 is_stmt 0 view .LVU491
 1773 00fe 069A     		ldr	r2, [sp, #24]
 1774 0100 079C     		ldr	r4, [sp, #28]
 1775              		.loc 1 462 13 is_stmt 1 view .LVU492
 1776              		.loc 1 462 16 is_stmt 0 view .LVU493
 1777 0102 002C     		cmp	r4, #0
 1778 0104 10DB     		blt	.L151
 463:Core/Src/EPD_GUI.c ****                 Esp += 4 * XCurrent + 6;
 464:Core/Src/EPD_GUI.c ****             else {
 465:Core/Src/EPD_GUI.c ****                 Esp += 10 + 4 * (XCurrent - YCurrent );
 1779              		.loc 1 465 17 is_stmt 1 view .LVU494
 1780              		.loc 1 465 43 is_stmt 0 view .LVU495
 1781 0106 D11A     		subs	r1, r2, r3
 1782              		.loc 1 465 21 view .LVU496
 1783 0108 04EB8101 		add	r1, r4, r1, lsl #2
 1784 010c 0A31     		adds	r1, r1, #10
 1785 010e 0CB2     		sxth	r4, r1
 1786              	.LVL163:
 466:Core/Src/EPD_GUI.c ****                 YCurrent --;
 1787              		.loc 1 466 17 is_stmt 1 view .LVU497
 1788              		.loc 1 466 26 is_stmt 0 view .LVU498
 1789 0110 013B     		subs	r3, r3, #1
 1790 0112 1BB2     		sxth	r3, r3
 1791              	.L143:
 1792              	.LVL164:
 467:Core/Src/EPD_GUI.c ****             }
 468:Core/Src/EPD_GUI.c ****             XCurrent ++;
 1793              		.loc 1 468 13 is_stmt 1 view .LVU499
 1794              		.loc 1 468 22 is_stmt 0 view .LVU500
 1795 0114 0132     		adds	r2, r2, #1
 1796 0116 12B2     		sxth	r2, r2
 1797              	.LVL165:
 1798              	.L139:
 451:Core/Src/EPD_GUI.c ****             for (sCountY = XCurrent; sCountY <= YCurrent; sCountY ++ ) {
 1799              		.loc 1 451 25 is_stmt 1 view .LVU501
 1800 0118 9A42     		cmp	r2, r3
 1801 011a 00F38C80 		bgt	.L137
 452:Core/Src/EPD_GUI.c ****                 EPD_DrawPoint(X_Center + XCurrent, Y_Center + sCountY, Color, DOT_PIXEL_DFT, DOT_ST
 1802              		.loc 1 452 26 is_stmt 0 view .LVU502
 1803 011e 1546     		mov	r5, r2
 1804 0120 0692     		str	r2, [sp, #24]
 1805 0122 0593     		str	r3, [sp, #20]
 1806 0124 0794     		str	r4, [sp, #28]
 1807 0126 E7E7     		b	.L144
 1808              	.LVL166:
 1809              	.L151:
 463:Core/Src/EPD_GUI.c ****             else {
 1810              		.loc 1 463 17 is_stmt 1 view .LVU503
 463:Core/Src/EPD_GUI.c ****             else {
 1811              		.loc 1 463 26 is_stmt 0 view .LVU504
 1812 0128 9100     		lsls	r1, r2, #2
 1813 012a 89B2     		uxth	r1, r1
 463:Core/Src/EPD_GUI.c ****             else {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 45


 1814              		.loc 1 463 21 view .LVU505
 1815 012c 2144     		add	r1, r1, r4
 1816 012e 0631     		adds	r1, r1, #6
 1817 0130 0CB2     		sxth	r4, r1
 1818              	.LVL167:
 463:Core/Src/EPD_GUI.c ****             else {
 1819              		.loc 1 463 21 view .LVU506
 1820 0132 EFE7     		b	.L143
 1821              	.LVL168:
 1822              	.L148:
 443:Core/Src/EPD_GUI.c ****     YCurrent = Radius;
 1823              		.loc 1 443 14 view .LVU507
 1824 0134 0022     		movs	r2, #0
 1825 0136 059B     		ldr	r3, [sp, #20]
 1826 0138 099C     		ldr	r4, [sp, #36]
 1827 013a 8146     		mov	r9, r0
 1828 013c 0391     		str	r1, [sp, #12]
 1829 013e EBE7     		b	.L139
 1830              	.LVL169:
 1831              	.L152:
 469:Core/Src/EPD_GUI.c ****         }
 470:Core/Src/EPD_GUI.c ****     } else { //Draw a hollow circle
 471:Core/Src/EPD_GUI.c ****         while (XCurrent <= YCurrent ) {
 472:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center + XCurrent, Y_Center + YCurrent, Color, Line_width, DOT_STYLE_DF
 473:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center - XCurrent, Y_Center + YCurrent, Color, Line_width, DOT_STYLE_DF
 474:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center - YCurrent, Y_Center + XCurrent, Color, Line_width, DOT_STYLE_DF
 475:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center - YCurrent, Y_Center - XCurrent, Color, Line_width, DOT_STYLE_DF
 476:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center - XCurrent, Y_Center - YCurrent, Color, Line_width, DOT_STYLE_DF
 477:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center + XCurrent, Y_Center - YCurrent, Color, Line_width, DOT_STYLE_DF
 478:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center + YCurrent, Y_Center - XCurrent, Color, Line_width, DOT_STYLE_DF
 479:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center + YCurrent, Y_Center + XCurrent, Color, Line_width, DOT_STYLE_DF
 480:Core/Src/EPD_GUI.c **** 
 481:Core/Src/EPD_GUI.c ****             if (Esp < 0 )
 482:Core/Src/EPD_GUI.c ****                 Esp += 4 * XCurrent + 6;
 1832              		.loc 1 482 17 is_stmt 1 view .LVU508
 1833              		.loc 1 482 26 is_stmt 0 view .LVU509
 1834 0140 AB00     		lsls	r3, r5, #2
 1835 0142 9BB2     		uxth	r3, r3
 1836              		.loc 1 482 21 view .LVU510
 1837 0144 1344     		add	r3, r3, r2
 1838 0146 0633     		adds	r3, r3, #6
 1839 0148 1BB2     		sxth	r3, r3
 1840 014a 0993     		str	r3, [sp, #36]
 1841              	.LVL170:
 1842              	.L146:
 483:Core/Src/EPD_GUI.c ****             else {
 484:Core/Src/EPD_GUI.c ****                 Esp += 10 + 4 * (XCurrent - YCurrent );
 485:Core/Src/EPD_GUI.c ****                 YCurrent --;
 486:Core/Src/EPD_GUI.c ****             }
 487:Core/Src/EPD_GUI.c ****             XCurrent ++;
 1843              		.loc 1 487 13 is_stmt 1 view .LVU511
 1844              		.loc 1 487 22 is_stmt 0 view .LVU512
 1845 014c 0135     		adds	r5, r5, #1
 1846 014e 2BB2     		sxth	r3, r5
 1847 0150 0493     		str	r3, [sp, #16]
 1848              	.LVL171:
 1849              	.L140:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 46


 471:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center + XCurrent, Y_Center + YCurrent, Color, Line_width, DOT_STYLE_DF
 1850              		.loc 1 471 25 is_stmt 1 view .LVU513
 1851 0152 049B     		ldr	r3, [sp, #16]
 1852 0154 059A     		ldr	r2, [sp, #20]
 1853 0156 9342     		cmp	r3, r2
 1854 0158 6DDC     		bgt	.L137
 472:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center - XCurrent, Y_Center + YCurrent, Color, Line_width, DOT_STYLE_DF
 1855              		.loc 1 472 13 view .LVU514
 1856 015a BDF81050 		ldrh	r5, [sp, #16]
 1857 015e 05EB0A03 		add	r3, r5, r10
 1858 0162 98B2     		uxth	r0, r3
 1859 0164 BDF81470 		ldrh	r7, [sp, #20]
 1860 0168 039B     		ldr	r3, [sp, #12]
 1861 016a 07EB0308 		add	r8, r7, r3
 1862 016e 1FFA88F8 		uxth	r8, r8
 1863 0172 0124     		movs	r4, #1
 1864 0174 0094     		str	r4, [sp]
 1865 0176 3346     		mov	r3, r6
 1866 0178 5A46     		mov	r2, fp
 1867 017a 4146     		mov	r1, r8
 1868 017c 0690     		str	r0, [sp, #24]
 1869 017e FFF7FEFF 		bl	EPD_DrawPoint
 1870              	.LVL172:
 473:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center - YCurrent, Y_Center + XCurrent, Color, Line_width, DOT_STYLE_DF
 1871              		.loc 1 473 13 view .LVU515
 1872 0182 AAEB0503 		sub	r3, r10, r5
 1873 0186 9AB2     		uxth	r2, r3
 1874 0188 1046     		mov	r0, r2
 1875 018a 0094     		str	r4, [sp]
 1876 018c 3346     		mov	r3, r6
 1877 018e 5A46     		mov	r2, fp
 1878 0190 4146     		mov	r1, r8
 1879 0192 0790     		str	r0, [sp, #28]
 1880 0194 FFF7FEFF 		bl	EPD_DrawPoint
 1881              	.LVL173:
 474:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center - YCurrent, Y_Center - XCurrent, Color, Line_width, DOT_STYLE_DF
 1882              		.loc 1 474 13 view .LVU516
 1883 0198 AAEB0709 		sub	r9, r10, r7
 1884 019c 1FFA89F9 		uxth	r9, r9
 1885 01a0 039B     		ldr	r3, [sp, #12]
 1886 01a2 EB18     		adds	r3, r5, r3
 1887 01a4 99B2     		uxth	r1, r3
 1888 01a6 0094     		str	r4, [sp]
 1889 01a8 3346     		mov	r3, r6
 1890 01aa 5A46     		mov	r2, fp
 1891 01ac 0891     		str	r1, [sp, #32]
 1892 01ae 4846     		mov	r0, r9
 1893 01b0 FFF7FEFF 		bl	EPD_DrawPoint
 1894              	.LVL174:
 475:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center - XCurrent, Y_Center - YCurrent, Color, Line_width, DOT_STYLE_DF
 1895              		.loc 1 475 13 view .LVU517
 1896 01b4 039B     		ldr	r3, [sp, #12]
 1897 01b6 A3EB0508 		sub	r8, r3, r5
 1898 01ba 1FFA88F8 		uxth	r8, r8
 1899 01be 0094     		str	r4, [sp]
 1900 01c0 3346     		mov	r3, r6
 1901 01c2 5A46     		mov	r2, fp
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 47


 1902 01c4 4146     		mov	r1, r8
 1903 01c6 4846     		mov	r0, r9
 1904 01c8 FFF7FEFF 		bl	EPD_DrawPoint
 1905              	.LVL175:
 476:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center + XCurrent, Y_Center - YCurrent, Color, Line_width, DOT_STYLE_DF
 1906              		.loc 1 476 13 view .LVU518
 1907 01cc 039B     		ldr	r3, [sp, #12]
 1908 01ce A3EB0709 		sub	r9, r3, r7
 1909 01d2 1FFA89F9 		uxth	r9, r9
 1910 01d6 0094     		str	r4, [sp]
 1911 01d8 3346     		mov	r3, r6
 1912 01da 5A46     		mov	r2, fp
 1913 01dc 4946     		mov	r1, r9
 1914 01de 0798     		ldr	r0, [sp, #28]
 1915 01e0 FFF7FEFF 		bl	EPD_DrawPoint
 1916              	.LVL176:
 477:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center + YCurrent, Y_Center - XCurrent, Color, Line_width, DOT_STYLE_DF
 1917              		.loc 1 477 13 view .LVU519
 1918 01e4 0094     		str	r4, [sp]
 1919 01e6 3346     		mov	r3, r6
 1920 01e8 5A46     		mov	r2, fp
 1921 01ea 4946     		mov	r1, r9
 1922 01ec 0698     		ldr	r0, [sp, #24]
 1923 01ee FFF7FEFF 		bl	EPD_DrawPoint
 1924              	.LVL177:
 478:Core/Src/EPD_GUI.c ****             EPD_DrawPoint(X_Center + YCurrent, Y_Center + XCurrent, Color, Line_width, DOT_STYLE_DF
 1925              		.loc 1 478 13 view .LVU520
 1926 01f2 07EB0A09 		add	r9, r7, r10
 1927 01f6 1FFA89F9 		uxth	r9, r9
 1928 01fa 0094     		str	r4, [sp]
 1929 01fc 3346     		mov	r3, r6
 1930 01fe 5A46     		mov	r2, fp
 1931 0200 4146     		mov	r1, r8
 1932 0202 4846     		mov	r0, r9
 1933 0204 FFF7FEFF 		bl	EPD_DrawPoint
 1934              	.LVL178:
 479:Core/Src/EPD_GUI.c **** 
 1935              		.loc 1 479 13 view .LVU521
 1936 0208 0094     		str	r4, [sp]
 1937 020a 3346     		mov	r3, r6
 1938 020c 5A46     		mov	r2, fp
 1939 020e 0899     		ldr	r1, [sp, #32]
 1940 0210 4846     		mov	r0, r9
 1941 0212 FFF7FEFF 		bl	EPD_DrawPoint
 1942              	.LVL179:
 481:Core/Src/EPD_GUI.c ****                 Esp += 4 * XCurrent + 6;
 1943              		.loc 1 481 13 view .LVU522
 481:Core/Src/EPD_GUI.c ****                 Esp += 4 * XCurrent + 6;
 1944              		.loc 1 481 16 is_stmt 0 view .LVU523
 1945 0216 099A     		ldr	r2, [sp, #36]
 1946 0218 002A     		cmp	r2, #0
 1947 021a 91DB     		blt	.L152
 484:Core/Src/EPD_GUI.c ****                 YCurrent --;
 1948              		.loc 1 484 17 is_stmt 1 view .LVU524
 484:Core/Src/EPD_GUI.c ****                 YCurrent --;
 1949              		.loc 1 484 43 is_stmt 0 view .LVU525
 1950 021c 049B     		ldr	r3, [sp, #16]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 48


 1951 021e 059A     		ldr	r2, [sp, #20]
 1952 0220 9B1A     		subs	r3, r3, r2
 484:Core/Src/EPD_GUI.c ****                 YCurrent --;
 1953              		.loc 1 484 21 view .LVU526
 1954 0222 099A     		ldr	r2, [sp, #36]
 1955 0224 02EB8303 		add	r3, r2, r3, lsl #2
 1956 0228 0A33     		adds	r3, r3, #10
 1957 022a 1BB2     		sxth	r3, r3
 1958 022c 0993     		str	r3, [sp, #36]
 1959              	.LVL180:
 485:Core/Src/EPD_GUI.c ****             }
 1960              		.loc 1 485 17 is_stmt 1 view .LVU527
 485:Core/Src/EPD_GUI.c ****             }
 1961              		.loc 1 485 26 is_stmt 0 view .LVU528
 1962 022e 013F     		subs	r7, r7, #1
 1963 0230 3BB2     		sxth	r3, r7
 1964 0232 0593     		str	r3, [sp, #20]
 1965              	.LVL181:
 485:Core/Src/EPD_GUI.c ****             }
 1966              		.loc 1 485 26 view .LVU529
 1967 0234 8AE7     		b	.L146
 1968              	.LVL182:
 1969              	.L137:
 488:Core/Src/EPD_GUI.c ****         }
 489:Core/Src/EPD_GUI.c ****     }
 490:Core/Src/EPD_GUI.c **** }
 1970              		.loc 1 490 1 view .LVU530
 1971 0236 0BB0     		add	sp, sp, #44
 1972              		.cfi_def_cfa_offset 36
 1973              		@ sp needed
 1974 0238 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1975              	.LVL183:
 1976              	.L154:
 1977              		.loc 1 490 1 view .LVU531
 1978              		.align	2
 1979              	.L153:
 1980 023c 00000000 		.word	Paint
 1981              		.cfi_endproc
 1982              	.LFE333:
 1984              		.section	.text.EPD_DrawChar,"ax",%progbits
 1985              		.align	1
 1986              		.global	EPD_DrawChar
 1987              		.syntax unified
 1988              		.thumb
 1989              		.thumb_func
 1991              	EPD_DrawChar:
 1992              	.LVL184:
 1993              	.LFB334:
 491:Core/Src/EPD_GUI.c **** 
 492:Core/Src/EPD_GUI.c **** /******************************************************************************
 493:Core/Src/EPD_GUI.c **** function: Show English characters
 494:Core/Src/EPD_GUI.c **** parameter:
 495:Core/Src/EPD_GUI.c ****     Xpoint           ：X coordinate
 496:Core/Src/EPD_GUI.c ****     Ypoint           ：Y coordinate
 497:Core/Src/EPD_GUI.c ****     Acsii_Char       ：To display the English characters
 498:Core/Src/EPD_GUI.c ****     Font             ：A structure pointer that displays a character size
 499:Core/Src/EPD_GUI.c ****     Color_Foreground : Select the foreground color
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 49


 500:Core/Src/EPD_GUI.c ****     Color_Background : Select the background color
 501:Core/Src/EPD_GUI.c **** ******************************************************************************/
 502:Core/Src/EPD_GUI.c **** void EPD_DrawChar(UWORD Xpoint, UWORD Ypoint, const char Acsii_Char,
 503:Core/Src/EPD_GUI.c ****                     sFONT* Font, UWORD Color_Foreground, UWORD Color_Background)
 504:Core/Src/EPD_GUI.c **** {
 1994              		.loc 1 504 1 is_stmt 1 view -0
 1995              		.cfi_startproc
 1996              		@ args = 8, pretend = 0, frame = 0
 1997              		@ frame_needed = 0, uses_anonymous_args = 0
 1998              		.loc 1 504 1 is_stmt 0 view .LVU533
 1999 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2000              		.cfi_def_cfa_offset 40
 2001              		.cfi_offset 3, -40
 2002              		.cfi_offset 4, -36
 2003              		.cfi_offset 5, -32
 2004              		.cfi_offset 6, -28
 2005              		.cfi_offset 7, -24
 2006              		.cfi_offset 8, -20
 2007              		.cfi_offset 9, -16
 2008              		.cfi_offset 10, -12
 2009              		.cfi_offset 11, -8
 2010              		.cfi_offset 14, -4
 2011 0004 1F46     		mov	r7, r3
 2012 0006 BDF828B0 		ldrh	fp, [sp, #40]
 2013 000a BDF82C80 		ldrh	r8, [sp, #44]
 505:Core/Src/EPD_GUI.c ****     UWORD Page, Column;
 2014              		.loc 1 505 5 is_stmt 1 view .LVU534
 506:Core/Src/EPD_GUI.c **** 
 507:Core/Src/EPD_GUI.c ****     if (Xpoint > Paint.Width || Ypoint > Paint.Height) {
 2015              		.loc 1 507 5 view .LVU535
 2016              		.loc 1 507 23 is_stmt 0 view .LVU536
 2017 000e 304B     		ldr	r3, .L170
 2018              	.LVL185:
 2019              		.loc 1 507 23 view .LVU537
 2020 0010 9B88     		ldrh	r3, [r3, #4]
 2021              		.loc 1 507 8 view .LVU538
 2022 0012 8342     		cmp	r3, r0
 2023 0014 59D3     		bcc	.L155
 2024 0016 8146     		mov	r9, r0
 2025 0018 8A46     		mov	r10, r1
 2026              		.loc 1 507 47 discriminator 1 view .LVU539
 2027 001a 2D4B     		ldr	r3, .L170
 2028 001c DB88     		ldrh	r3, [r3, #6]
 2029              		.loc 1 507 30 discriminator 1 view .LVU540
 2030 001e 8B42     		cmp	r3, r1
 2031 0020 53D3     		bcc	.L155
 508:Core/Src/EPD_GUI.c ****         return;
 509:Core/Src/EPD_GUI.c ****     }
 510:Core/Src/EPD_GUI.c **** 
 511:Core/Src/EPD_GUI.c ****     uint32_t Char_Offset = (Acsii_Char - ' ') * Font->Height * (Font->Width / 8 + (Font->Width % 8 
 2032              		.loc 1 511 5 is_stmt 1 view .LVU541
 2033              		.loc 1 511 40 is_stmt 0 view .LVU542
 2034 0022 203A     		subs	r2, r2, #32
 2035              	.LVL186:
 2036              		.loc 1 511 53 view .LVU543
 2037 0024 FB88     		ldrh	r3, [r7, #6]
 2038              		.loc 1 511 47 view .LVU544
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 50


 2039 0026 02FB03F3 		mul	r3, r2, r3
 2040              		.loc 1 511 69 view .LVU545
 2041 002a B988     		ldrh	r1, [r7, #4]
 2042              	.LVL187:
 2043              		.loc 1 511 104 view .LVU546
 2044 002c 11F00702 		ands	r2, r1, #7
 2045              	.LVL188:
 2046              		.loc 1 511 104 view .LVU547
 2047 0030 18BF     		it	ne
 2048 0032 0122     		movne	r2, #1
 2049              		.loc 1 511 81 view .LVU548
 2050 0034 02EBD102 		add	r2, r2, r1, lsr #3
 2051              	.LVL189:
 512:Core/Src/EPD_GUI.c ****     const unsigned char *ptr = &Font->table[Char_Offset];
 2052              		.loc 1 512 5 is_stmt 1 view .LVU549
 2053              		.loc 1 512 37 is_stmt 0 view .LVU550
 2054 0038 3D68     		ldr	r5, [r7]
 2055              		.loc 1 512 26 view .LVU551
 2056 003a 02FB0355 		mla	r5, r2, r3, r5
 2057              	.LVL190:
 513:Core/Src/EPD_GUI.c **** 
 514:Core/Src/EPD_GUI.c ****     for (Page = 0; Page < Font->Height; Page ++ ) {
 2058              		.loc 1 514 5 is_stmt 1 view .LVU552
 2059              		.loc 1 514 15 is_stmt 0 view .LVU553
 2060 003e 0026     		movs	r6, #0
 2061              		.loc 1 514 5 view .LVU554
 2062 0040 3EE0     		b	.L157
 2063              	.LVL191:
 2064              	.L169:
 515:Core/Src/EPD_GUI.c ****         for (Column = 0; Column < Font->Width; Column ++ ) {
 516:Core/Src/EPD_GUI.c **** 
 517:Core/Src/EPD_GUI.c ****             //To determine whether the font background color and screen background color is consist
 518:Core/Src/EPD_GUI.c ****             if (FONT_BACKGROUND == Color_Background) { //this process is to speed up the scan
 519:Core/Src/EPD_GUI.c ****                 if (*ptr & (0x80 >> (Column % 8)))
 2065              		.loc 1 519 17 is_stmt 1 view .LVU555
 2066              		.loc 1 519 21 is_stmt 0 view .LVU556
 2067 0042 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2068              		.loc 1 519 45 view .LVU557
 2069 0044 04F00701 		and	r1, r4, #7
 2070              		.loc 1 519 34 view .LVU558
 2071 0048 8023     		movs	r3, #128
 2072 004a 0B41     		asrs	r3, r3, r1
 2073              		.loc 1 519 20 view .LVU559
 2074 004c 1A42     		tst	r2, r3
 2075 004e 12D0     		beq	.L159
 520:Core/Src/EPD_GUI.c ****                     EPD_SetPixel(Xpoint + Column, Ypoint + Page, Color_Foreground);
 2076              		.loc 1 520 21 is_stmt 1 view .LVU560
 2077 0050 06EB0A01 		add	r1, r6, r10
 2078 0054 04EB0900 		add	r0, r4, r9
 2079 0058 5A46     		mov	r2, fp
 2080 005a 89B2     		uxth	r1, r1
 2081 005c 80B2     		uxth	r0, r0
 2082 005e FFF7FEFF 		bl	EPD_SetPixel
 2083              	.LVL192:
 2084 0062 08E0     		b	.L159
 2085              	.L160:
 521:Core/Src/EPD_GUI.c ****                     // EPD_DrawPoint(Xpoint + Column, Ypoint + Page, Color_Foreground, DOT_PIXEL_DF
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 51


 522:Core/Src/EPD_GUI.c ****             } else {
 523:Core/Src/EPD_GUI.c ****                 if (*ptr & (0x80 >> (Column % 8))) {
 524:Core/Src/EPD_GUI.c ****                     EPD_SetPixel(Xpoint + Column, Ypoint + Page, Color_Foreground);
 525:Core/Src/EPD_GUI.c ****                     // EPD_DrawPoint(Xpoint + Column, Ypoint + Page, Color_Foreground, DOT_PIXEL_DF
 526:Core/Src/EPD_GUI.c ****                 } else {
 527:Core/Src/EPD_GUI.c ****                     EPD_SetPixel(Xpoint + Column, Ypoint + Page, Color_Background);
 2086              		.loc 1 527 21 view .LVU561
 2087 0064 06EB0A01 		add	r1, r6, r10
 2088 0068 04EB0900 		add	r0, r4, r9
 2089 006c 4246     		mov	r2, r8
 2090 006e 89B2     		uxth	r1, r1
 2091 0070 80B2     		uxth	r0, r0
 2092 0072 FFF7FEFF 		bl	EPD_SetPixel
 2093              	.LVL193:
 2094              	.L159:
 528:Core/Src/EPD_GUI.c ****                     // EPD_DrawPoint(Xpoint + Column, Ypoint + Page, Color_Background, DOT_PIXEL_DF
 529:Core/Src/EPD_GUI.c ****                 }
 530:Core/Src/EPD_GUI.c ****             }
 531:Core/Src/EPD_GUI.c ****             //One pixel is 8 bits
 532:Core/Src/EPD_GUI.c ****             if (Column % 8 == 7)
 2095              		.loc 1 532 13 view .LVU562
 2096              		.loc 1 532 28 is_stmt 0 view .LVU563
 2097 0076 04F00703 		and	r3, r4, #7
 2098              		.loc 1 532 16 view .LVU564
 2099 007a 072B     		cmp	r3, #7
 2100 007c 18D0     		beq	.L167
 2101              	.LVL194:
 2102              	.L161:
 515:Core/Src/EPD_GUI.c **** 
 2103              		.loc 1 515 55 is_stmt 1 discriminator 2 view .LVU565
 2104 007e 0134     		adds	r4, r4, #1
 2105              	.LVL195:
 515:Core/Src/EPD_GUI.c **** 
 2106              		.loc 1 515 55 is_stmt 0 discriminator 2 view .LVU566
 2107 0080 A4B2     		uxth	r4, r4
 2108              	.LVL196:
 2109              	.L164:
 515:Core/Src/EPD_GUI.c **** 
 2110              		.loc 1 515 33 is_stmt 1 discriminator 1 view .LVU567
 515:Core/Src/EPD_GUI.c **** 
 2111              		.loc 1 515 39 is_stmt 0 discriminator 1 view .LVU568
 2112 0082 BB88     		ldrh	r3, [r7, #4]
 515:Core/Src/EPD_GUI.c **** 
 2113              		.loc 1 515 33 discriminator 1 view .LVU569
 2114 0084 A342     		cmp	r3, r4
 2115 0086 15D9     		bls	.L168
 518:Core/Src/EPD_GUI.c ****                 if (*ptr & (0x80 >> (Column % 8)))
 2116              		.loc 1 518 13 is_stmt 1 view .LVU570
 518:Core/Src/EPD_GUI.c ****                 if (*ptr & (0x80 >> (Column % 8)))
 2117              		.loc 1 518 16 is_stmt 0 view .LVU571
 2118 0088 B8F1FF0F 		cmp	r8, #255
 2119 008c D9D0     		beq	.L169
 523:Core/Src/EPD_GUI.c ****                     EPD_SetPixel(Xpoint + Column, Ypoint + Page, Color_Foreground);
 2120              		.loc 1 523 17 is_stmt 1 view .LVU572
 523:Core/Src/EPD_GUI.c ****                     EPD_SetPixel(Xpoint + Column, Ypoint + Page, Color_Foreground);
 2121              		.loc 1 523 21 is_stmt 0 view .LVU573
 2122 008e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 52


 523:Core/Src/EPD_GUI.c ****                     EPD_SetPixel(Xpoint + Column, Ypoint + Page, Color_Foreground);
 2123              		.loc 1 523 45 view .LVU574
 2124 0090 04F00701 		and	r1, r4, #7
 523:Core/Src/EPD_GUI.c ****                     EPD_SetPixel(Xpoint + Column, Ypoint + Page, Color_Foreground);
 2125              		.loc 1 523 34 view .LVU575
 2126 0094 8023     		movs	r3, #128
 2127 0096 0B41     		asrs	r3, r3, r1
 523:Core/Src/EPD_GUI.c ****                     EPD_SetPixel(Xpoint + Column, Ypoint + Page, Color_Foreground);
 2128              		.loc 1 523 20 view .LVU576
 2129 0098 1A42     		tst	r2, r3
 2130 009a E3D0     		beq	.L160
 524:Core/Src/EPD_GUI.c ****                     // EPD_DrawPoint(Xpoint + Column, Ypoint + Page, Color_Foreground, DOT_PIXEL_DF
 2131              		.loc 1 524 21 is_stmt 1 view .LVU577
 2132 009c 06EB0A01 		add	r1, r6, r10
 2133 00a0 04EB0900 		add	r0, r4, r9
 2134 00a4 5A46     		mov	r2, fp
 2135 00a6 89B2     		uxth	r1, r1
 2136 00a8 80B2     		uxth	r0, r0
 2137 00aa FFF7FEFF 		bl	EPD_SetPixel
 2138              	.LVL197:
 2139 00ae E2E7     		b	.L159
 2140              	.L167:
 533:Core/Src/EPD_GUI.c ****                 ptr++;
 2141              		.loc 1 533 17 view .LVU578
 2142              		.loc 1 533 20 is_stmt 0 view .LVU579
 2143 00b0 0135     		adds	r5, r5, #1
 2144              	.LVL198:
 2145              		.loc 1 533 20 view .LVU580
 2146 00b2 E4E7     		b	.L161
 2147              	.LVL199:
 2148              	.L168:
 534:Core/Src/EPD_GUI.c ****         }// Write a line
 535:Core/Src/EPD_GUI.c ****         if (Font->Width % 8 != 0)
 2149              		.loc 1 535 9 is_stmt 1 view .LVU581
 2150              		.loc 1 535 12 is_stmt 0 view .LVU582
 2151 00b4 13F0070F 		tst	r3, #7
 2152 00b8 00D0     		beq	.L163
 536:Core/Src/EPD_GUI.c ****             ptr++;
 2153              		.loc 1 536 13 is_stmt 1 view .LVU583
 2154              		.loc 1 536 16 is_stmt 0 view .LVU584
 2155 00ba 0135     		adds	r5, r5, #1
 2156              	.LVL200:
 2157              	.L163:
 514:Core/Src/EPD_GUI.c ****         for (Column = 0; Column < Font->Width; Column ++ ) {
 2158              		.loc 1 514 46 is_stmt 1 discriminator 2 view .LVU585
 2159 00bc 0136     		adds	r6, r6, #1
 2160              	.LVL201:
 514:Core/Src/EPD_GUI.c ****         for (Column = 0; Column < Font->Width; Column ++ ) {
 2161              		.loc 1 514 46 is_stmt 0 discriminator 2 view .LVU586
 2162 00be B6B2     		uxth	r6, r6
 2163              	.LVL202:
 2164              	.L157:
 514:Core/Src/EPD_GUI.c ****         for (Column = 0; Column < Font->Width; Column ++ ) {
 2165              		.loc 1 514 25 is_stmt 1 discriminator 1 view .LVU587
 514:Core/Src/EPD_GUI.c ****         for (Column = 0; Column < Font->Width; Column ++ ) {
 2166              		.loc 1 514 31 is_stmt 0 discriminator 1 view .LVU588
 2167 00c0 FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 53


 514:Core/Src/EPD_GUI.c ****         for (Column = 0; Column < Font->Width; Column ++ ) {
 2168              		.loc 1 514 25 discriminator 1 view .LVU589
 2169 00c2 B342     		cmp	r3, r6
 2170 00c4 01D9     		bls	.L155
 515:Core/Src/EPD_GUI.c **** 
 2171              		.loc 1 515 21 view .LVU590
 2172 00c6 0024     		movs	r4, #0
 2173 00c8 DBE7     		b	.L164
 2174              	.LVL203:
 2175              	.L155:
 537:Core/Src/EPD_GUI.c ****     }// Write all
 538:Core/Src/EPD_GUI.c **** }
 2176              		.loc 1 538 1 view .LVU591
 2177 00ca BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2178              	.LVL204:
 2179              	.L171:
 2180              		.loc 1 538 1 view .LVU592
 2181 00ce 00BF     		.align	2
 2182              	.L170:
 2183 00d0 00000000 		.word	Paint
 2184              		.cfi_endproc
 2185              	.LFE334:
 2187              		.section	.text.EPD_DrawString_EN,"ax",%progbits
 2188              		.align	1
 2189              		.global	EPD_DrawString_EN
 2190              		.syntax unified
 2191              		.thumb
 2192              		.thumb_func
 2194              	EPD_DrawString_EN:
 2195              	.LVL205:
 2196              	.LFB335:
 539:Core/Src/EPD_GUI.c **** 
 540:Core/Src/EPD_GUI.c **** /******************************************************************************
 541:Core/Src/EPD_GUI.c **** function:	Display the string
 542:Core/Src/EPD_GUI.c **** parameter:
 543:Core/Src/EPD_GUI.c ****     Xstart           ：X coordinate
 544:Core/Src/EPD_GUI.c ****     Ystart           ：Y coordinate
 545:Core/Src/EPD_GUI.c ****     pString          ：The first address of the English string to be displayed
 546:Core/Src/EPD_GUI.c ****     Font             ：A structure pointer that displays a character size
 547:Core/Src/EPD_GUI.c ****     Color_Foreground : Select the foreground color
 548:Core/Src/EPD_GUI.c ****     Color_Background : Select the background color
 549:Core/Src/EPD_GUI.c **** ******************************************************************************/
 550:Core/Src/EPD_GUI.c **** void EPD_DrawString_EN(UWORD Xstart, UWORD Ystart, const char * pString,
 551:Core/Src/EPD_GUI.c ****                          sFONT* Font, UWORD Color_Foreground, UWORD Color_Background)
 552:Core/Src/EPD_GUI.c **** {
 2197              		.loc 1 552 1 is_stmt 1 view -0
 2198              		.cfi_startproc
 2199              		@ args = 8, pretend = 0, frame = 0
 2200              		@ frame_needed = 0, uses_anonymous_args = 0
 2201              		.loc 1 552 1 is_stmt 0 view .LVU594
 2202 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2203              		.cfi_def_cfa_offset 36
 2204              		.cfi_offset 4, -36
 2205              		.cfi_offset 5, -32
 2206              		.cfi_offset 6, -28
 2207              		.cfi_offset 7, -24
 2208              		.cfi_offset 8, -20
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 54


 2209              		.cfi_offset 9, -16
 2210              		.cfi_offset 10, -12
 2211              		.cfi_offset 11, -8
 2212              		.cfi_offset 14, -4
 2213 0004 83B0     		sub	sp, sp, #12
 2214              		.cfi_def_cfa_offset 48
 2215 0006 1C46     		mov	r4, r3
 2216 0008 BDF830A0 		ldrh	r10, [sp, #48]
 2217 000c BDF834B0 		ldrh	fp, [sp, #52]
 553:Core/Src/EPD_GUI.c ****     UWORD Xpoint = Xstart;
 2218              		.loc 1 553 5 is_stmt 1 view .LVU595
 2219              	.LVL206:
 554:Core/Src/EPD_GUI.c ****     UWORD Ypoint = Ystart;
 2220              		.loc 1 554 5 view .LVU596
 555:Core/Src/EPD_GUI.c **** 
 556:Core/Src/EPD_GUI.c ****     if (Xstart > Paint.Width || Ystart > Paint.Height) {
 2221              		.loc 1 556 5 view .LVU597
 2222              		.loc 1 556 23 is_stmt 0 view .LVU598
 2223 0010 194B     		ldr	r3, .L180
 2224              	.LVL207:
 2225              		.loc 1 556 23 view .LVU599
 2226 0012 9B88     		ldrh	r3, [r3, #4]
 2227              		.loc 1 556 8 view .LVU600
 2228 0014 8342     		cmp	r3, r0
 2229 0016 2BD3     		bcc	.L172
 2230 0018 8046     		mov	r8, r0
 2231 001a 8946     		mov	r9, r1
 2232 001c 1646     		mov	r6, r2
 2233              		.loc 1 556 47 discriminator 1 view .LVU601
 2234 001e 164B     		ldr	r3, .L180
 2235 0020 DB88     		ldrh	r3, [r3, #6]
 2236              		.loc 1 556 30 discriminator 1 view .LVU602
 2237 0022 8B42     		cmp	r3, r1
 2238 0024 24D3     		bcc	.L172
 554:Core/Src/EPD_GUI.c ****     UWORD Ypoint = Ystart;
 2239              		.loc 1 554 11 view .LVU603
 2240 0026 0F46     		mov	r7, r1
 553:Core/Src/EPD_GUI.c ****     UWORD Ypoint = Ystart;
 2241              		.loc 1 553 11 view .LVU604
 2242 0028 0546     		mov	r5, r0
 2243 002a 0CE0     		b	.L174
 2244              	.LVL208:
 2245              	.L176:
 557:Core/Src/EPD_GUI.c ****         return;
 558:Core/Src/EPD_GUI.c ****     }
 559:Core/Src/EPD_GUI.c **** 
 560:Core/Src/EPD_GUI.c ****     while (* pString != '\0') {
 561:Core/Src/EPD_GUI.c ****         //if X direction filled , reposition to(Xstart,Ypoint),Ypoint is Y direction plus the Heigh
 562:Core/Src/EPD_GUI.c ****         if ((Xpoint + Font->Width ) > Paint.Width ) {
 563:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 564:Core/Src/EPD_GUI.c ****             Ypoint += Font->Height;
 565:Core/Src/EPD_GUI.c ****         }
 566:Core/Src/EPD_GUI.c **** 
 567:Core/Src/EPD_GUI.c ****         // If the Y direction is full, reposition to(Xstart, Ystart)
 568:Core/Src/EPD_GUI.c ****         if ((Ypoint  + Font->Height ) > Paint.Height ) {
 569:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 570:Core/Src/EPD_GUI.c ****             Ypoint = Ystart;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 55


 571:Core/Src/EPD_GUI.c ****         }
 572:Core/Src/EPD_GUI.c ****         EPD_DrawChar(Xpoint, Ypoint, * pString, Font, Color_Background, Color_Foreground);
 2246              		.loc 1 572 9 is_stmt 1 view .LVU605
 2247 002c CDF804A0 		str	r10, [sp, #4]
 2248 0030 CDF800B0 		str	fp, [sp]
 2249 0034 2346     		mov	r3, r4
 2250 0036 3946     		mov	r1, r7
 2251 0038 2846     		mov	r0, r5
 2252 003a FFF7FEFF 		bl	EPD_DrawChar
 2253              	.LVL209:
 573:Core/Src/EPD_GUI.c **** 
 574:Core/Src/EPD_GUI.c ****         //The next character of the address
 575:Core/Src/EPD_GUI.c ****         pString ++;
 2254              		.loc 1 575 9 view .LVU606
 2255              		.loc 1 575 17 is_stmt 0 view .LVU607
 2256 003e 0136     		adds	r6, r6, #1
 2257              	.LVL210:
 576:Core/Src/EPD_GUI.c **** 
 577:Core/Src/EPD_GUI.c ****         //The next word of the abscissa increases the font of the broadband
 578:Core/Src/EPD_GUI.c ****         Xpoint += Font->Width;
 2258              		.loc 1 578 9 is_stmt 1 view .LVU608
 2259              		.loc 1 578 23 is_stmt 0 view .LVU609
 2260 0040 A388     		ldrh	r3, [r4, #4]
 2261              		.loc 1 578 16 view .LVU610
 2262 0042 2B44     		add	r3, r3, r5
 2263 0044 9DB2     		uxth	r5, r3
 2264              	.LVL211:
 2265              	.L174:
 560:Core/Src/EPD_GUI.c ****         //if X direction filled , reposition to(Xstart,Ypoint),Ypoint is Y direction plus the Heigh
 2266              		.loc 1 560 22 is_stmt 1 view .LVU611
 560:Core/Src/EPD_GUI.c ****         //if X direction filled , reposition to(Xstart,Ypoint),Ypoint is Y direction plus the Heigh
 2267              		.loc 1 560 12 is_stmt 0 view .LVU612
 2268 0046 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 560:Core/Src/EPD_GUI.c ****         //if X direction filled , reposition to(Xstart,Ypoint),Ypoint is Y direction plus the Heigh
 2269              		.loc 1 560 22 view .LVU613
 2270 0048 92B1     		cbz	r2, .L172
 562:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 2271              		.loc 1 562 9 is_stmt 1 view .LVU614
 562:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 2272              		.loc 1 562 27 is_stmt 0 view .LVU615
 2273 004a A388     		ldrh	r3, [r4, #4]
 562:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 2274              		.loc 1 562 21 view .LVU616
 2275 004c 2B44     		add	r3, r3, r5
 562:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 2276              		.loc 1 562 44 view .LVU617
 2277 004e 0A49     		ldr	r1, .L180
 2278 0050 8988     		ldrh	r1, [r1, #4]
 562:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 2279              		.loc 1 562 12 view .LVU618
 2280 0052 8B42     		cmp	r3, r1
 2281 0054 03DD     		ble	.L175
 563:Core/Src/EPD_GUI.c ****             Ypoint += Font->Height;
 2282              		.loc 1 563 13 is_stmt 1 view .LVU619
 2283              	.LVL212:
 564:Core/Src/EPD_GUI.c ****         }
 2284              		.loc 1 564 13 view .LVU620
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 56


 564:Core/Src/EPD_GUI.c ****         }
 2285              		.loc 1 564 27 is_stmt 0 view .LVU621
 2286 0056 E388     		ldrh	r3, [r4, #6]
 564:Core/Src/EPD_GUI.c ****         }
 2287              		.loc 1 564 20 view .LVU622
 2288 0058 3B44     		add	r3, r3, r7
 2289 005a 9FB2     		uxth	r7, r3
 2290              	.LVL213:
 563:Core/Src/EPD_GUI.c ****             Ypoint += Font->Height;
 2291              		.loc 1 563 20 view .LVU623
 2292 005c 4546     		mov	r5, r8
 2293              	.LVL214:
 2294              	.L175:
 568:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 2295              		.loc 1 568 9 is_stmt 1 view .LVU624
 568:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 2296              		.loc 1 568 28 is_stmt 0 view .LVU625
 2297 005e E388     		ldrh	r3, [r4, #6]
 568:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 2298              		.loc 1 568 22 view .LVU626
 2299 0060 3B44     		add	r3, r3, r7
 568:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 2300              		.loc 1 568 46 view .LVU627
 2301 0062 0549     		ldr	r1, .L180
 2302 0064 C988     		ldrh	r1, [r1, #6]
 568:Core/Src/EPD_GUI.c ****             Xpoint = Xstart;
 2303              		.loc 1 568 12 view .LVU628
 2304 0066 8B42     		cmp	r3, r1
 2305 0068 E0DD     		ble	.L176
 570:Core/Src/EPD_GUI.c ****         }
 2306              		.loc 1 570 20 view .LVU629
 2307 006a 4F46     		mov	r7, r9
 2308              	.LVL215:
 569:Core/Src/EPD_GUI.c ****             Ypoint = Ystart;
 2309              		.loc 1 569 20 view .LVU630
 2310 006c 4546     		mov	r5, r8
 2311              	.LVL216:
 569:Core/Src/EPD_GUI.c ****             Ypoint = Ystart;
 2312              		.loc 1 569 20 view .LVU631
 2313 006e DDE7     		b	.L176
 2314              	.LVL217:
 2315              	.L172:
 579:Core/Src/EPD_GUI.c ****     }
 580:Core/Src/EPD_GUI.c **** }
 2316              		.loc 1 580 1 view .LVU632
 2317 0070 03B0     		add	sp, sp, #12
 2318              		.cfi_def_cfa_offset 36
 2319              		@ sp needed
 2320 0072 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2321              	.LVL218:
 2322              	.L181:
 2323              		.loc 1 580 1 view .LVU633
 2324 0076 00BF     		.align	2
 2325              	.L180:
 2326 0078 00000000 		.word	Paint
 2327              		.cfi_endproc
 2328              	.LFE335:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 57


 2330              		.section	.text.EPD_DrawString_CN,"ax",%progbits
 2331              		.align	1
 2332              		.global	EPD_DrawString_CN
 2333              		.syntax unified
 2334              		.thumb
 2335              		.thumb_func
 2337              	EPD_DrawString_CN:
 2338              	.LVL219:
 2339              	.LFB336:
 581:Core/Src/EPD_GUI.c **** 
 582:Core/Src/EPD_GUI.c **** 
 583:Core/Src/EPD_GUI.c **** /******************************************************************************
 584:Core/Src/EPD_GUI.c **** function: Display the string
 585:Core/Src/EPD_GUI.c **** parameter:
 586:Core/Src/EPD_GUI.c ****     Xstart  ：X coordinate
 587:Core/Src/EPD_GUI.c ****     Ystart  ：Y coordinate
 588:Core/Src/EPD_GUI.c ****     pString ：The first address of the Chinese string and English
 589:Core/Src/EPD_GUI.c ****               string to be displayed
 590:Core/Src/EPD_GUI.c ****     Font    ：A structure pointer that displays a character size
 591:Core/Src/EPD_GUI.c ****     Color_Foreground : Select the foreground color
 592:Core/Src/EPD_GUI.c ****     Color_Background : Select the background color
 593:Core/Src/EPD_GUI.c **** ******************************************************************************/
 594:Core/Src/EPD_GUI.c **** void EPD_DrawString_CN(UWORD Xstart, UWORD Ystart, const char * pString, cFONT* font,
 595:Core/Src/EPD_GUI.c ****                         UWORD Color_Foreground, UWORD Color_Background)
 596:Core/Src/EPD_GUI.c **** {
 2340              		.loc 1 596 1 is_stmt 1 view -0
 2341              		.cfi_startproc
 2342              		@ args = 8, pretend = 0, frame = 8
 2343              		@ frame_needed = 0, uses_anonymous_args = 0
 2344              		.loc 1 596 1 is_stmt 0 view .LVU635
 2345 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2346              		.cfi_def_cfa_offset 36
 2347              		.cfi_offset 4, -36
 2348              		.cfi_offset 5, -32
 2349              		.cfi_offset 6, -28
 2350              		.cfi_offset 7, -24
 2351              		.cfi_offset 8, -20
 2352              		.cfi_offset 9, -16
 2353              		.cfi_offset 10, -12
 2354              		.cfi_offset 11, -8
 2355              		.cfi_offset 14, -4
 2356 0004 83B0     		sub	sp, sp, #12
 2357              		.cfi_def_cfa_offset 48
 2358 0006 8946     		mov	r9, r1
 2359 0008 0192     		str	r2, [sp, #4]
 2360 000a 1D46     		mov	r5, r3
 2361 000c BDF830A0 		ldrh	r10, [sp, #48]
 2362 0010 BDF83470 		ldrh	r7, [sp, #52]
 597:Core/Src/EPD_GUI.c ****     const char* p_text = pString;
 2363              		.loc 1 597 5 is_stmt 1 view .LVU636
 2364              	.LVL220:
 598:Core/Src/EPD_GUI.c ****     int x = Xstart, y = Ystart;
 2365              		.loc 1 598 5 view .LVU637
 2366              		.loc 1 598 9 is_stmt 0 view .LVU638
 2367 0014 8046     		mov	r8, r0
 2368              	.LVL221:
 599:Core/Src/EPD_GUI.c ****     int i, j,Num;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 58


 2369              		.loc 1 599 5 is_stmt 1 view .LVU639
 600:Core/Src/EPD_GUI.c **** 
 601:Core/Src/EPD_GUI.c ****     /* Send the string character by character on EPD */
 602:Core/Src/EPD_GUI.c ****     while (*p_text != 0) {
 2370              		.loc 1 602 5 view .LVU640
 2371              		.loc 1 602 11 is_stmt 0 view .LVU641
 2372 0016 51E0     		b	.L183
 2373              	.LVL222:
 2374              	.L218:
 603:Core/Src/EPD_GUI.c ****         if(*p_text <= 0x7F) {  //ASCII < 126
 604:Core/Src/EPD_GUI.c ****             for(Num = 0; Num < font->size; Num++) {
 605:Core/Src/EPD_GUI.c ****                 if(*p_text== font->table[Num].index[0]) {
 606:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 607:Core/Src/EPD_GUI.c **** 
 608:Core/Src/EPD_GUI.c ****                     for (j = 0; j < font->Height; j++) {
 609:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 610:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 611:Core/Src/EPD_GUI.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 612:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 613:Core/Src/EPD_GUI.c ****                                     // EPD_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DFT,
 614:Core/Src/EPD_GUI.c ****                                 }
 615:Core/Src/EPD_GUI.c ****                             } else {
 616:Core/Src/EPD_GUI.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 617:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 618:Core/Src/EPD_GUI.c ****                                     // EPD_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DFT,
 619:Core/Src/EPD_GUI.c ****                                 } else {
 620:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Background);
 621:Core/Src/EPD_GUI.c ****                                     // EPD_DrawPoint(x + i, y + j, Color_Background, DOT_PIXEL_DFT,
 622:Core/Src/EPD_GUI.c ****                                 }
 623:Core/Src/EPD_GUI.c ****                             }
 624:Core/Src/EPD_GUI.c ****                             if (i % 8 == 7) {
 625:Core/Src/EPD_GUI.c ****                                 ptr++;
 626:Core/Src/EPD_GUI.c ****                             }
 627:Core/Src/EPD_GUI.c ****                         }
 628:Core/Src/EPD_GUI.c ****                         if (font->Width % 8 != 0) {
 629:Core/Src/EPD_GUI.c ****                             ptr++;
 630:Core/Src/EPD_GUI.c ****                         }
 631:Core/Src/EPD_GUI.c ****                     }
 632:Core/Src/EPD_GUI.c ****                     break;
 633:Core/Src/EPD_GUI.c ****                 }
 634:Core/Src/EPD_GUI.c ****             }
 635:Core/Src/EPD_GUI.c ****             /* Point on the next character */
 636:Core/Src/EPD_GUI.c ****             p_text += 1;
 637:Core/Src/EPD_GUI.c ****             /* Decrement the column position by 16 */
 638:Core/Src/EPD_GUI.c ****             x += font->ASCII_Width;
 639:Core/Src/EPD_GUI.c ****         } else {        //Chinese
 640:Core/Src/EPD_GUI.c ****             for(Num = 0; Num < font->size; Num++) {
 2375              		.loc 1 640 21 view .LVU642
 2376 0018 0022     		movs	r2, #0
 2377 001a ACE0     		b	.L185
 2378              	.LVL223:
 2379              	.L219:
 2380              	.LBB17:
 606:Core/Src/EPD_GUI.c **** 
 2381              		.loc 1 606 21 is_stmt 1 view .LVU643
 606:Core/Src/EPD_GUI.c **** 
 2382              		.loc 1 606 33 is_stmt 0 view .LVU644
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 59


 2383 001c 0236     		adds	r6, r6, #2
 2384              	.LVL224:
 608:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2385              		.loc 1 608 21 is_stmt 1 view .LVU645
 608:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2386              		.loc 1 608 28 is_stmt 0 view .LVU646
 2387 001e 4FF0000B 		mov	fp, #0
 608:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2388              		.loc 1 608 21 view .LVU647
 2389 0022 41E0     		b	.L187
 2390              	.LVL225:
 2391              	.L216:
 611:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2392              		.loc 1 611 33 is_stmt 1 view .LVU648
 611:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2393              		.loc 1 611 37 is_stmt 0 view .LVU649
 2394 0024 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 611:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2395              		.loc 1 611 50 view .LVU650
 2396 0026 04F00701 		and	r1, r4, #7
 2397 002a 8023     		movs	r3, #128
 2398 002c 0B41     		asrs	r3, r3, r1
 611:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2399              		.loc 1 611 36 view .LVU651
 2400 002e 1A42     		tst	r2, r3
 2401 0030 12D0     		beq	.L189
 612:Core/Src/EPD_GUI.c ****                                     // EPD_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DFT,
 2402              		.loc 1 612 37 is_stmt 1 view .LVU652
 2403 0032 09EB0B01 		add	r1, r9, fp
 2404 0036 08EB0400 		add	r0, r8, r4
 2405 003a 5246     		mov	r2, r10
 2406 003c 89B2     		uxth	r1, r1
 2407 003e 80B2     		uxth	r0, r0
 2408 0040 FFF7FEFF 		bl	EPD_SetPixel
 2409              	.LVL226:
 2410 0044 08E0     		b	.L189
 2411              	.L190:
 620:Core/Src/EPD_GUI.c ****                                     // EPD_DrawPoint(x + i, y + j, Color_Background, DOT_PIXEL_DFT,
 2412              		.loc 1 620 37 view .LVU653
 2413 0046 09EB0B01 		add	r1, r9, fp
 2414 004a 08EB0400 		add	r0, r8, r4
 2415 004e 3A46     		mov	r2, r7
 2416 0050 89B2     		uxth	r1, r1
 2417 0052 80B2     		uxth	r0, r0
 2418 0054 FFF7FEFF 		bl	EPD_SetPixel
 2419              	.LVL227:
 2420              	.L189:
 624:Core/Src/EPD_GUI.c ****                                 ptr++;
 2421              		.loc 1 624 29 view .LVU654
 624:Core/Src/EPD_GUI.c ****                                 ptr++;
 2422              		.loc 1 624 35 is_stmt 0 view .LVU655
 2423 0058 6242     		rsbs	r2, r4, #0
 2424 005a 04F00703 		and	r3, r4, #7
 2425 005e 02F00702 		and	r2, r2, #7
 2426 0062 58BF     		it	pl
 2427 0064 5342     		rsbpl	r3, r2, #0
 624:Core/Src/EPD_GUI.c ****                                 ptr++;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 60


 2428              		.loc 1 624 32 view .LVU656
 2429 0066 072B     		cmp	r3, #7
 2430 0068 16D0     		beq	.L214
 2431              	.LVL228:
 2432              	.L191:
 609:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2433              		.loc 1 609 55 is_stmt 1 discriminator 2 view .LVU657
 2434 006a 0134     		adds	r4, r4, #1
 2435              	.LVL229:
 2436              	.L194:
 609:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2437              		.loc 1 609 39 discriminator 1 view .LVU658
 609:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2438              		.loc 1 609 45 is_stmt 0 discriminator 1 view .LVU659
 2439 006c 2B89     		ldrh	r3, [r5, #8]
 609:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2440              		.loc 1 609 39 discriminator 1 view .LVU660
 2441 006e A342     		cmp	r3, r4
 2442 0070 14DD     		ble	.L215
 610:Core/Src/EPD_GUI.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 2443              		.loc 1 610 29 is_stmt 1 view .LVU661
 610:Core/Src/EPD_GUI.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 2444              		.loc 1 610 32 is_stmt 0 view .LVU662
 2445 0072 FF2F     		cmp	r7, #255
 2446 0074 D6D0     		beq	.L216
 616:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2447              		.loc 1 616 33 is_stmt 1 view .LVU663
 616:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2448              		.loc 1 616 37 is_stmt 0 view .LVU664
 2449 0076 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 616:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2450              		.loc 1 616 50 view .LVU665
 2451 0078 04F00701 		and	r1, r4, #7
 2452 007c 8023     		movs	r3, #128
 2453 007e 0B41     		asrs	r3, r3, r1
 616:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2454              		.loc 1 616 36 view .LVU666
 2455 0080 1A42     		tst	r2, r3
 2456 0082 E0D0     		beq	.L190
 617:Core/Src/EPD_GUI.c ****                                     // EPD_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DFT,
 2457              		.loc 1 617 37 is_stmt 1 view .LVU667
 2458 0084 09EB0B01 		add	r1, r9, fp
 2459 0088 08EB0400 		add	r0, r8, r4
 2460 008c 5246     		mov	r2, r10
 2461 008e 89B2     		uxth	r1, r1
 2462 0090 80B2     		uxth	r0, r0
 2463 0092 FFF7FEFF 		bl	EPD_SetPixel
 2464              	.LVL230:
 2465 0096 DFE7     		b	.L189
 2466              	.L214:
 625:Core/Src/EPD_GUI.c ****                             }
 2467              		.loc 1 625 33 view .LVU668
 625:Core/Src/EPD_GUI.c ****                             }
 2468              		.loc 1 625 36 is_stmt 0 view .LVU669
 2469 0098 0136     		adds	r6, r6, #1
 2470              	.LVL231:
 625:Core/Src/EPD_GUI.c ****                             }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 61


 2471              		.loc 1 625 36 view .LVU670
 2472 009a E6E7     		b	.L191
 2473              	.LVL232:
 2474              	.L215:
 628:Core/Src/EPD_GUI.c ****                             ptr++;
 2475              		.loc 1 628 25 is_stmt 1 view .LVU671
 628:Core/Src/EPD_GUI.c ****                             ptr++;
 2476              		.loc 1 628 28 is_stmt 0 view .LVU672
 2477 009c 13F0070F 		tst	r3, #7
 2478 00a0 00D0     		beq	.L193
 629:Core/Src/EPD_GUI.c ****                         }
 2479              		.loc 1 629 29 is_stmt 1 view .LVU673
 629:Core/Src/EPD_GUI.c ****                         }
 2480              		.loc 1 629 32 is_stmt 0 view .LVU674
 2481 00a2 0136     		adds	r6, r6, #1
 2482              	.LVL233:
 2483              	.L193:
 608:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2484              		.loc 1 608 52 is_stmt 1 discriminator 2 view .LVU675
 2485 00a4 0BF1010B 		add	fp, fp, #1
 2486              	.LVL234:
 2487              	.L187:
 608:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2488              		.loc 1 608 35 discriminator 1 view .LVU676
 608:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2489              		.loc 1 608 41 is_stmt 0 discriminator 1 view .LVU677
 2490 00a8 6B89     		ldrh	r3, [r5, #10]
 608:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2491              		.loc 1 608 35 discriminator 1 view .LVU678
 2492 00aa 5B45     		cmp	r3, fp
 2493 00ac 01DD     		ble	.L195
 609:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2494              		.loc 1 609 32 view .LVU679
 2495 00ae 0024     		movs	r4, #0
 2496 00b0 DCE7     		b	.L194
 2497              	.LVL235:
 2498              	.L195:
 609:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2499              		.loc 1 609 32 view .LVU680
 2500              	.LBE17:
 636:Core/Src/EPD_GUI.c ****             /* Decrement the column position by 16 */
 2501              		.loc 1 636 13 is_stmt 1 view .LVU681
 636:Core/Src/EPD_GUI.c ****             /* Decrement the column position by 16 */
 2502              		.loc 1 636 20 is_stmt 0 view .LVU682
 2503 00b2 019B     		ldr	r3, [sp, #4]
 2504 00b4 0133     		adds	r3, r3, #1
 2505 00b6 0193     		str	r3, [sp, #4]
 2506              	.LVL236:
 638:Core/Src/EPD_GUI.c ****         } else {        //Chinese
 2507              		.loc 1 638 13 is_stmt 1 view .LVU683
 638:Core/Src/EPD_GUI.c ****         } else {        //Chinese
 2508              		.loc 1 638 22 is_stmt 0 view .LVU684
 2509 00b8 EB88     		ldrh	r3, [r5, #6]
 2510              	.LVL237:
 638:Core/Src/EPD_GUI.c ****         } else {        //Chinese
 2511              		.loc 1 638 15 view .LVU685
 2512 00ba 9844     		add	r8, r8, r3
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 62


 2513              	.LVL238:
 2514              	.L183:
 602:Core/Src/EPD_GUI.c ****         if(*p_text <= 0x7F) {  //ASCII < 126
 2515              		.loc 1 602 20 is_stmt 1 view .LVU686
 602:Core/Src/EPD_GUI.c ****         if(*p_text <= 0x7F) {  //ASCII < 126
 2516              		.loc 1 602 12 is_stmt 0 view .LVU687
 2517 00bc 019B     		ldr	r3, [sp, #4]
 2518 00be 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 602:Core/Src/EPD_GUI.c ****         if(*p_text <= 0x7F) {  //ASCII < 126
 2519              		.loc 1 602 20 view .LVU688
 2520 00c0 0028     		cmp	r0, #0
 2521 00c2 72D0     		beq	.L217
 603:Core/Src/EPD_GUI.c ****             for(Num = 0; Num < font->size; Num++) {
 2522              		.loc 1 603 9 is_stmt 1 view .LVU689
 603:Core/Src/EPD_GUI.c ****             for(Num = 0; Num < font->size; Num++) {
 2523              		.loc 1 603 11 is_stmt 0 view .LVU690
 2524 00c4 10F0800F 		tst	r0, #128
 2525 00c8 A6D1     		bne	.L218
 604:Core/Src/EPD_GUI.c ****                 if(*p_text== font->table[Num].index[0]) {
 2526              		.loc 1 604 21 view .LVU691
 2527 00ca 0022     		movs	r2, #0
 2528              	.L184:
 2529              	.LVL239:
 604:Core/Src/EPD_GUI.c ****                 if(*p_text== font->table[Num].index[0]) {
 2530              		.loc 1 604 30 is_stmt 1 discriminator 1 view .LVU692
 604:Core/Src/EPD_GUI.c ****                 if(*p_text== font->table[Num].index[0]) {
 2531              		.loc 1 604 36 is_stmt 0 discriminator 1 view .LVU693
 2532 00cc AB88     		ldrh	r3, [r5, #4]
 604:Core/Src/EPD_GUI.c ****                 if(*p_text== font->table[Num].index[0]) {
 2533              		.loc 1 604 30 discriminator 1 view .LVU694
 2534 00ce 9342     		cmp	r3, r2
 2535 00d0 EFDD     		ble	.L195
 605:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2536              		.loc 1 605 17 is_stmt 1 view .LVU695
 605:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2537              		.loc 1 605 34 is_stmt 0 view .LVU696
 2538 00d2 2968     		ldr	r1, [r5]
 605:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2539              		.loc 1 605 41 view .LVU697
 2540 00d4 A623     		movs	r3, #166
 2541 00d6 02FB03F3 		mul	r3, r2, r3
 2542 00da CE18     		adds	r6, r1, r3
 605:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2543              		.loc 1 605 52 view .LVU698
 2544 00dc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 605:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2545              		.loc 1 605 19 view .LVU699
 2546 00de 8342     		cmp	r3, r0
 2547 00e0 9CD0     		beq	.L219
 604:Core/Src/EPD_GUI.c ****                 if(*p_text== font->table[Num].index[0]) {
 2548              		.loc 1 604 47 is_stmt 1 discriminator 2 view .LVU700
 2549 00e2 0132     		adds	r2, r2, #1
 2550              	.LVL240:
 604:Core/Src/EPD_GUI.c ****                 if(*p_text== font->table[Num].index[0]) {
 2551              		.loc 1 604 47 is_stmt 0 discriminator 2 view .LVU701
 2552 00e4 F2E7     		b	.L184
 2553              	.LVL241:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 63


 2554              	.L222:
 2555              	.LBB18:
 641:Core/Src/EPD_GUI.c ****                 if((*p_text== font->table[Num].index[0]) && (*(p_text+1) == font->table[Num].index[
 642:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 643:Core/Src/EPD_GUI.c **** 
 644:Core/Src/EPD_GUI.c ****                     for (j = 0; j < font->Height; j++) {
 645:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 646:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 647:Core/Src/EPD_GUI.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 2556              		.loc 1 647 33 is_stmt 1 view .LVU702
 2557              		.loc 1 647 37 is_stmt 0 view .LVU703
 2558 00e6 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 2559              		.loc 1 647 50 view .LVU704
 2560 00e8 04F00701 		and	r1, r4, #7
 2561 00ec 8023     		movs	r3, #128
 2562 00ee 0B41     		asrs	r3, r3, r1
 2563              		.loc 1 647 36 view .LVU705
 2564 00f0 1A42     		tst	r2, r3
 2565 00f2 12D0     		beq	.L201
 648:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2566              		.loc 1 648 37 is_stmt 1 view .LVU706
 2567 00f4 09EB0B01 		add	r1, r9, fp
 2568 00f8 08EB0400 		add	r0, r8, r4
 2569 00fc 5246     		mov	r2, r10
 2570 00fe 89B2     		uxth	r1, r1
 2571 0100 80B2     		uxth	r0, r0
 2572 0102 FFF7FEFF 		bl	EPD_SetPixel
 2573              	.LVL242:
 2574 0106 08E0     		b	.L201
 2575              	.L202:
 649:Core/Src/EPD_GUI.c ****                                     // EPD_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DFT,
 650:Core/Src/EPD_GUI.c ****                                 }
 651:Core/Src/EPD_GUI.c ****                             } else {
 652:Core/Src/EPD_GUI.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 653:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 654:Core/Src/EPD_GUI.c ****                                     // EPD_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DFT,
 655:Core/Src/EPD_GUI.c ****                                 } else {
 656:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Background);
 2576              		.loc 1 656 37 view .LVU707
 2577 0108 09EB0B01 		add	r1, r9, fp
 2578 010c 08EB0400 		add	r0, r8, r4
 2579 0110 3A46     		mov	r2, r7
 2580 0112 89B2     		uxth	r1, r1
 2581 0114 80B2     		uxth	r0, r0
 2582 0116 FFF7FEFF 		bl	EPD_SetPixel
 2583              	.LVL243:
 2584              	.L201:
 657:Core/Src/EPD_GUI.c ****                                     // EPD_DrawPoint(x + i, y + j, Color_Background, DOT_PIXEL_DFT,
 658:Core/Src/EPD_GUI.c ****                                 }
 659:Core/Src/EPD_GUI.c ****                             }
 660:Core/Src/EPD_GUI.c ****                             if (i % 8 == 7) {
 2585              		.loc 1 660 29 view .LVU708
 2586              		.loc 1 660 35 is_stmt 0 view .LVU709
 2587 011a 6242     		rsbs	r2, r4, #0
 2588 011c 04F00703 		and	r3, r4, #7
 2589 0120 02F00702 		and	r2, r2, #7
 2590 0124 58BF     		it	pl
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 64


 2591 0126 5342     		rsbpl	r3, r2, #0
 2592              		.loc 1 660 32 view .LVU710
 2593 0128 072B     		cmp	r3, #7
 2594 012a 16D0     		beq	.L220
 2595              	.LVL244:
 2596              	.L203:
 645:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2597              		.loc 1 645 55 is_stmt 1 discriminator 2 view .LVU711
 2598 012c 0134     		adds	r4, r4, #1
 2599              	.LVL245:
 2600              	.L206:
 645:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2601              		.loc 1 645 39 discriminator 1 view .LVU712
 645:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2602              		.loc 1 645 45 is_stmt 0 discriminator 1 view .LVU713
 2603 012e 2B89     		ldrh	r3, [r5, #8]
 645:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2604              		.loc 1 645 39 discriminator 1 view .LVU714
 2605 0130 A342     		cmp	r3, r4
 2606 0132 14DD     		ble	.L221
 646:Core/Src/EPD_GUI.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 2607              		.loc 1 646 29 is_stmt 1 view .LVU715
 646:Core/Src/EPD_GUI.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 2608              		.loc 1 646 32 is_stmt 0 view .LVU716
 2609 0134 FF2F     		cmp	r7, #255
 2610 0136 D6D0     		beq	.L222
 652:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2611              		.loc 1 652 33 is_stmt 1 view .LVU717
 652:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2612              		.loc 1 652 37 is_stmt 0 view .LVU718
 2613 0138 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 652:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2614              		.loc 1 652 50 view .LVU719
 2615 013a 04F00701 		and	r1, r4, #7
 2616 013e 8023     		movs	r3, #128
 2617 0140 0B41     		asrs	r3, r3, r1
 652:Core/Src/EPD_GUI.c ****                                     EPD_SetPixel(x + i, y + j, Color_Foreground);
 2618              		.loc 1 652 36 view .LVU720
 2619 0142 1A42     		tst	r2, r3
 2620 0144 E0D0     		beq	.L202
 653:Core/Src/EPD_GUI.c ****                                     // EPD_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DFT,
 2621              		.loc 1 653 37 is_stmt 1 view .LVU721
 2622 0146 09EB0B01 		add	r1, r9, fp
 2623 014a 08EB0400 		add	r0, r8, r4
 2624 014e 5246     		mov	r2, r10
 2625 0150 89B2     		uxth	r1, r1
 2626 0152 80B2     		uxth	r0, r0
 2627 0154 FFF7FEFF 		bl	EPD_SetPixel
 2628              	.LVL246:
 2629 0158 DFE7     		b	.L201
 2630              	.L220:
 661:Core/Src/EPD_GUI.c ****                                 ptr++;
 2631              		.loc 1 661 33 view .LVU722
 2632              		.loc 1 661 36 is_stmt 0 view .LVU723
 2633 015a 0136     		adds	r6, r6, #1
 2634              	.LVL247:
 2635              		.loc 1 661 36 view .LVU724
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 65


 2636 015c E6E7     		b	.L203
 2637              	.LVL248:
 2638              	.L221:
 662:Core/Src/EPD_GUI.c ****                             }
 663:Core/Src/EPD_GUI.c ****                         }
 664:Core/Src/EPD_GUI.c ****                         if (font->Width % 8 != 0) {
 2639              		.loc 1 664 25 is_stmt 1 view .LVU725
 2640              		.loc 1 664 28 is_stmt 0 view .LVU726
 2641 015e 13F0070F 		tst	r3, #7
 2642 0162 00D0     		beq	.L205
 665:Core/Src/EPD_GUI.c ****                             ptr++;
 2643              		.loc 1 665 29 is_stmt 1 view .LVU727
 2644              		.loc 1 665 32 is_stmt 0 view .LVU728
 2645 0164 0136     		adds	r6, r6, #1
 2646              	.LVL249:
 2647              	.L205:
 644:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2648              		.loc 1 644 52 is_stmt 1 discriminator 2 view .LVU729
 2649 0166 0BF1010B 		add	fp, fp, #1
 2650              	.LVL250:
 2651              	.L199:
 644:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2652              		.loc 1 644 35 discriminator 1 view .LVU730
 644:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2653              		.loc 1 644 41 is_stmt 0 discriminator 1 view .LVU731
 2654 016a 6B89     		ldrh	r3, [r5, #10]
 644:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2655              		.loc 1 644 35 discriminator 1 view .LVU732
 2656 016c 5B45     		cmp	r3, fp
 2657 016e 16DD     		ble	.L207
 645:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2658              		.loc 1 645 32 view .LVU733
 2659 0170 0024     		movs	r4, #0
 2660 0172 DCE7     		b	.L206
 2661              	.LVL251:
 2662              	.L198:
 645:Core/Src/EPD_GUI.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2663              		.loc 1 645 32 view .LVU734
 2664              	.LBE18:
 640:Core/Src/EPD_GUI.c ****                 if((*p_text== font->table[Num].index[0]) && (*(p_text+1) == font->table[Num].index[
 2665              		.loc 1 640 47 is_stmt 1 discriminator 2 view .LVU735
 2666 0174 0132     		adds	r2, r2, #1
 2667              	.LVL252:
 2668              	.L185:
 640:Core/Src/EPD_GUI.c ****                 if((*p_text== font->table[Num].index[0]) && (*(p_text+1) == font->table[Num].index[
 2669              		.loc 1 640 30 discriminator 1 view .LVU736
 640:Core/Src/EPD_GUI.c ****                 if((*p_text== font->table[Num].index[0]) && (*(p_text+1) == font->table[Num].index[
 2670              		.loc 1 640 36 is_stmt 0 discriminator 1 view .LVU737
 2671 0176 AB88     		ldrh	r3, [r5, #4]
 640:Core/Src/EPD_GUI.c ****                 if((*p_text== font->table[Num].index[0]) && (*(p_text+1) == font->table[Num].index[
 2672              		.loc 1 640 30 discriminator 1 view .LVU738
 2673 0178 9342     		cmp	r3, r2
 2674 017a 10DD     		ble	.L207
 641:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2675              		.loc 1 641 17 is_stmt 1 view .LVU739
 641:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2676              		.loc 1 641 35 is_stmt 0 view .LVU740
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 66


 2677 017c 2968     		ldr	r1, [r5]
 641:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2678              		.loc 1 641 42 view .LVU741
 2679 017e A623     		movs	r3, #166
 2680 0180 02FB03F3 		mul	r3, r2, r3
 2681 0184 CE18     		adds	r6, r1, r3
 641:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2682              		.loc 1 641 53 view .LVU742
 2683 0186 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 641:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2684              		.loc 1 641 19 view .LVU743
 2685 0188 8342     		cmp	r3, r0
 2686 018a F3D1     		bne	.L198
 641:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2687              		.loc 1 641 62 discriminator 1 view .LVU744
 2688 018c 019B     		ldr	r3, [sp, #4]
 2689 018e 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 641:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2690              		.loc 1 641 99 discriminator 1 view .LVU745
 2691 0190 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 641:Core/Src/EPD_GUI.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2692              		.loc 1 641 58 discriminator 1 view .LVU746
 2693 0192 9942     		cmp	r1, r3
 2694 0194 EED1     		bne	.L198
 2695              	.LBB19:
 642:Core/Src/EPD_GUI.c **** 
 2696              		.loc 1 642 21 is_stmt 1 view .LVU747
 642:Core/Src/EPD_GUI.c **** 
 2697              		.loc 1 642 33 is_stmt 0 view .LVU748
 2698 0196 0236     		adds	r6, r6, #2
 2699              	.LVL253:
 644:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2700              		.loc 1 644 21 is_stmt 1 view .LVU749
 644:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2701              		.loc 1 644 28 is_stmt 0 view .LVU750
 2702 0198 4FF0000B 		mov	fp, #0
 644:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2703              		.loc 1 644 21 view .LVU751
 2704 019c E5E7     		b	.L199
 2705              	.LVL254:
 2706              	.L207:
 644:Core/Src/EPD_GUI.c ****                         for (i = 0; i < font->Width; i++) {
 2707              		.loc 1 644 21 view .LVU752
 2708              	.LBE19:
 666:Core/Src/EPD_GUI.c ****                         }
 667:Core/Src/EPD_GUI.c ****                     }
 668:Core/Src/EPD_GUI.c ****                     break;
 669:Core/Src/EPD_GUI.c ****                 }
 670:Core/Src/EPD_GUI.c ****             }
 671:Core/Src/EPD_GUI.c ****             /* Point on the next character */
 672:Core/Src/EPD_GUI.c ****             p_text += 2;
 2709              		.loc 1 672 13 is_stmt 1 view .LVU753
 2710              		.loc 1 672 20 is_stmt 0 view .LVU754
 2711 019e 019B     		ldr	r3, [sp, #4]
 2712 01a0 0233     		adds	r3, r3, #2
 2713 01a2 0193     		str	r3, [sp, #4]
 2714              	.LVL255:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 67


 673:Core/Src/EPD_GUI.c ****             /* Decrement the column position by 16 */
 674:Core/Src/EPD_GUI.c ****             x += font->Width;
 2715              		.loc 1 674 13 is_stmt 1 view .LVU755
 2716              		.loc 1 674 22 is_stmt 0 view .LVU756
 2717 01a4 2B89     		ldrh	r3, [r5, #8]
 2718              	.LVL256:
 2719              		.loc 1 674 15 view .LVU757
 2720 01a6 9844     		add	r8, r8, r3
 2721              	.LVL257:
 2722              		.loc 1 674 15 view .LVU758
 2723 01a8 88E7     		b	.L183
 2724              	.LVL258:
 2725              	.L217:
 675:Core/Src/EPD_GUI.c ****         }
 676:Core/Src/EPD_GUI.c ****     }
 677:Core/Src/EPD_GUI.c **** }
 2726              		.loc 1 677 1 view .LVU759
 2727 01aa 03B0     		add	sp, sp, #12
 2728              		.cfi_def_cfa_offset 36
 2729              		@ sp needed
 2730 01ac BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2731              		.loc 1 677 1 view .LVU760
 2732              		.cfi_endproc
 2733              	.LFE336:
 2735              		.section	.text.EPD_DrawNum,"ax",%progbits
 2736              		.align	1
 2737              		.global	EPD_DrawNum
 2738              		.syntax unified
 2739              		.thumb
 2740              		.thumb_func
 2742              	EPD_DrawNum:
 2743              	.LVL259:
 2744              	.LFB337:
 678:Core/Src/EPD_GUI.c **** 
 679:Core/Src/EPD_GUI.c **** /******************************************************************************
 680:Core/Src/EPD_GUI.c **** function:	Display nummber
 681:Core/Src/EPD_GUI.c **** parameter:
 682:Core/Src/EPD_GUI.c ****     Xstart           ：X coordinate
 683:Core/Src/EPD_GUI.c ****     Ystart           : Y coordinate
 684:Core/Src/EPD_GUI.c ****     Nummber          : The number displayed
 685:Core/Src/EPD_GUI.c ****     Font             ：A structure pointer that displays a character size
 686:Core/Src/EPD_GUI.c ****     Color_Foreground : Select the foreground color
 687:Core/Src/EPD_GUI.c ****     Color_Background : Select the background color
 688:Core/Src/EPD_GUI.c **** ******************************************************************************/
 689:Core/Src/EPD_GUI.c **** #define  ARRAY_LEN 255
 690:Core/Src/EPD_GUI.c **** void EPD_DrawNum(UWORD Xpoint, UWORD Ypoint, int32_t Nummber,
 691:Core/Src/EPD_GUI.c ****                    sFONT* Font, UWORD Color_Foreground, UWORD Color_Background)
 692:Core/Src/EPD_GUI.c **** {
 2745              		.loc 1 692 1 is_stmt 1 view -0
 2746              		.cfi_startproc
 2747              		@ args = 8, pretend = 0, frame = 512
 2748              		@ frame_needed = 0, uses_anonymous_args = 0
 2749              		.loc 1 692 1 is_stmt 0 view .LVU762
 2750 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2751              		.cfi_def_cfa_offset 24
 2752              		.cfi_offset 4, -24
 2753              		.cfi_offset 5, -20
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 68


 2754              		.cfi_offset 6, -16
 2755              		.cfi_offset 7, -12
 2756              		.cfi_offset 8, -8
 2757              		.cfi_offset 14, -4
 2758 0004 ADF5027D 		sub	sp, sp, #520
 2759              		.cfi_def_cfa_offset 544
 2760 0008 0446     		mov	r4, r0
 2761 000a 0D46     		mov	r5, r1
 2762 000c 1746     		mov	r7, r2
 2763 000e 1E46     		mov	r6, r3
 693:Core/Src/EPD_GUI.c **** 
 694:Core/Src/EPD_GUI.c ****     int16_t Num_Bit = 0, Str_Bit = 0;
 2764              		.loc 1 694 5 is_stmt 1 view .LVU763
 2765              	.LVL260:
 695:Core/Src/EPD_GUI.c ****     uint8_t Str_Array[ARRAY_LEN] = {0}, Num_Array[ARRAY_LEN] = {0};
 2766              		.loc 1 695 5 view .LVU764
 2767              		.loc 1 695 13 is_stmt 0 view .LVU765
 2768 0010 4FF0FF08 		mov	r8, #255
 2769 0014 4246     		mov	r2, r8
 2770              	.LVL261:
 2771              		.loc 1 695 13 view .LVU766
 2772 0016 0021     		movs	r1, #0
 2773              	.LVL262:
 2774              		.loc 1 695 13 view .LVU767
 2775 0018 42A8     		add	r0, sp, #264
 2776              	.LVL263:
 2777              		.loc 1 695 13 view .LVU768
 2778 001a FFF7FEFF 		bl	memset
 2779              	.LVL264:
 2780              		.loc 1 695 41 view .LVU769
 2781 001e 4246     		mov	r2, r8
 2782 0020 0021     		movs	r1, #0
 2783 0022 02A8     		add	r0, sp, #8
 2784 0024 FFF7FEFF 		bl	memset
 2785              	.LVL265:
 696:Core/Src/EPD_GUI.c ****     uint8_t *pStr = Str_Array;
 2786              		.loc 1 696 5 is_stmt 1 view .LVU770
 697:Core/Src/EPD_GUI.c **** 
 698:Core/Src/EPD_GUI.c ****     if (Xpoint > Paint.Width || Ypoint > Paint.Height) {
 2787              		.loc 1 698 5 view .LVU771
 2788              		.loc 1 698 23 is_stmt 0 view .LVU772
 2789 0028 204B     		ldr	r3, .L231
 2790 002a 9B88     		ldrh	r3, [r3, #4]
 2791              		.loc 1 698 8 view .LVU773
 2792 002c A342     		cmp	r3, r4
 2793 002e 39D3     		bcc	.L223
 2794              		.loc 1 698 47 discriminator 1 view .LVU774
 2795 0030 1E4B     		ldr	r3, .L231
 2796 0032 DB88     		ldrh	r3, [r3, #6]
 2797              		.loc 1 698 30 discriminator 1 view .LVU775
 2798 0034 AB42     		cmp	r3, r5
 2799 0036 35D3     		bcc	.L223
 694:Core/Src/EPD_GUI.c ****     uint8_t Str_Array[ARRAY_LEN] = {0}, Num_Array[ARRAY_LEN] = {0};
 2800              		.loc 1 694 13 view .LVU776
 2801 0038 4FF0000E 		mov	lr, #0
 2802              	.LVL266:
 2803              	.L225:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 69


 699:Core/Src/EPD_GUI.c ****         return;
 700:Core/Src/EPD_GUI.c ****     }
 701:Core/Src/EPD_GUI.c **** 
 702:Core/Src/EPD_GUI.c ****     //Converts a number to a string
 703:Core/Src/EPD_GUI.c ****     do {
 2804              		.loc 1 703 5 is_stmt 1 view .LVU777
 704:Core/Src/EPD_GUI.c ****         Num_Array[Num_Bit] = Nummber % 10 + '0';
 2805              		.loc 1 704 9 view .LVU778
 2806              		.loc 1 704 38 is_stmt 0 view .LVU779
 2807 003c 1C4B     		ldr	r3, .L231+4
 2808 003e 83FB0723 		smull	r2, r3, r3, r7
 2809 0042 4FEAE77C 		asr	ip, r7, #31
 2810 0046 CCEBA30C 		rsb	ip, ip, r3, asr #2
 2811 004a 6346     		mov	r3, ip
 2812 004c 0CEB8C0C 		add	ip, ip, ip, lsl #2
 2813 0050 A7EB4C0C 		sub	ip, r7, ip, lsl #1
 2814              		.loc 1 704 43 view .LVU780
 2815 0054 0CF1300C 		add	ip, ip, #48
 2816              		.loc 1 704 28 view .LVU781
 2817 0058 02AA     		add	r2, sp, #8
 2818 005a 02F80EC0 		strb	ip, [r2, lr]
 705:Core/Src/EPD_GUI.c ****         Num_Bit++;
 2819              		.loc 1 705 9 is_stmt 1 view .LVU782
 2820              		.loc 1 705 16 is_stmt 0 view .LVU783
 2821 005e 0EF1010E 		add	lr, lr, #1
 2822              	.LVL267:
 2823              		.loc 1 705 16 view .LVU784
 2824 0062 0FFA8EFE 		sxth	lr, lr
 2825              	.LVL268:
 706:Core/Src/EPD_GUI.c ****         Nummber /= 10;
 2826              		.loc 1 706 9 is_stmt 1 view .LVU785
 2827              		.loc 1 706 17 is_stmt 0 view .LVU786
 2828 0066 1F46     		mov	r7, r3
 2829              	.LVL269:
 707:Core/Src/EPD_GUI.c ****     } while(Nummber);
 2830              		.loc 1 707 13 is_stmt 1 discriminator 1 view .LVU787
 2831 0068 002B     		cmp	r3, #0
 2832 006a E7D1     		bne	.L225
 2833 006c 0BE0     		b	.L227
 2834              	.LVL270:
 2835              	.L228:
 708:Core/Src/EPD_GUI.c ****     
 709:Core/Src/EPD_GUI.c **** 
 710:Core/Src/EPD_GUI.c ****     //The string is inverted
 711:Core/Src/EPD_GUI.c ****     while (Num_Bit > 0) {
 712:Core/Src/EPD_GUI.c ****         Str_Array[Str_Bit] = Num_Array[Num_Bit - 1];
 2836              		.loc 1 712 9 view .LVU788
 2837              		.loc 1 712 48 is_stmt 0 view .LVU789
 2838 006e 0EF1FF32 		add	r2, lr, #-1
 2839              		.loc 1 712 39 view .LVU790
 2840 0072 02A9     		add	r1, sp, #8
 2841 0074 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 2842              		.loc 1 712 28 view .LVU791
 2843 0076 42AA     		add	r2, sp, #264
 2844              	.LVL271:
 2845              		.loc 1 712 28 view .LVU792
 2846 0078 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 70


 713:Core/Src/EPD_GUI.c ****         Str_Bit ++;
 2847              		.loc 1 713 9 is_stmt 1 view .LVU793
 2848              		.loc 1 713 17 is_stmt 0 view .LVU794
 2849 007a 0133     		adds	r3, r3, #1
 2850              	.LVL272:
 2851              		.loc 1 713 17 view .LVU795
 2852 007c 1BB2     		sxth	r3, r3
 2853              	.LVL273:
 714:Core/Src/EPD_GUI.c ****         Num_Bit --;
 2854              		.loc 1 714 9 is_stmt 1 view .LVU796
 2855              		.loc 1 714 17 is_stmt 0 view .LVU797
 2856 007e 0EF1FF3E 		add	lr, lr, #-1
 2857              	.LVL274:
 2858              		.loc 1 714 17 view .LVU798
 2859 0082 0FFA8EFE 		sxth	lr, lr
 2860              	.LVL275:
 2861              	.L227:
 711:Core/Src/EPD_GUI.c ****         Str_Array[Str_Bit] = Num_Array[Num_Bit - 1];
 2862              		.loc 1 711 20 is_stmt 1 view .LVU799
 2863 0086 BEF1000F 		cmp	lr, #0
 2864 008a F0DC     		bgt	.L228
 715:Core/Src/EPD_GUI.c ****     }
 716:Core/Src/EPD_GUI.c **** 
 717:Core/Src/EPD_GUI.c ****     //show
 718:Core/Src/EPD_GUI.c ****     EPD_DrawString_EN(Xpoint, Ypoint, (const char*)pStr, Font, Color_Background, Color_Foreground);
 2865              		.loc 1 718 5 view .LVU800
 2866 008c BDF82032 		ldrh	r3, [sp, #544]
 2867              	.LVL276:
 2868              		.loc 1 718 5 is_stmt 0 view .LVU801
 2869 0090 0193     		str	r3, [sp, #4]
 2870 0092 BDF82432 		ldrh	r3, [sp, #548]
 2871 0096 0093     		str	r3, [sp]
 2872 0098 3346     		mov	r3, r6
 2873 009a 42AA     		add	r2, sp, #264
 2874              	.LVL277:
 2875              		.loc 1 718 5 view .LVU802
 2876 009c 2946     		mov	r1, r5
 2877 009e 2046     		mov	r0, r4
 2878 00a0 FFF7FEFF 		bl	EPD_DrawString_EN
 2879              	.LVL278:
 2880              	.L223:
 719:Core/Src/EPD_GUI.c **** }
 2881              		.loc 1 719 1 view .LVU803
 2882 00a4 0DF5027D 		add	sp, sp, #520
 2883              		.cfi_def_cfa_offset 24
 2884              		@ sp needed
 2885 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2886              	.LVL279:
 2887              	.L232:
 2888              		.loc 1 719 1 view .LVU804
 2889              		.align	2
 2890              	.L231:
 2891 00ac 00000000 		.word	Paint
 2892 00b0 67666666 		.word	1717986919
 2893              		.cfi_endproc
 2894              	.LFE337:
 2896              		.section	.text.EPD_DrawNumDecimals,"ax",%progbits
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 71


 2897              		.align	1
 2898              		.global	EPD_DrawNumDecimals
 2899              		.syntax unified
 2900              		.thumb
 2901              		.thumb_func
 2903              	EPD_DrawNumDecimals:
 2904              	.LVL280:
 2905              	.LFB338:
 720:Core/Src/EPD_GUI.c **** 
 721:Core/Src/EPD_GUI.c **** /******************************************************************************
 722:Core/Src/EPD_GUI.c **** function:	Display nummber (Able to display decimals)
 723:Core/Src/EPD_GUI.c **** parameter:
 724:Core/Src/EPD_GUI.c ****     Xstart           ：X coordinate
 725:Core/Src/EPD_GUI.c ****     Ystart           : Y coordinate
 726:Core/Src/EPD_GUI.c ****     Nummber          : The number displayed
 727:Core/Src/EPD_GUI.c ****     Font             ：A structure pointer that displays a character size
 728:Core/Src/EPD_GUI.c ****     Digit            : Fractional width
 729:Core/Src/EPD_GUI.c ****     Color_Foreground : Select the foreground color
 730:Core/Src/EPD_GUI.c ****     Color_Background : Select the background color
 731:Core/Src/EPD_GUI.c **** ******************************************************************************/
 732:Core/Src/EPD_GUI.c **** void EPD_DrawNumDecimals(UWORD Xpoint, UWORD Ypoint, double Nummber,
 733:Core/Src/EPD_GUI.c ****                     sFONT* Font, UWORD Digit, UWORD Color_Foreground, UWORD Color_Background)
 734:Core/Src/EPD_GUI.c **** {
 2906              		.loc 1 734 1 is_stmt 1 view -0
 2907              		.cfi_startproc
 2908              		@ args = 8, pretend = 0, frame = 512
 2909              		@ frame_needed = 0, uses_anonymous_args = 0
 2910              		.loc 1 734 1 is_stmt 0 view .LVU806
 2911 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2912              		.cfi_def_cfa_offset 32
 2913              		.cfi_offset 4, -32
 2914              		.cfi_offset 5, -28
 2915              		.cfi_offset 6, -24
 2916              		.cfi_offset 7, -20
 2917              		.cfi_offset 8, -16
 2918              		.cfi_offset 9, -12
 2919              		.cfi_offset 10, -8
 2920              		.cfi_offset 14, -4
 2921 0004 ADF5027D 		sub	sp, sp, #520
 2922              		.cfi_def_cfa_offset 552
 2923 0008 0446     		mov	r4, r0
 2924 000a 0D46     		mov	r5, r1
 2925 000c 57EC106B 		vmov	r6, r7, d0
 2926 0010 9046     		mov	r8, r2
 2927 0012 9A46     		mov	r10, r3
 735:Core/Src/EPD_GUI.c ****     int16_t Num_Bit = 0, Str_Bit = 0;
 2928              		.loc 1 735 5 is_stmt 1 view .LVU807
 2929              	.LVL281:
 736:Core/Src/EPD_GUI.c ****     uint8_t Str_Array[ARRAY_LEN] = {0}, Num_Array[ARRAY_LEN] = {0};
 2930              		.loc 1 736 5 view .LVU808
 2931              		.loc 1 736 13 is_stmt 0 view .LVU809
 2932 0014 4FF0FF09 		mov	r9, #255
 2933 0018 4A46     		mov	r2, r9
 2934              	.LVL282:
 2935              		.loc 1 736 13 view .LVU810
 2936 001a 0021     		movs	r1, #0
 2937              	.LVL283:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 72


 2938              		.loc 1 736 13 view .LVU811
 2939 001c 42A8     		add	r0, sp, #264
 2940              	.LVL284:
 2941              		.loc 1 736 13 view .LVU812
 2942 001e FFF7FEFF 		bl	memset
 2943              	.LVL285:
 2944              		.loc 1 736 41 view .LVU813
 2945 0022 4A46     		mov	r2, r9
 2946 0024 0021     		movs	r1, #0
 2947 0026 02A8     		add	r0, sp, #8
 2948 0028 FFF7FEFF 		bl	memset
 2949              	.LVL286:
 737:Core/Src/EPD_GUI.c ****     uint8_t *pStr = Str_Array;
 2950              		.loc 1 737 5 is_stmt 1 view .LVU814
 738:Core/Src/EPD_GUI.c **** 	int temp = Nummber;
 2951              		.loc 1 738 2 view .LVU815
 2952              		.loc 1 738 6 is_stmt 0 view .LVU816
 2953 002c 3046     		mov	r0, r6
 2954 002e 3946     		mov	r1, r7
 2955 0030 FFF7FEFF 		bl	__aeabi_d2iz
 2956              	.LVL287:
 739:Core/Src/EPD_GUI.c **** 	float decimals;
 2957              		.loc 1 739 2 is_stmt 1 view .LVU817
 740:Core/Src/EPD_GUI.c **** 	uint8_t i;
 2958              		.loc 1 740 2 view .LVU818
 741:Core/Src/EPD_GUI.c ****     if (Xpoint > Paint.Width || Ypoint > Paint.Height) {
 2959              		.loc 1 741 5 view .LVU819
 2960              		.loc 1 741 23 is_stmt 0 view .LVU820
 2961 0034 424B     		ldr	r3, .L247
 2962 0036 9B88     		ldrh	r3, [r3, #4]
 2963              		.loc 1 741 8 view .LVU821
 2964 0038 A342     		cmp	r3, r4
 2965 003a 7DD3     		bcc	.L233
 2966 003c 8146     		mov	r9, r0
 2967              		.loc 1 741 47 discriminator 1 view .LVU822
 2968 003e 404B     		ldr	r3, .L247
 2969 0040 DB88     		ldrh	r3, [r3, #6]
 2970              		.loc 1 741 30 discriminator 1 view .LVU823
 2971 0042 AB42     		cmp	r3, r5
 2972 0044 78D3     		bcc	.L233
 742:Core/Src/EPD_GUI.c ****         return;
 743:Core/Src/EPD_GUI.c ****     }
 744:Core/Src/EPD_GUI.c **** 
 745:Core/Src/EPD_GUI.c **** 	if(Digit > 0) {		
 2973              		.loc 1 745 2 is_stmt 1 view .LVU824
 2974              		.loc 1 745 4 is_stmt 0 view .LVU825
 2975 0046 BAF1000F 		cmp	r10, #0
 2976 004a 57D0     		beq	.L245
 746:Core/Src/EPD_GUI.c **** 		decimals = Nummber - temp;
 2977              		.loc 1 746 3 is_stmt 1 view .LVU826
 2978              		.loc 1 746 22 is_stmt 0 view .LVU827
 2979 004c FFF7FEFF 		bl	__aeabi_i2d
 2980              	.LVL288:
 2981              		.loc 1 746 22 view .LVU828
 2982 0050 0246     		mov	r2, r0
 2983 0052 0B46     		mov	r3, r1
 2984 0054 3046     		mov	r0, r6
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 73


 2985 0056 3946     		mov	r1, r7
 2986 0058 FFF7FEFF 		bl	__aeabi_dsub
 2987              	.LVL289:
 2988              		.loc 1 746 12 view .LVU829
 2989 005c FFF7FEFF 		bl	__aeabi_d2f
 2990              	.LVL290:
 2991 0060 07EE900A 		vmov	s15, r0
 2992              	.LVL291:
 747:Core/Src/EPD_GUI.c **** 		for(i=Digit; i > 0; i--) {
 2993              		.loc 1 747 3 is_stmt 1 view .LVU830
 2994              		.loc 1 747 8 is_stmt 0 view .LVU831
 2995 0064 5FFA8AF3 		uxtb	r3, r10
 2996              	.LVL292:
 2997              		.loc 1 747 8 view .LVU832
 2998 0068 1A46     		mov	r2, r3
 2999              		.loc 1 747 3 view .LVU833
 3000 006a 05E0     		b	.L238
 3001              	.LVL293:
 3002              	.L239:
 748:Core/Src/EPD_GUI.c **** 			decimals*=10;
 3003              		.loc 1 748 4 is_stmt 1 view .LVU834
 3004              		.loc 1 748 12 is_stmt 0 view .LVU835
 3005 006c B2EE047A 		vmov.f32	s14, #1.0e+1
 3006 0070 67EE877A 		vmul.f32	s15, s15, s14
 3007              	.LVL294:
 747:Core/Src/EPD_GUI.c **** 		for(i=Digit; i > 0; i--) {
 3008              		.loc 1 747 24 is_stmt 1 discriminator 3 view .LVU836
 3009 0074 013A     		subs	r2, r2, #1
 3010              	.LVL295:
 747:Core/Src/EPD_GUI.c **** 		for(i=Digit; i > 0; i--) {
 3011              		.loc 1 747 24 is_stmt 0 discriminator 3 view .LVU837
 3012 0076 D2B2     		uxtb	r2, r2
 3013              	.LVL296:
 3014              	.L238:
 747:Core/Src/EPD_GUI.c **** 		for(i=Digit; i > 0; i--) {
 3015              		.loc 1 747 18 is_stmt 1 discriminator 1 view .LVU838
 3016 0078 002A     		cmp	r2, #0
 3017 007a F7D1     		bne	.L239
 749:Core/Src/EPD_GUI.c **** 		}
 750:Core/Src/EPD_GUI.c **** 		temp = decimals;
 3018              		.loc 1 750 3 view .LVU839
 3019              		.loc 1 750 8 is_stmt 0 view .LVU840
 3020 007c FDEEE77A 		vcvt.s32.f32	s15, s15
 3021              	.LVL297:
 3022              		.loc 1 750 8 view .LVU841
 3023 0080 17EE901A 		vmov	r1, s15	@ int
 3024              	.LVL298:
 751:Core/Src/EPD_GUI.c **** 		//Converts a number to a string
 752:Core/Src/EPD_GUI.c **** 		for(i=Digit; i>0; i--) {
 3025              		.loc 1 752 3 is_stmt 1 view .LVU842
 735:Core/Src/EPD_GUI.c ****     uint8_t Str_Array[ARRAY_LEN] = {0}, Num_Array[ARRAY_LEN] = {0};
 3026              		.loc 1 735 13 is_stmt 0 view .LVU843
 3027 0084 4FF0000C 		mov	ip, #0
 3028              		.loc 1 752 3 view .LVU844
 3029 0088 15E0     		b	.L240
 3030              	.LVL299:
 3031              	.L241:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 74


 753:Core/Src/EPD_GUI.c **** 			Num_Array[Num_Bit] = temp % 10 + '0';
 3032              		.loc 1 753 4 is_stmt 1 view .LVU845
 3033              		.loc 1 753 30 is_stmt 0 view .LVU846
 3034 008a 2E48     		ldr	r0, .L247+4
 3035 008c 80FB0120 		smull	r2, r0, r0, r1
 3036 0090 CA17     		asrs	r2, r1, #31
 3037 0092 C2EBA002 		rsb	r2, r2, r0, asr #2
 3038 0096 1046     		mov	r0, r2
 3039 0098 02EB8202 		add	r2, r2, r2, lsl #2
 3040 009c A1EB4202 		sub	r2, r1, r2, lsl #1
 3041              		.loc 1 753 35 view .LVU847
 3042 00a0 3032     		adds	r2, r2, #48
 3043              		.loc 1 753 23 view .LVU848
 3044 00a2 02A9     		add	r1, sp, #8
 3045              	.LVL300:
 3046              		.loc 1 753 23 view .LVU849
 3047 00a4 01F80C20 		strb	r2, [r1, ip]
 754:Core/Src/EPD_GUI.c **** 			Num_Bit++;
 3048              		.loc 1 754 4 is_stmt 1 view .LVU850
 3049              		.loc 1 754 11 is_stmt 0 view .LVU851
 3050 00a8 0CF1010C 		add	ip, ip, #1
 3051              	.LVL301:
 3052              		.loc 1 754 11 view .LVU852
 3053 00ac 0FFA8CFC 		sxth	ip, ip
 3054              	.LVL302:
 755:Core/Src/EPD_GUI.c **** 			temp /= 10;						
 3055              		.loc 1 755 4 is_stmt 1 view .LVU853
 3056              		.loc 1 755 9 is_stmt 0 view .LVU854
 3057 00b0 0146     		mov	r1, r0
 3058              	.LVL303:
 752:Core/Src/EPD_GUI.c **** 			Num_Array[Num_Bit] = temp % 10 + '0';
 3059              		.loc 1 752 22 is_stmt 1 discriminator 3 view .LVU855
 3060 00b2 013B     		subs	r3, r3, #1
 3061              	.LVL304:
 752:Core/Src/EPD_GUI.c **** 			Num_Array[Num_Bit] = temp % 10 + '0';
 3062              		.loc 1 752 22 is_stmt 0 discriminator 3 view .LVU856
 3063 00b4 DBB2     		uxtb	r3, r3
 3064              	.LVL305:
 3065              	.L240:
 752:Core/Src/EPD_GUI.c **** 			Num_Array[Num_Bit] = temp % 10 + '0';
 3066              		.loc 1 752 17 is_stmt 1 discriminator 1 view .LVU857
 3067 00b6 002B     		cmp	r3, #0
 3068 00b8 E7D1     		bne	.L241
 756:Core/Src/EPD_GUI.c **** 		}	
 757:Core/Src/EPD_GUI.c **** 		Num_Array[Num_Bit] = '.';
 3069              		.loc 1 757 3 view .LVU858
 3070              		.loc 1 757 22 is_stmt 0 view .LVU859
 3071 00ba 02AB     		add	r3, sp, #8
 3072              	.LVL306:
 3073              		.loc 1 757 22 view .LVU860
 3074 00bc 2E22     		movs	r2, #46
 3075 00be 03F80C20 		strb	r2, [r3, ip]
 758:Core/Src/EPD_GUI.c **** 		Num_Bit++;
 3076              		.loc 1 758 3 is_stmt 1 view .LVU861
 3077              		.loc 1 758 10 is_stmt 0 view .LVU862
 3078 00c2 0CF1010C 		add	ip, ip, #1
 3079              	.LVL307:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 75


 3080              		.loc 1 758 10 view .LVU863
 3081 00c6 0FFA8CFC 		sxth	ip, ip
 3082              	.LVL308:
 3083              	.L242:
 759:Core/Src/EPD_GUI.c **** 	}
 760:Core/Src/EPD_GUI.c **** 
 761:Core/Src/EPD_GUI.c **** 	temp = Nummber;
 762:Core/Src/EPD_GUI.c ****     //Converts a number to a string
 763:Core/Src/EPD_GUI.c ****     do {
 3084              		.loc 1 763 5 is_stmt 1 view .LVU864
 764:Core/Src/EPD_GUI.c ****         Num_Array[Num_Bit] = temp % 10 + '0';
 3085              		.loc 1 764 9 view .LVU865
 3086              		.loc 1 764 35 is_stmt 0 view .LVU866
 3087 00ca 1E4B     		ldr	r3, .L247+4
 3088 00cc 83FB0923 		smull	r2, r3, r3, r9
 3089 00d0 4FEAE97E 		asr	lr, r9, #31
 3090 00d4 CEEBA30E 		rsb	lr, lr, r3, asr #2
 3091 00d8 7346     		mov	r3, lr
 3092 00da 0EEB8E0E 		add	lr, lr, lr, lsl #2
 3093 00de A9EB4E0E 		sub	lr, r9, lr, lsl #1
 3094              		.loc 1 764 40 view .LVU867
 3095 00e2 0EF1300E 		add	lr, lr, #48
 3096              		.loc 1 764 28 view .LVU868
 3097 00e6 02AA     		add	r2, sp, #8
 3098 00e8 02F80CE0 		strb	lr, [r2, ip]
 765:Core/Src/EPD_GUI.c ****         Num_Bit++;
 3099              		.loc 1 765 9 is_stmt 1 view .LVU869
 3100              		.loc 1 765 16 is_stmt 0 view .LVU870
 3101 00ec 0CF1010C 		add	ip, ip, #1
 3102              	.LVL309:
 3103              		.loc 1 765 16 view .LVU871
 3104 00f0 0FFA8CFC 		sxth	ip, ip
 3105              	.LVL310:
 766:Core/Src/EPD_GUI.c ****         temp /= 10;
 3106              		.loc 1 766 9 is_stmt 1 view .LVU872
 3107              		.loc 1 766 14 is_stmt 0 view .LVU873
 3108 00f4 9946     		mov	r9, r3
 3109              	.LVL311:
 767:Core/Src/EPD_GUI.c ****     } while(temp);
 3110              		.loc 1 767 13 is_stmt 1 discriminator 1 view .LVU874
 3111 00f6 002B     		cmp	r3, #0
 3112 00f8 E7D1     		bne	.L242
 3113 00fa 0EE0     		b	.L243
 3114              	.LVL312:
 3115              	.L245:
 735:Core/Src/EPD_GUI.c ****     uint8_t Str_Array[ARRAY_LEN] = {0}, Num_Array[ARRAY_LEN] = {0};
 3116              		.loc 1 735 13 is_stmt 0 view .LVU875
 3117 00fc 4FF0000C 		mov	ip, #0
 3118 0100 E3E7     		b	.L242
 3119              	.LVL313:
 3120              	.L244:
 768:Core/Src/EPD_GUI.c **** 
 769:Core/Src/EPD_GUI.c ****     //The string is inverted
 770:Core/Src/EPD_GUI.c ****     while (Num_Bit > 0) {
 771:Core/Src/EPD_GUI.c ****         Str_Array[Str_Bit] = Num_Array[Num_Bit - 1];
 3121              		.loc 1 771 9 is_stmt 1 view .LVU876
 3122              		.loc 1 771 48 is_stmt 0 view .LVU877
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 76


 3123 0102 0CF1FF32 		add	r2, ip, #-1
 3124              		.loc 1 771 39 view .LVU878
 3125 0106 02A9     		add	r1, sp, #8
 3126 0108 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3127              		.loc 1 771 28 view .LVU879
 3128 010a 42AA     		add	r2, sp, #264
 3129              	.LVL314:
 3130              		.loc 1 771 28 view .LVU880
 3131 010c D154     		strb	r1, [r2, r3]
 772:Core/Src/EPD_GUI.c ****         Str_Bit ++;
 3132              		.loc 1 772 9 is_stmt 1 view .LVU881
 3133              		.loc 1 772 17 is_stmt 0 view .LVU882
 3134 010e 0133     		adds	r3, r3, #1
 3135              	.LVL315:
 3136              		.loc 1 772 17 view .LVU883
 3137 0110 1BB2     		sxth	r3, r3
 3138              	.LVL316:
 773:Core/Src/EPD_GUI.c ****         Num_Bit --;
 3139              		.loc 1 773 9 is_stmt 1 view .LVU884
 3140              		.loc 1 773 17 is_stmt 0 view .LVU885
 3141 0112 0CF1FF3C 		add	ip, ip, #-1
 3142              	.LVL317:
 3143              		.loc 1 773 17 view .LVU886
 3144 0116 0FFA8CFC 		sxth	ip, ip
 3145              	.LVL318:
 3146              	.L243:
 770:Core/Src/EPD_GUI.c ****         Str_Array[Str_Bit] = Num_Array[Num_Bit - 1];
 3147              		.loc 1 770 20 is_stmt 1 view .LVU887
 3148 011a BCF1000F 		cmp	ip, #0
 3149 011e F0DC     		bgt	.L244
 774:Core/Src/EPD_GUI.c ****     }
 775:Core/Src/EPD_GUI.c **** 
 776:Core/Src/EPD_GUI.c ****     //show
 777:Core/Src/EPD_GUI.c ****     EPD_DrawString_EN(Xpoint, Ypoint, (const char*)pStr, Font, Color_Background, Color_Foreground);
 3150              		.loc 1 777 5 view .LVU888
 3151 0120 BDF82832 		ldrh	r3, [sp, #552]
 3152              	.LVL319:
 3153              		.loc 1 777 5 is_stmt 0 view .LVU889
 3154 0124 0193     		str	r3, [sp, #4]
 3155 0126 BDF82C32 		ldrh	r3, [sp, #556]
 3156 012a 0093     		str	r3, [sp]
 3157 012c 4346     		mov	r3, r8
 3158 012e 42AA     		add	r2, sp, #264
 3159              	.LVL320:
 3160              		.loc 1 777 5 view .LVU890
 3161 0130 2946     		mov	r1, r5
 3162 0132 2046     		mov	r0, r4
 3163 0134 FFF7FEFF 		bl	EPD_DrawString_EN
 3164              	.LVL321:
 3165              	.L233:
 778:Core/Src/EPD_GUI.c **** }
 3166              		.loc 1 778 1 view .LVU891
 3167 0138 0DF5027D 		add	sp, sp, #520
 3168              		.cfi_def_cfa_offset 32
 3169              		@ sp needed
 3170 013c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3171              	.LVL322:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 77


 3172              	.L248:
 3173              		.loc 1 778 1 view .LVU892
 3174              		.align	2
 3175              	.L247:
 3176 0140 00000000 		.word	Paint
 3177 0144 67666666 		.word	1717986919
 3178              		.cfi_endproc
 3179              	.LFE338:
 3181              		.section	.rodata.EPD_DrawDate.str1.4,"aMS",%progbits,1
 3182              		.align	2
 3183              	.LC0:
 3184 0000 30313233 		.ascii	"0123456789\000"
 3184      34353637 
 3184      383900
 3185              		.section	.text.EPD_DrawDate,"ax",%progbits
 3186              		.align	1
 3187              		.global	EPD_DrawDate
 3188              		.syntax unified
 3189              		.thumb
 3190              		.thumb_func
 3192              	EPD_DrawDate:
 3193              	.LVL323:
 3194              	.LFB339:
 779:Core/Src/EPD_GUI.c **** 
 780:Core/Src/EPD_GUI.c **** /******************************************************************************
 781:Core/Src/EPD_GUI.c **** function:	Display time
 782:Core/Src/EPD_GUI.c **** parameter:
 783:Core/Src/EPD_GUI.c ****     Xstart           ：X coordinate
 784:Core/Src/EPD_GUI.c ****     Ystart           : Y coordinate
 785:Core/Src/EPD_GUI.c ****     pTime            : Time-related structures
 786:Core/Src/EPD_GUI.c ****     Font             ：A structure pointer that displays a character size
 787:Core/Src/EPD_GUI.c ****     Color_Foreground : Select the foreground color
 788:Core/Src/EPD_GUI.c ****     Color_Background : Select the background color
 789:Core/Src/EPD_GUI.c **** ******************************************************************************/
 790:Core/Src/EPD_GUI.c **** void EPD_DrawDate(UWORD Xstart, UWORD Ystart, EPD_TIME *pTime, sFONT* Font,
 791:Core/Src/EPD_GUI.c ****                     UWORD Color_Foreground, UWORD Color_Background)
 792:Core/Src/EPD_GUI.c **** {
 3195              		.loc 1 792 1 is_stmt 1 view -0
 3196              		.cfi_startproc
 3197              		@ args = 8, pretend = 0, frame = 32
 3198              		@ frame_needed = 0, uses_anonymous_args = 0
 3199              		.loc 1 792 1 is_stmt 0 view .LVU894
 3200 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3201              		.cfi_def_cfa_offset 36
 3202              		.cfi_offset 4, -36
 3203              		.cfi_offset 5, -32
 3204              		.cfi_offset 6, -28
 3205              		.cfi_offset 7, -24
 3206              		.cfi_offset 8, -20
 3207              		.cfi_offset 9, -16
 3208              		.cfi_offset 10, -12
 3209              		.cfi_offset 11, -8
 3210              		.cfi_offset 14, -4
 3211 0004 8BB0     		sub	sp, sp, #44
 3212              		.cfi_def_cfa_offset 80
 3213 0006 0646     		mov	r6, r0
 3214 0008 0F46     		mov	r7, r1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 78


 3215 000a 1546     		mov	r5, r2
 3216 000c 9846     		mov	r8, r3
 3217 000e BDF850A0 		ldrh	r10, [sp, #80]
 3218 0012 BDF85490 		ldrh	r9, [sp, #84]
 793:Core/Src/EPD_GUI.c ****     uint8_t value[10] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
 3219              		.loc 1 793 5 is_stmt 1 view .LVU895
 3220              		.loc 1 793 13 is_stmt 0 view .LVU896
 3221 0016 5E4A     		ldr	r2, .L251
 3222              	.LVL324:
 3223              		.loc 1 793 13 view .LVU897
 3224 0018 07AC     		add	r4, sp, #28
 3225 001a 07CA     		ldm	r2, {r0, r1, r2}
 3226              	.LVL325:
 3227              		.loc 1 793 13 view .LVU898
 3228 001c 03C4     		stmia	r4!, {r0, r1}
 3229 001e 2280     		strh	r2, [r4]	@ movhi
 794:Core/Src/EPD_GUI.c **** 
 795:Core/Src/EPD_GUI.c ****     UWORD Dx = Font->Width;
 3230              		.loc 1 795 5 is_stmt 1 view .LVU899
 3231              		.loc 1 795 11 is_stmt 0 view .LVU900
 3232 0020 9C88     		ldrh	r4, [r3, #4]
 3233              	.LVL326:
 796:Core/Src/EPD_GUI.c **** 
 797:Core/Src/EPD_GUI.c ****     //Write data into the cache
 798:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart                           , Ystart, value[pTime->Day / 10], Font, Color_Bac
 3234              		.loc 1 798 5 is_stmt 1 view .LVU901
 3235              		.loc 1 798 72 is_stmt 0 view .LVU902
 3236 0022 0395     		str	r5, [sp, #12]
 3237 0024 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 3238              		.loc 1 798 78 view .LVU903
 3239 0026 5B4D     		ldr	r5, .L251+4
 3240              	.LVL327:
 3241              		.loc 1 798 78 view .LVU904
 3242 0028 A5FB0212 		umull	r1, r2, r5, r2
 3243              		.loc 1 798 66 view .LVU905
 3244 002c 0AA9     		add	r1, sp, #40
 3245 002e 01EBD202 		add	r2, r1, r2, lsr #3
 3246 0032 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 3247              		.loc 1 798 5 view .LVU906
 3248 0036 CDF804A0 		str	r10, [sp, #4]
 3249 003a CDF80090 		str	r9, [sp]
 3250 003e 3946     		mov	r1, r7
 3251 0040 3046     		mov	r0, r6
 3252 0042 FFF7FEFF 		bl	EPD_DrawChar
 3253              	.LVL328:
 799:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart + Dx                      , Ystart, value[pTime->Day % 10], Font, Color_Bac
 3254              		.loc 1 799 5 is_stmt 1 view .LVU907
 3255 0046 04EB060B 		add	fp, r4, r6
 3256 004a 1FFA8BFB 		uxth	fp, fp
 3257              		.loc 1 799 72 is_stmt 0 view .LVU908
 3258 004e 039A     		ldr	r2, [sp, #12]
 3259 0050 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3260              		.loc 1 799 78 view .LVU909
 3261 0052 A5FB0312 		umull	r1, r2, r5, r3
 3262 0056 D208     		lsrs	r2, r2, #3
 3263 0058 02EB8202 		add	r2, r2, r2, lsl #2
 3264 005c A3EB4203 		sub	r3, r3, r2, lsl #1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 79


 3265              		.loc 1 799 66 view .LVU910
 3266 0060 0AA9     		add	r1, sp, #40
 3267 0062 51FA83F3 		uxtab	r3, r1, r3
 3268 0066 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 3269              		.loc 1 799 5 view .LVU911
 3270 006a CDF804A0 		str	r10, [sp, #4]
 3271 006e CDF80090 		str	r9, [sp]
 3272 0072 4346     		mov	r3, r8
 3273 0074 3946     		mov	r1, r7
 3274 0076 5846     		mov	r0, fp
 3275 0078 FFF7FEFF 		bl	EPD_DrawChar
 3276              	.LVL329:
 800:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart + Dx  + Dx / 4 + Dx / 2   , Ystart, '.'                    , Font, Color_Ba
 3277              		.loc 1 800 5 is_stmt 1 view .LVU912
 3278              		.loc 1 800 31 is_stmt 0 view .LVU913
 3279 007c A308     		lsrs	r3, r4, #2
 3280 007e 0593     		str	r3, [sp, #20]
 3281 0080 0BEB9400 		add	r0, fp, r4, lsr #2
 3282              		.loc 1 800 5 view .LVU914
 3283 0084 4FEA540B 		lsr	fp, r4, #1
 3284 0088 1BFA80F0 		uxtah	r0, fp, r0
 3285 008c CDF804A0 		str	r10, [sp, #4]
 3286 0090 CDF80090 		str	r9, [sp]
 3287 0094 4346     		mov	r3, r8
 3288 0096 2E22     		movs	r2, #46
 3289 0098 3946     		mov	r1, r7
 3290 009a 80B2     		uxth	r0, r0
 3291 009c FFF7FEFF 		bl	EPD_DrawChar
 3292              	.LVL330:
 801:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart + Dx * 2 + Dx / 2         , Ystart, value[pTime->Month / 10] , Font, Color_
 3293              		.loc 1 801 5 is_stmt 1 view .LVU915
 3294              		.loc 1 801 25 is_stmt 0 view .LVU916
 3295 00a0 06EB4400 		add	r0, r6, r4, lsl #1
 3296              		.loc 1 801 72 view .LVU917
 3297 00a4 039A     		ldr	r2, [sp, #12]
 3298 00a6 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 3299              		.loc 1 801 80 view .LVU918
 3300 00a8 A5FB0323 		umull	r2, r3, r5, r3
 3301              		.loc 1 801 66 view .LVU919
 3302 00ac 0DF1280C 		add	ip, sp, #40
 3303 00b0 0CEBD303 		add	r3, ip, r3, lsr #3
 3304 00b4 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 3305              		.loc 1 801 5 view .LVU920
 3306 00b8 1BFA80F0 		uxtah	r0, fp, r0
 3307 00bc CDF804A0 		str	r10, [sp, #4]
 3308 00c0 CDF80090 		str	r9, [sp]
 3309 00c4 4346     		mov	r3, r8
 3310 00c6 3946     		mov	r1, r7
 3311 00c8 80B2     		uxth	r0, r0
 3312 00ca FFF7FEFF 		bl	EPD_DrawChar
 3313              	.LVL331:
 802:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart + Dx * 3 + Dx / 2         , Ystart, value[pTime->Month % 10] , Font, Color_
 3314              		.loc 1 802 5 is_stmt 1 view .LVU921
 3315              		.loc 1 802 25 is_stmt 0 view .LVU922
 3316 00ce 04EB4403 		add	r3, r4, r4, lsl #1
 3317 00d2 0493     		str	r3, [sp, #16]
 3318 00d4 F018     		adds	r0, r6, r3
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 80


 3319              		.loc 1 802 72 view .LVU923
 3320 00d6 039A     		ldr	r2, [sp, #12]
 3321 00d8 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 3322              		.loc 1 802 80 view .LVU924
 3323 00da A5FB0312 		umull	r1, r2, r5, r3
 3324 00de D208     		lsrs	r2, r2, #3
 3325 00e0 02EB8202 		add	r2, r2, r2, lsl #2
 3326 00e4 A3EB4203 		sub	r3, r3, r2, lsl #1
 3327              		.loc 1 802 66 view .LVU925
 3328 00e8 0DF1280C 		add	ip, sp, #40
 3329 00ec 5CFA83F3 		uxtab	r3, ip, r3
 3330 00f0 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 3331              		.loc 1 802 5 view .LVU926
 3332 00f4 1BFA80F0 		uxtah	r0, fp, r0
 3333 00f8 CDF804A0 		str	r10, [sp, #4]
 3334 00fc CDF80090 		str	r9, [sp]
 3335 0100 4346     		mov	r3, r8
 3336 0102 3946     		mov	r1, r7
 3337 0104 80B2     		uxth	r0, r0
 3338 0106 FFF7FEFF 		bl	EPD_DrawChar
 3339              	.LVL332:
 803:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart + Dx * 4 + Dx / 2 - Dx / 4, Ystart, '.'                    , Font, Color_Ba
 3340              		.loc 1 803 5 is_stmt 1 view .LVU927
 3341              		.loc 1 803 25 is_stmt 0 view .LVU928
 3342 010a 06EB8400 		add	r0, r6, r4, lsl #2
 3343              		.loc 1 803 34 view .LVU929
 3344 010e 1BFA80F0 		uxtah	r0, fp, r0
 3345 0112 80B2     		uxth	r0, r0
 3346              		.loc 1 803 5 view .LVU930
 3347 0114 0599     		ldr	r1, [sp, #20]
 3348 0116 401A     		subs	r0, r0, r1
 3349 0118 CDF804A0 		str	r10, [sp, #4]
 3350 011c CDF80090 		str	r9, [sp]
 3351 0120 4346     		mov	r3, r8
 3352 0122 2E22     		movs	r2, #46
 3353 0124 3946     		mov	r1, r7
 3354 0126 80B2     		uxth	r0, r0
 3355 0128 FFF7FEFF 		bl	EPD_DrawChar
 3356              	.LVL333:
 804:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart + Dx * 5                  , Ystart, value[pTime->Year / 10] , Font, Color_B
 3357              		.loc 1 804 5 is_stmt 1 view .LVU931
 3358              		.loc 1 804 72 is_stmt 0 view .LVU932
 3359 012c 039A     		ldr	r2, [sp, #12]
 3360 012e 1388     		ldrh	r3, [r2]
 3361              		.loc 1 804 79 view .LVU933
 3362 0130 A5FB0323 		umull	r2, r3, r5, r3
 3363              		.loc 1 804 66 view .LVU934
 3364 0134 0AA9     		add	r1, sp, #40
 3365 0136 01EBD303 		add	r3, r1, r3, lsr #3
 3366 013a 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 3367              		.loc 1 804 5 view .LVU935
 3368 013e 04EB8404 		add	r4, r4, r4, lsl #2
 3369              	.LVL334:
 3370              		.loc 1 804 5 view .LVU936
 3371 0142 3019     		adds	r0, r6, r4
 3372 0144 CDF804A0 		str	r10, [sp, #4]
 3373 0148 CDF80090 		str	r9, [sp]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 81


 3374 014c 4346     		mov	r3, r8
 3375 014e 3946     		mov	r1, r7
 3376 0150 80B2     		uxth	r0, r0
 3377 0152 FFF7FEFF 		bl	EPD_DrawChar
 3378              	.LVL335:
 805:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart + Dx * 6                  , Ystart, value[pTime->Year % 10] , Font, Color_B
 3379              		.loc 1 805 5 is_stmt 1 view .LVU937
 3380              		.loc 1 805 72 is_stmt 0 view .LVU938
 3381 0156 039A     		ldr	r2, [sp, #12]
 3382 0158 1388     		ldrh	r3, [r2]
 3383              		.loc 1 805 79 view .LVU939
 3384 015a A5FB0325 		umull	r2, r5, r5, r3
 3385 015e ED08     		lsrs	r5, r5, #3
 3386 0160 05EB8505 		add	r5, r5, r5, lsl #2
 3387 0164 A3EB4503 		sub	r3, r3, r5, lsl #1
 3388              		.loc 1 805 66 view .LVU940
 3389 0168 0AAA     		add	r2, sp, #40
 3390 016a 12FA83F3 		uxtah	r3, r2, r3
 3391 016e 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 3392              		.loc 1 805 5 view .LVU941
 3393 0172 049B     		ldr	r3, [sp, #16]
 3394 0174 06EB4300 		add	r0, r6, r3, lsl #1
 3395 0178 CDF804A0 		str	r10, [sp, #4]
 3396 017c CDF80090 		str	r9, [sp]
 3397 0180 4346     		mov	r3, r8
 3398 0182 3946     		mov	r1, r7
 3399 0184 80B2     		uxth	r0, r0
 3400 0186 FFF7FEFF 		bl	EPD_DrawChar
 3401              	.LVL336:
 806:Core/Src/EPD_GUI.c **** }
 3402              		.loc 1 806 1 view .LVU942
 3403 018a 0BB0     		add	sp, sp, #44
 3404              		.cfi_def_cfa_offset 36
 3405              		@ sp needed
 3406 018c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3407              	.LVL337:
 3408              	.L252:
 3409              		.loc 1 806 1 view .LVU943
 3410              		.align	2
 3411              	.L251:
 3412 0190 00000000 		.word	.LC0
 3413 0194 CDCCCCCC 		.word	-858993459
 3414              		.cfi_endproc
 3415              	.LFE339:
 3417              		.section	.text.EPD_DrawTime,"ax",%progbits
 3418              		.align	1
 3419              		.global	EPD_DrawTime
 3420              		.syntax unified
 3421              		.thumb
 3422              		.thumb_func
 3424              	EPD_DrawTime:
 3425              	.LVL338:
 3426              	.LFB340:
 807:Core/Src/EPD_GUI.c **** 
 808:Core/Src/EPD_GUI.c **** void EPD_DrawTime(UWORD Xstart, UWORD Ystart, EPD_TIME *pTime, sFONT* Font,
 809:Core/Src/EPD_GUI.c ****     UWORD Color_Foreground, UWORD Color_Background)
 810:Core/Src/EPD_GUI.c **** {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 82


 3427              		.loc 1 810 1 is_stmt 1 view -0
 3428              		.cfi_startproc
 3429              		@ args = 8, pretend = 0, frame = 24
 3430              		@ frame_needed = 0, uses_anonymous_args = 0
 3431              		.loc 1 810 1 is_stmt 0 view .LVU945
 3432 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3433              		.cfi_def_cfa_offset 36
 3434              		.cfi_offset 4, -36
 3435              		.cfi_offset 5, -32
 3436              		.cfi_offset 6, -28
 3437              		.cfi_offset 7, -24
 3438              		.cfi_offset 8, -20
 3439              		.cfi_offset 9, -16
 3440              		.cfi_offset 10, -12
 3441              		.cfi_offset 11, -8
 3442              		.cfi_offset 14, -4
 3443 0004 89B0     		sub	sp, sp, #36
 3444              		.cfi_def_cfa_offset 72
 3445 0006 0646     		mov	r6, r0
 3446 0008 0F46     		mov	r7, r1
 3447 000a 9146     		mov	r9, r2
 3448 000c 9846     		mov	r8, r3
 3449 000e BDF848B0 		ldrh	fp, [sp, #72]
 3450 0012 BDF84CA0 		ldrh	r10, [sp, #76]
 811:Core/Src/EPD_GUI.c ****     uint8_t value[10] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
 3451              		.loc 1 811 5 is_stmt 1 view .LVU946
 3452              		.loc 1 811 13 is_stmt 0 view .LVU947
 3453 0016 3C4A     		ldr	r2, .L255
 3454              	.LVL339:
 3455              		.loc 1 811 13 view .LVU948
 3456 0018 05AC     		add	r4, sp, #20
 3457 001a 07CA     		ldm	r2, {r0, r1, r2}
 3458              	.LVL340:
 3459              		.loc 1 811 13 view .LVU949
 3460 001c 03C4     		stmia	r4!, {r0, r1}
 3461 001e 2280     		strh	r2, [r4]	@ movhi
 812:Core/Src/EPD_GUI.c **** 
 813:Core/Src/EPD_GUI.c ****     UWORD Dx = Font->Width;
 3462              		.loc 1 813 5 is_stmt 1 view .LVU950
 3463              		.loc 1 813 11 is_stmt 0 view .LVU951
 3464 0020 9C88     		ldrh	r4, [r3, #4]
 3465              	.LVL341:
 814:Core/Src/EPD_GUI.c **** 
 815:Core/Src/EPD_GUI.c ****     //Write data into the cache
 816:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart                           , Ystart, value[pTime->Hour / 10], Font, Color_Ba
 3466              		.loc 1 816 5 is_stmt 1 view .LVU952
 3467              		.loc 1 816 72 is_stmt 0 view .LVU953
 3468 0022 99F80420 		ldrb	r2, [r9, #4]	@ zero_extendqisi2
 3469              		.loc 1 816 79 view .LVU954
 3470 0026 394D     		ldr	r5, .L255+4
 3471 0028 A5FB0212 		umull	r1, r2, r5, r2
 3472              		.loc 1 816 66 view .LVU955
 3473 002c 08A9     		add	r1, sp, #32
 3474 002e 01EBD202 		add	r2, r1, r2, lsr #3
 3475 0032 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 3476              		.loc 1 816 5 view .LVU956
 3477 0036 CDF804B0 		str	fp, [sp, #4]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 83


 3478 003a CDF800A0 		str	r10, [sp]
 3479 003e 3946     		mov	r1, r7
 3480 0040 3046     		mov	r0, r6
 3481 0042 FFF7FEFF 		bl	EPD_DrawChar
 3482              	.LVL342:
 817:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart + Dx                      , Ystart, value[pTime->Hour % 10], Font, Color_Ba
 3483              		.loc 1 817 5 is_stmt 1 view .LVU957
 3484 0046 0396     		str	r6, [sp, #12]
 3485 0048 A619     		adds	r6, r4, r6
 3486              	.LVL343:
 3487              		.loc 1 817 5 is_stmt 0 view .LVU958
 3488 004a B6B2     		uxth	r6, r6
 3489              		.loc 1 817 72 view .LVU959
 3490 004c 99F80430 		ldrb	r3, [r9, #4]	@ zero_extendqisi2
 3491              		.loc 1 817 79 view .LVU960
 3492 0050 A5FB0312 		umull	r1, r2, r5, r3
 3493 0054 D208     		lsrs	r2, r2, #3
 3494 0056 02EB8202 		add	r2, r2, r2, lsl #2
 3495 005a A3EB4203 		sub	r3, r3, r2, lsl #1
 3496              		.loc 1 817 66 view .LVU961
 3497 005e 08AA     		add	r2, sp, #32
 3498 0060 52FA83F3 		uxtab	r3, r2, r3
 3499 0064 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 3500              		.loc 1 817 5 view .LVU962
 3501 0068 CDF804B0 		str	fp, [sp, #4]
 3502 006c CDF800A0 		str	r10, [sp]
 3503 0070 4346     		mov	r3, r8
 3504 0072 3946     		mov	r1, r7
 3505 0074 3046     		mov	r0, r6
 3506 0076 FFF7FEFF 		bl	EPD_DrawChar
 3507              	.LVL344:
 818:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart + Dx  + Dx / 4 + Dx / 2   , Ystart, ':'                    , Font, Color_Ba
 3508              		.loc 1 818 5 is_stmt 1 view .LVU963
 3509              		.loc 1 818 31 is_stmt 0 view .LVU964
 3510 007a 06EB9400 		add	r0, r6, r4, lsr #2
 3511              		.loc 1 818 5 view .LVU965
 3512 007e 6608     		lsrs	r6, r4, #1
 3513 0080 16FA80F0 		uxtah	r0, r6, r0
 3514 0084 CDF804B0 		str	fp, [sp, #4]
 3515 0088 CDF800A0 		str	r10, [sp]
 3516 008c 4346     		mov	r3, r8
 3517 008e 3A22     		movs	r2, #58
 3518 0090 3946     		mov	r1, r7
 3519 0092 80B2     		uxth	r0, r0
 3520 0094 FFF7FEFF 		bl	EPD_DrawChar
 3521              	.LVL345:
 819:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart + Dx * 2 + Dx / 2         , Ystart, value[pTime->Min / 10] , Font, Color_Ba
 3522              		.loc 1 819 5 is_stmt 1 view .LVU966
 3523              		.loc 1 819 25 is_stmt 0 view .LVU967
 3524 0098 039B     		ldr	r3, [sp, #12]
 3525 009a 03EB4400 		add	r0, r3, r4, lsl #1
 3526              		.loc 1 819 72 view .LVU968
 3527 009e 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
 3528              		.loc 1 819 78 view .LVU969
 3529 00a2 A5FB0323 		umull	r2, r3, r5, r3
 3530              		.loc 1 819 66 view .LVU970
 3531 00a6 08AA     		add	r2, sp, #32
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 84


 3532 00a8 02EBD303 		add	r3, r2, r3, lsr #3
 3533 00ac 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 3534              		.loc 1 819 5 view .LVU971
 3535 00b0 16FA80F0 		uxtah	r0, r6, r0
 3536 00b4 CDF804B0 		str	fp, [sp, #4]
 3537 00b8 CDF800A0 		str	r10, [sp]
 3538 00bc 4346     		mov	r3, r8
 3539 00be 3946     		mov	r1, r7
 3540 00c0 80B2     		uxth	r0, r0
 3541 00c2 FFF7FEFF 		bl	EPD_DrawChar
 3542              	.LVL346:
 820:Core/Src/EPD_GUI.c ****     EPD_DrawChar(Xstart + Dx * 3 + Dx / 2         , Ystart, value[pTime->Min % 10] , Font, Color_Ba
 3543              		.loc 1 820 5 is_stmt 1 view .LVU972
 3544              		.loc 1 820 25 is_stmt 0 view .LVU973
 3545 00c6 04EB4404 		add	r4, r4, r4, lsl #1
 3546              	.LVL347:
 3547              		.loc 1 820 25 view .LVU974
 3548 00ca 039B     		ldr	r3, [sp, #12]
 3549 00cc 1C44     		add	r4, r4, r3
 3550              		.loc 1 820 72 view .LVU975
 3551 00ce 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
 3552              		.loc 1 820 78 view .LVU976
 3553 00d2 A5FB0325 		umull	r2, r5, r5, r3
 3554 00d6 ED08     		lsrs	r5, r5, #3
 3555 00d8 05EB8505 		add	r5, r5, r5, lsl #2
 3556 00dc A3EB4503 		sub	r3, r3, r5, lsl #1
 3557              		.loc 1 820 66 view .LVU977
 3558 00e0 08AA     		add	r2, sp, #32
 3559 00e2 52FA83F3 		uxtab	r3, r2, r3
 3560 00e6 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 3561              		.loc 1 820 5 view .LVU978
 3562 00ea 16FA84F0 		uxtah	r0, r6, r4
 3563 00ee CDF804B0 		str	fp, [sp, #4]
 3564 00f2 CDF800A0 		str	r10, [sp]
 3565 00f6 4346     		mov	r3, r8
 3566 00f8 3946     		mov	r1, r7
 3567 00fa 80B2     		uxth	r0, r0
 3568 00fc FFF7FEFF 		bl	EPD_DrawChar
 3569              	.LVL348:
 821:Core/Src/EPD_GUI.c **** }
 3570              		.loc 1 821 1 view .LVU979
 3571 0100 09B0     		add	sp, sp, #36
 3572              		.cfi_def_cfa_offset 36
 3573              		@ sp needed
 3574 0102 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3575              	.LVL349:
 3576              	.L256:
 3577              		.loc 1 821 1 view .LVU980
 3578 0106 00BF     		.align	2
 3579              	.L255:
 3580 0108 00000000 		.word	.LC0
 3581 010c CDCCCCCC 		.word	-858993459
 3582              		.cfi_endproc
 3583              	.LFE340:
 3585              		.section	.text.EPD_DrawBitMap,"ax",%progbits
 3586              		.align	1
 3587              		.global	EPD_DrawBitMap
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 85


 3588              		.syntax unified
 3589              		.thumb
 3590              		.thumb_func
 3592              	EPD_DrawBitMap:
 3593              	.LVL350:
 3594              	.LFB341:
 822:Core/Src/EPD_GUI.c **** 
 823:Core/Src/EPD_GUI.c **** /******************************************************************************
 824:Core/Src/EPD_GUI.c **** function:	Display monochrome bitmap
 825:Core/Src/EPD_GUI.c **** parameter:
 826:Core/Src/EPD_GUI.c ****     image_buffer ：A picture data converted to a bitmap
 827:Core/Src/EPD_GUI.c **** info:
 828:Core/Src/EPD_GUI.c ****     Use a computer to convert the image into a corresponding array,
 829:Core/Src/EPD_GUI.c ****     and then embed the array directly into Imagedata.cpp as a .c file.
 830:Core/Src/EPD_GUI.c **** ******************************************************************************/
 831:Core/Src/EPD_GUI.c **** void EPD_DrawBitMap(const unsigned char* image_buffer)
 832:Core/Src/EPD_GUI.c **** {
 3595              		.loc 1 832 1 is_stmt 1 view -0
 3596              		.cfi_startproc
 3597              		@ args = 0, pretend = 0, frame = 0
 3598              		@ frame_needed = 0, uses_anonymous_args = 0
 3599              		.loc 1 832 1 is_stmt 0 view .LVU982
 3600 0000 00B5     		push	{lr}
 3601              		.cfi_def_cfa_offset 4
 3602              		.cfi_offset 14, -4
 833:Core/Src/EPD_GUI.c ****     UWORD x, y;
 3603              		.loc 1 833 5 is_stmt 1 view .LVU983
 834:Core/Src/EPD_GUI.c ****     UDOUBLE Addr = 0;
 3604              		.loc 1 834 5 view .LVU984
 3605              	.LVL351:
 835:Core/Src/EPD_GUI.c **** 
 836:Core/Src/EPD_GUI.c ****     for (y = 0; y < Paint.HeightByte; y++) {
 3606              		.loc 1 836 5 view .LVU985
 3607              		.loc 1 836 12 is_stmt 0 view .LVU986
 3608 0002 4FF0000E 		mov	lr, #0
 3609              		.loc 1 836 5 view .LVU987
 3610 0006 11E0     		b	.L258
 3611              	.LVL352:
 3612              	.L259:
 837:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 838:Core/Src/EPD_GUI.c ****             Addr = x + y * Paint.WidthByte;
 3613              		.loc 1 838 13 is_stmt 1 view .LVU988
 3614              		.loc 1 838 22 is_stmt 0 view .LVU989
 3615 0008 02FB0E32 		mla	r2, r2, lr, r3
 3616              	.LVL353:
 839:Core/Src/EPD_GUI.c ****             Paint.Image[Addr] = (unsigned char)image_buffer[Addr];
 3617              		.loc 1 839 13 is_stmt 1 view .LVU990
 3618              		.loc 1 839 18 is_stmt 0 view .LVU991
 3619 000c 0B49     		ldr	r1, .L264
 3620 000e 0968     		ldr	r1, [r1]
 3621              		.loc 1 839 33 view .LVU992
 3622 0010 10F802C0 		ldrb	ip, [r0, r2]	@ zero_extendqisi2
 3623              		.loc 1 839 31 view .LVU993
 3624 0014 01F802C0 		strb	ip, [r1, r2]
 837:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3625              		.loc 1 837 43 is_stmt 1 discriminator 3 view .LVU994
 3626 0018 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 86


 3627              	.LVL354:
 837:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3628              		.loc 1 837 43 is_stmt 0 discriminator 3 view .LVU995
 3629 001a 9BB2     		uxth	r3, r3
 3630              	.LVL355:
 3631              	.L260:
 837:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3632              		.loc 1 837 23 is_stmt 1 discriminator 1 view .LVU996
 837:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3633              		.loc 1 837 30 is_stmt 0 discriminator 1 view .LVU997
 3634 001c 074A     		ldr	r2, .L264
 3635 001e 528A     		ldrh	r2, [r2, #18]
 837:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3636              		.loc 1 837 23 discriminator 1 view .LVU998
 3637 0020 9A42     		cmp	r2, r3
 3638 0022 F1D8     		bhi	.L259
 836:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3639              		.loc 1 836 40 is_stmt 1 discriminator 2 view .LVU999
 3640 0024 0EF1010E 		add	lr, lr, #1
 3641              	.LVL356:
 836:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3642              		.loc 1 836 40 is_stmt 0 discriminator 2 view .LVU1000
 3643 0028 1FFA8EFE 		uxth	lr, lr
 3644              	.LVL357:
 3645              	.L258:
 836:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3646              		.loc 1 836 19 is_stmt 1 discriminator 1 view .LVU1001
 836:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3647              		.loc 1 836 26 is_stmt 0 discriminator 1 view .LVU1002
 3648 002c 034B     		ldr	r3, .L264
 3649 002e 9B8A     		ldrh	r3, [r3, #20]
 836:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3650              		.loc 1 836 19 discriminator 1 view .LVU1003
 3651 0030 7345     		cmp	r3, lr
 3652 0032 01D9     		bls	.L263
 837:Core/Src/EPD_GUI.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3653              		.loc 1 837 16 view .LVU1004
 3654 0034 0023     		movs	r3, #0
 3655 0036 F1E7     		b	.L260
 3656              	.L263:
 840:Core/Src/EPD_GUI.c ****         }
 841:Core/Src/EPD_GUI.c ****     }
 842:Core/Src/EPD_GUI.c **** }
 3657              		.loc 1 842 1 view .LVU1005
 3658 0038 5DF804FB 		ldr	pc, [sp], #4
 3659              	.L265:
 3660              		.align	2
 3661              	.L264:
 3662 003c 00000000 		.word	Paint
 3663              		.cfi_endproc
 3664              	.LFE341:
 3666              		.section	.text.EPD_DrawBitMap_Paste,"ax",%progbits
 3667              		.align	1
 3668              		.global	EPD_DrawBitMap_Paste
 3669              		.syntax unified
 3670              		.thumb
 3671              		.thumb_func
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 87


 3673              	EPD_DrawBitMap_Paste:
 3674              	.LVL358:
 3675              	.LFB342:
 843:Core/Src/EPD_GUI.c **** 
 844:Core/Src/EPD_GUI.c **** /******************************************************************************
 845:Core/Src/EPD_GUI.c **** function:	paste monochrome bitmap to a frame buff
 846:Core/Src/EPD_GUI.c **** parameter:
 847:Core/Src/EPD_GUI.c ****     image_buffer ：A picture data converted to a bitmap
 848:Core/Src/EPD_GUI.c ****     xStart: The starting x coordinate
 849:Core/Src/EPD_GUI.c ****     yStart: The starting y coordinate
 850:Core/Src/EPD_GUI.c ****     imageWidth: Original image width
 851:Core/Src/EPD_GUI.c ****     imageHeight: Original image height
 852:Core/Src/EPD_GUI.c ****     flipColor: Whether the color is reversed
 853:Core/Src/EPD_GUI.c **** info:
 854:Core/Src/EPD_GUI.c ****     Use this function to paste image data into a buffer
 855:Core/Src/EPD_GUI.c **** ******************************************************************************/
 856:Core/Src/EPD_GUI.c **** void EPD_DrawBitMap_Paste(const unsigned char* image_buffer, UWORD xStart, UWORD yStart, UWORD imag
 857:Core/Src/EPD_GUI.c **** {
 3676              		.loc 1 857 1 is_stmt 1 view -0
 3677              		.cfi_startproc
 3678              		@ args = 8, pretend = 0, frame = 8
 3679              		@ frame_needed = 0, uses_anonymous_args = 0
 3680              		.loc 1 857 1 is_stmt 0 view .LVU1007
 3681 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3682              		.cfi_def_cfa_offset 36
 3683              		.cfi_offset 4, -36
 3684              		.cfi_offset 5, -32
 3685              		.cfi_offset 6, -28
 3686              		.cfi_offset 7, -24
 3687              		.cfi_offset 8, -20
 3688              		.cfi_offset 9, -16
 3689              		.cfi_offset 10, -12
 3690              		.cfi_offset 11, -8
 3691              		.cfi_offset 14, -4
 3692 0004 83B0     		sub	sp, sp, #12
 3693              		.cfi_def_cfa_offset 48
 3694 0006 0746     		mov	r7, r0
 3695 0008 8846     		mov	r8, r1
 3696 000a 9146     		mov	r9, r2
 3697 000c 1E46     		mov	r6, r3
 3698 000e BDF83030 		ldrh	r3, [sp, #48]
 3699              	.LVL359:
 3700              		.loc 1 857 1 view .LVU1008
 3701 0012 0193     		str	r3, [sp, #4]
 3702 0014 9DF834B0 		ldrb	fp, [sp, #52]	@ zero_extendqisi2
 858:Core/Src/EPD_GUI.c ****     UBYTE color, srcImage;
 3703              		.loc 1 858 5 is_stmt 1 view .LVU1009
 859:Core/Src/EPD_GUI.c ****     UWORD x, y;
 3704              		.loc 1 859 5 view .LVU1010
 860:Core/Src/EPD_GUI.c ****     UWORD width = (imageWidth%8==0 ? imageWidth/8 : imageWidth/8+1);
 3705              		.loc 1 860 5 view .LVU1011
 3706              		.loc 1 860 11 is_stmt 0 view .LVU1012
 3707 0018 16F0070F 		tst	r6, #7
 3708 001c 03D1     		bne	.L267
 3709              		.loc 1 860 11 discriminator 1 view .LVU1013
 3710 001e 4FEAD60A 		lsr	r10, r6, #3
 3711              	.L268:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 88


 3712              	.LVL360:
 861:Core/Src/EPD_GUI.c ****     
 862:Core/Src/EPD_GUI.c ****     for (y = 0; y < imageHeight; y++) {
 3713              		.loc 1 862 5 is_stmt 1 view .LVU1014
 3714              		.loc 1 862 12 is_stmt 0 view .LVU1015
 3715 0022 0025     		movs	r5, #0
 3716              		.loc 1 862 5 view .LVU1016
 3717 0024 27E0     		b	.L269
 3718              	.LVL361:
 3719              	.L267:
 860:Core/Src/EPD_GUI.c ****     UWORD width = (imageWidth%8==0 ? imageWidth/8 : imageWidth/8+1);
 3720              		.loc 1 860 65 discriminator 2 view .LVU1017
 3721 0026 4FEAD60A 		lsr	r10, r6, #3
 860:Core/Src/EPD_GUI.c ****     UWORD width = (imageWidth%8==0 ? imageWidth/8 : imageWidth/8+1);
 3722              		.loc 1 860 11 discriminator 2 view .LVU1018
 3723 002a 0AF1010A 		add	r10, r10, #1
 3724 002e F8E7     		b	.L268
 3725              	.LVL362:
 3726              	.L270:
 863:Core/Src/EPD_GUI.c ****         for (x = 0; x < imageWidth; x++) {
 864:Core/Src/EPD_GUI.c ****             srcImage = image_buffer[y*width + x/8];
 865:Core/Src/EPD_GUI.c ****             if(flipColor)
 866:Core/Src/EPD_GUI.c ****                 color = (((srcImage<<(x%8) & 0x80) == 0) ? 1 : 0);
 867:Core/Src/EPD_GUI.c ****             else
 868:Core/Src/EPD_GUI.c ****                 color = (((srcImage<<(x%8) & 0x80) == 0) ? 0 : 1);
 3727              		.loc 1 868 17 is_stmt 1 view .LVU1019
 3728              		.loc 1 868 40 is_stmt 0 view .LVU1020
 3729 0030 04F00703 		and	r3, r4, #7
 3730              		.loc 1 868 36 view .LVU1021
 3731 0034 9A40     		lsls	r2, r2, r3
 3732              	.LVL363:
 3733              		.loc 1 868 62 view .LVU1022
 3734 0036 C2F3C012 		ubfx	r2, r2, #7, #1
 3735              	.L271:
 3736              	.LVL364:
 869:Core/Src/EPD_GUI.c ****             EPD_SetPixel(x+xStart, y+yStart, color);
 3737              		.loc 1 869 13 is_stmt 1 view .LVU1023
 3738 003a 05EB0901 		add	r1, r5, r9
 3739 003e 04EB0800 		add	r0, r4, r8
 3740 0042 89B2     		uxth	r1, r1
 3741 0044 80B2     		uxth	r0, r0
 3742 0046 FFF7FEFF 		bl	EPD_SetPixel
 3743              	.LVL365:
 863:Core/Src/EPD_GUI.c ****         for (x = 0; x < imageWidth; x++) {
 3744              		.loc 1 863 38 discriminator 2 view .LVU1024
 3745 004a 0134     		adds	r4, r4, #1
 3746              	.LVL366:
 863:Core/Src/EPD_GUI.c ****         for (x = 0; x < imageWidth; x++) {
 3747              		.loc 1 863 38 is_stmt 0 discriminator 2 view .LVU1025
 3748 004c A4B2     		uxth	r4, r4
 3749              	.LVL367:
 3750              	.L273:
 863:Core/Src/EPD_GUI.c ****         for (x = 0; x < imageWidth; x++) {
 3751              		.loc 1 863 23 is_stmt 1 discriminator 1 view .LVU1026
 3752 004e B442     		cmp	r4, r6
 3753 0050 0FD2     		bcs	.L276
 864:Core/Src/EPD_GUI.c ****             if(flipColor)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 89


 3754              		.loc 1 864 13 view .LVU1027
 864:Core/Src/EPD_GUI.c ****             if(flipColor)
 3755              		.loc 1 864 48 is_stmt 0 view .LVU1028
 3756 0052 E308     		lsrs	r3, r4, #3
 864:Core/Src/EPD_GUI.c ****             if(flipColor)
 3757              		.loc 1 864 45 view .LVU1029
 3758 0054 0AFB0533 		mla	r3, r10, r5, r3
 864:Core/Src/EPD_GUI.c ****             if(flipColor)
 3759              		.loc 1 864 22 view .LVU1030
 3760 0058 FA5C     		ldrb	r2, [r7, r3]	@ zero_extendqisi2
 3761              	.LVL368:
 865:Core/Src/EPD_GUI.c ****                 color = (((srcImage<<(x%8) & 0x80) == 0) ? 1 : 0);
 3762              		.loc 1 865 13 is_stmt 1 view .LVU1031
 865:Core/Src/EPD_GUI.c ****                 color = (((srcImage<<(x%8) & 0x80) == 0) ? 1 : 0);
 3763              		.loc 1 865 15 is_stmt 0 view .LVU1032
 3764 005a BBF1000F 		cmp	fp, #0
 3765 005e E7D0     		beq	.L270
 866:Core/Src/EPD_GUI.c ****             else
 3766              		.loc 1 866 17 is_stmt 1 view .LVU1033
 866:Core/Src/EPD_GUI.c ****             else
 3767              		.loc 1 866 40 is_stmt 0 view .LVU1034
 3768 0060 04F00703 		and	r3, r4, #7
 866:Core/Src/EPD_GUI.c ****             else
 3769              		.loc 1 866 36 view .LVU1035
 3770 0064 9A40     		lsls	r2, r2, r3
 3771              	.LVL369:
 866:Core/Src/EPD_GUI.c ****             else
 3772              		.loc 1 866 44 view .LVU1036
 3773 0066 02F08002 		and	r2, r2, #128
 866:Core/Src/EPD_GUI.c ****             else
 3774              		.loc 1 866 62 view .LVU1037
 3775 006a B2FA82F2 		clz	r2, r2
 3776 006e 5209     		lsrs	r2, r2, #5
 3777              	.LVL370:
 866:Core/Src/EPD_GUI.c ****             else
 3778              		.loc 1 866 62 view .LVU1038
 3779 0070 E3E7     		b	.L271
 3780              	.LVL371:
 3781              	.L276:
 862:Core/Src/EPD_GUI.c ****         for (x = 0; x < imageWidth; x++) {
 3782              		.loc 1 862 35 is_stmt 1 discriminator 2 view .LVU1039
 3783 0072 0135     		adds	r5, r5, #1
 3784              	.LVL372:
 862:Core/Src/EPD_GUI.c ****         for (x = 0; x < imageWidth; x++) {
 3785              		.loc 1 862 35 is_stmt 0 discriminator 2 view .LVU1040
 3786 0074 ADB2     		uxth	r5, r5
 3787              	.LVL373:
 3788              	.L269:
 862:Core/Src/EPD_GUI.c ****         for (x = 0; x < imageWidth; x++) {
 3789              		.loc 1 862 19 is_stmt 1 discriminator 1 view .LVU1041
 3790 0076 019B     		ldr	r3, [sp, #4]
 3791 0078 9D42     		cmp	r5, r3
 3792 007a 01D2     		bcs	.L277
 863:Core/Src/EPD_GUI.c ****             srcImage = image_buffer[y*width + x/8];
 3793              		.loc 1 863 16 is_stmt 0 view .LVU1042
 3794 007c 0024     		movs	r4, #0
 3795 007e E6E7     		b	.L273
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 90


 3796              	.L277:
 870:Core/Src/EPD_GUI.c ****         }
 871:Core/Src/EPD_GUI.c ****     }
 872:Core/Src/EPD_GUI.c **** }
 3797              		.loc 1 872 1 view .LVU1043
 3798 0080 03B0     		add	sp, sp, #12
 3799              		.cfi_def_cfa_offset 36
 3800              		@ sp needed
 3801 0082 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3802              		.loc 1 872 1 view .LVU1044
 3803              		.cfi_endproc
 3804              	.LFE342:
 3806              		.section	.text.EPD_DrawBitMap_Block,"ax",%progbits
 3807              		.align	1
 3808              		.global	EPD_DrawBitMap_Block
 3809              		.syntax unified
 3810              		.thumb
 3811              		.thumb_func
 3813              	EPD_DrawBitMap_Block:
 3814              	.LVL374:
 3815              	.LFB343:
 873:Core/Src/EPD_GUI.c **** 
 874:Core/Src/EPD_GUI.c **** ///******************************************************************************
 875:Core/Src/EPD_GUI.c **** //function:	SDisplay half of monochrome bitmap
 876:Core/Src/EPD_GUI.c **** //parameter:
 877:Core/Src/EPD_GUI.c **** //	Region : 1 Upper half
 878:Core/Src/EPD_GUI.c **** //					 2 Lower half
 879:Core/Src/EPD_GUI.c **** //info:
 880:Core/Src/EPD_GUI.c **** //******************************************************************************/
 881:Core/Src/EPD_GUI.c **** //void EPD_DrawBitMap_Half(const unsigned char* image_buffer, UBYTE Region)
 882:Core/Src/EPD_GUI.c **** //{
 883:Core/Src/EPD_GUI.c **** //    UWORD x, y;
 884:Core/Src/EPD_GUI.c **** //    UDOUBLE Addr = 0;
 885:Core/Src/EPD_GUI.c **** //		
 886:Core/Src/EPD_GUI.c **** //		if(Region == 1){
 887:Core/Src/EPD_GUI.c **** //			for (y = 0; y < Paint.HeightByte; y++) {
 888:Core/Src/EPD_GUI.c **** //					for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 889:Core/Src/EPD_GUI.c **** //							Addr = x + y * Paint.WidthByte;
 890:Core/Src/EPD_GUI.c **** //							Paint.Image[Addr] = (unsigned char)image_buffer[Addr];
 891:Core/Src/EPD_GUI.c **** //					}
 892:Core/Src/EPD_GUI.c **** //			}
 893:Core/Src/EPD_GUI.c **** //		}else{
 894:Core/Src/EPD_GUI.c **** //			for (y = 0; y < Paint.HeightByte; y++) {
 895:Core/Src/EPD_GUI.c **** //					for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 896:Core/Src/EPD_GUI.c **** //							Addr = x + y * Paint.WidthByte ;
 897:Core/Src/EPD_GUI.c **** //							Paint.Image[Addr] = 
 898:Core/Src/EPD_GUI.c **** //							(unsigned char)image_buffer[Addr+ (Paint.HeightByte)*Paint.WidthByte];
 899:Core/Src/EPD_GUI.c **** //					}
 900:Core/Src/EPD_GUI.c **** //			}
 901:Core/Src/EPD_GUI.c **** //		}
 902:Core/Src/EPD_GUI.c **** //}
 903:Core/Src/EPD_GUI.c **** 
 904:Core/Src/EPD_GUI.c **** ///******************************************************************************
 905:Core/Src/EPD_GUI.c **** //function:	SDisplay half of monochrome bitmap
 906:Core/Src/EPD_GUI.c **** //parameter:
 907:Core/Src/EPD_GUI.c **** //	Region : 1 Upper half
 908:Core/Src/EPD_GUI.c **** //					 2 Lower half
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 91


 909:Core/Src/EPD_GUI.c **** //info:
 910:Core/Src/EPD_GUI.c **** //******************************************************************************/
 911:Core/Src/EPD_GUI.c **** //void EPD_DrawBitMap_OneQuarter(const unsigned char* image_buffer, UBYTE Region)
 912:Core/Src/EPD_GUI.c **** //{
 913:Core/Src/EPD_GUI.c **** //    UWORD x, y;
 914:Core/Src/EPD_GUI.c **** //    UDOUBLE Addr = 0;
 915:Core/Src/EPD_GUI.c **** //		
 916:Core/Src/EPD_GUI.c **** //		if(Region == 1){
 917:Core/Src/EPD_GUI.c **** //			for (y = 0; y < Paint.HeightByte; y++) {
 918:Core/Src/EPD_GUI.c **** //					for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 919:Core/Src/EPD_GUI.c **** //							Addr = x + y * Paint.WidthByte;
 920:Core/Src/EPD_GUI.c **** //							Paint.Image[Addr] = (unsigned char)image_buffer[Addr];
 921:Core/Src/EPD_GUI.c **** //					}
 922:Core/Src/EPD_GUI.c **** //			}
 923:Core/Src/EPD_GUI.c **** //		}else if(Region == 2){
 924:Core/Src/EPD_GUI.c **** //			for (y = 0; y < Paint.HeightByte; y++) {
 925:Core/Src/EPD_GUI.c **** //					for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 926:Core/Src/EPD_GUI.c **** //							Addr = x + y * Paint.WidthByte ;
 927:Core/Src/EPD_GUI.c **** //							Paint.Image[Addr] = 
 928:Core/Src/EPD_GUI.c **** //							(unsigned char)image_buffer[Addr+ (Paint.HeightByte)*Paint.WidthByte];
 929:Core/Src/EPD_GUI.c **** //					}
 930:Core/Src/EPD_GUI.c **** //			}
 931:Core/Src/EPD_GUI.c **** //		}else if(Region == 3){
 932:Core/Src/EPD_GUI.c **** //			for (y = 0; y < Paint.HeightByte; y++) {
 933:Core/Src/EPD_GUI.c **** //					for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 934:Core/Src/EPD_GUI.c **** //							Addr = x + y * Paint.WidthByte ;
 935:Core/Src/EPD_GUI.c **** //							Paint.Image[Addr] = 
 936:Core/Src/EPD_GUI.c **** //							(unsigned char)image_buffer[Addr+ (Paint.HeightByte)*Paint.WidthByte*2];
 937:Core/Src/EPD_GUI.c **** //					}
 938:Core/Src/EPD_GUI.c **** //			}
 939:Core/Src/EPD_GUI.c **** //		}else if(Region == 4){
 940:Core/Src/EPD_GUI.c **** //			for (y = 0; y < Paint.HeightByte; y++) {
 941:Core/Src/EPD_GUI.c **** //					for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 942:Core/Src/EPD_GUI.c **** //							Addr = x + y * Paint.WidthByte ;
 943:Core/Src/EPD_GUI.c **** //							Paint.Image[Addr] = 
 944:Core/Src/EPD_GUI.c **** //							(unsigned char)image_buffer[Addr+ (Paint.HeightByte)*Paint.WidthByte*3];
 945:Core/Src/EPD_GUI.c **** //					}
 946:Core/Src/EPD_GUI.c **** //			}
 947:Core/Src/EPD_GUI.c **** //		}
 948:Core/Src/EPD_GUI.c **** //}
 949:Core/Src/EPD_GUI.c **** 
 950:Core/Src/EPD_GUI.c **** void EPD_DrawBitMap_Block(const unsigned char* image_buffer, UBYTE Region)
 951:Core/Src/EPD_GUI.c **** {
 3816              		.loc 1 951 1 is_stmt 1 view -0
 3817              		.cfi_startproc
 3818              		@ args = 0, pretend = 0, frame = 0
 3819              		@ frame_needed = 0, uses_anonymous_args = 0
 3820              		.loc 1 951 1 is_stmt 0 view .LVU1046
 3821 0000 30B5     		push	{r4, r5, lr}
 3822              		.cfi_def_cfa_offset 12
 3823              		.cfi_offset 4, -12
 3824              		.cfi_offset 5, -8
 3825              		.cfi_offset 14, -4
 3826 0002 0446     		mov	r4, r0
 3827 0004 0D46     		mov	r5, r1
 952:Core/Src/EPD_GUI.c ****     UWORD x, y;
 3828              		.loc 1 952 5 is_stmt 1 view .LVU1047
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 92


 953:Core/Src/EPD_GUI.c ****     UDOUBLE Addr = 0;
 3829              		.loc 1 953 5 view .LVU1048
 3830              	.LVL375:
 954:Core/Src/EPD_GUI.c **** 		for (y = 0; y < Paint.HeightByte; y++) {
 3831              		.loc 1 954 3 view .LVU1049
 3832              		.loc 1 954 10 is_stmt 0 view .LVU1050
 3833 0006 0020     		movs	r0, #0
 3834              	.LVL376:
 3835              		.loc 1 954 3 view .LVU1051
 3836 0008 16E0     		b	.L279
 3837              	.LVL377:
 3838              	.L280:
 955:Core/Src/EPD_GUI.c **** 				for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 956:Core/Src/EPD_GUI.c **** 						Addr = x + y * Paint.WidthByte ;
 3839              		.loc 1 956 7 is_stmt 1 view .LVU1052
 3840              		.loc 1 956 16 is_stmt 0 view .LVU1053
 3841 000a 03FB002C 		mla	ip, r3, r0, r2
 3842              	.LVL378:
 957:Core/Src/EPD_GUI.c **** 						Paint.Image[Addr] = \
 3843              		.loc 1 957 7 is_stmt 1 view .LVU1054
 958:Core/Src/EPD_GUI.c **** 						(unsigned char)image_buffer[Addr+ (Paint.HeightByte)*Paint.WidthByte*(Region - 1)];
 3844              		.loc 1 958 47 is_stmt 0 view .LVU1055
 3845 000e 0E49     		ldr	r1, .L285
 3846 0010 B1F814E0 		ldrh	lr, [r1, #20]
 3847              		.loc 1 958 59 view .LVU1056
 3848 0014 0EFB03F3 		mul	r3, lr, r3
 3849              		.loc 1 958 84 view .LVU1057
 3850 0018 05F1FF3E 		add	lr, r5, #-1
 3851              		.loc 1 958 39 view .LVU1058
 3852 001c 0EFB03C3 		mla	r3, lr, r3, ip
 957:Core/Src/EPD_GUI.c **** 						Paint.Image[Addr] = \
 3853              		.loc 1 957 12 view .LVU1059
 3854 0020 0968     		ldr	r1, [r1]
 3855              		.loc 1 958 7 view .LVU1060
 3856 0022 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 957:Core/Src/EPD_GUI.c **** 						Paint.Image[Addr] = \
 3857              		.loc 1 957 25 view .LVU1061
 3858 0024 01F80C30 		strb	r3, [r1, ip]
 955:Core/Src/EPD_GUI.c **** 				for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3859              		.loc 1 955 39 is_stmt 1 discriminator 3 view .LVU1062
 3860 0028 0132     		adds	r2, r2, #1
 3861              	.LVL379:
 955:Core/Src/EPD_GUI.c **** 				for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3862              		.loc 1 955 39 is_stmt 0 discriminator 3 view .LVU1063
 3863 002a 92B2     		uxth	r2, r2
 3864              	.LVL380:
 3865              	.L281:
 955:Core/Src/EPD_GUI.c **** 				for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3866              		.loc 1 955 19 is_stmt 1 discriminator 1 view .LVU1064
 955:Core/Src/EPD_GUI.c **** 				for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3867              		.loc 1 955 26 is_stmt 0 discriminator 1 view .LVU1065
 3868 002c 064B     		ldr	r3, .L285
 3869 002e 5B8A     		ldrh	r3, [r3, #18]
 955:Core/Src/EPD_GUI.c **** 				for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3870              		.loc 1 955 19 discriminator 1 view .LVU1066
 3871 0030 9342     		cmp	r3, r2
 3872 0032 EAD8     		bhi	.L280
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 93


 954:Core/Src/EPD_GUI.c **** 				for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3873              		.loc 1 954 38 is_stmt 1 discriminator 2 view .LVU1067
 3874 0034 0130     		adds	r0, r0, #1
 3875              	.LVL381:
 954:Core/Src/EPD_GUI.c **** 				for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3876              		.loc 1 954 38 is_stmt 0 discriminator 2 view .LVU1068
 3877 0036 80B2     		uxth	r0, r0
 3878              	.LVL382:
 3879              	.L279:
 954:Core/Src/EPD_GUI.c **** 				for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3880              		.loc 1 954 17 is_stmt 1 discriminator 1 view .LVU1069
 954:Core/Src/EPD_GUI.c **** 				for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3881              		.loc 1 954 24 is_stmt 0 discriminator 1 view .LVU1070
 3882 0038 034B     		ldr	r3, .L285
 3883 003a 9B8A     		ldrh	r3, [r3, #20]
 954:Core/Src/EPD_GUI.c **** 				for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 3884              		.loc 1 954 17 discriminator 1 view .LVU1071
 3885 003c 8342     		cmp	r3, r0
 3886 003e 01D9     		bls	.L284
 955:Core/Src/EPD_GUI.c **** 						Addr = x + y * Paint.WidthByte ;
 3887              		.loc 1 955 12 view .LVU1072
 3888 0040 0022     		movs	r2, #0
 3889 0042 F3E7     		b	.L281
 3890              	.L284:
 959:Core/Src/EPD_GUI.c **** 				}
 960:Core/Src/EPD_GUI.c **** 		}
 961:Core/Src/EPD_GUI.c **** }
 3891              		.loc 1 961 1 view .LVU1073
 3892 0044 30BD     		pop	{r4, r5, pc}
 3893              	.LVL383:
 3894              	.L286:
 3895              		.loc 1 961 1 view .LVU1074
 3896 0046 00BF     		.align	2
 3897              	.L285:
 3898 0048 00000000 		.word	Paint
 3899              		.cfi_endproc
 3900              	.LFE343:
 3902              		.section	.text.EPD_DrawBMP,"ax",%progbits
 3903              		.align	1
 3904              		.global	EPD_DrawBMP
 3905              		.syntax unified
 3906              		.thumb
 3907              		.thumb_func
 3909              	EPD_DrawBMP:
 3910              	.LVL384:
 3911              	.LFB344:
 962:Core/Src/EPD_GUI.c **** 
 963:Core/Src/EPD_GUI.c **** void EPD_DrawBMP(uint8_t xs, uint8_t ys, uint8_t xl, uint8_t yl, uint8_t bmp[xl][yl]){
 3912              		.loc 1 963 86 is_stmt 1 view -0
 3913              		.cfi_startproc
 3914              		@ args = 4, pretend = 0, frame = 0
 3915              		@ frame_needed = 0, uses_anonymous_args = 0
 3916              		.loc 1 963 86 is_stmt 0 view .LVU1076
 3917 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3918              		.cfi_def_cfa_offset 32
 3919              		.cfi_offset 4, -32
 3920              		.cfi_offset 5, -28
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 94


 3921              		.cfi_offset 6, -24
 3922              		.cfi_offset 7, -20
 3923              		.cfi_offset 8, -16
 3924              		.cfi_offset 9, -12
 3925              		.cfi_offset 10, -8
 3926              		.cfi_offset 14, -4
 3927 0004 8246     		mov	r10, r0
 3928 0006 8946     		mov	r9, r1
 3929 0008 1746     		mov	r7, r2
 3930 000a 1E46     		mov	r6, r3
 3931 000c DDF82080 		ldr	r8, [sp, #32]
 3932              	.LVL385:
 964:Core/Src/EPD_GUI.c ****     for (uint8_t y = 0; y < yl; y++){
 3933              		.loc 1 964 5 is_stmt 1 view .LVU1077
 3934              	.LBB20:
 3935              		.loc 1 964 10 view .LVU1078
 3936              		.loc 1 964 18 is_stmt 0 view .LVU1079
 3937 0010 0025     		movs	r5, #0
 3938              		.loc 1 964 5 view .LVU1080
 3939 0012 12E0     		b	.L288
 3940              	.LVL386:
 3941              	.L295:
 3942              	.LBB21:
 965:Core/Src/EPD_GUI.c ****       for (uint8_t x = 0; x < xl; x++){
 966:Core/Src/EPD_GUI.c ****         if(bmp[x][y] == 0){
 967:Core/Src/EPD_GUI.c ****           EPD_SetPixel(x+xs, y+ys, BLACK);
 3943              		.loc 1 967 11 is_stmt 1 view .LVU1081
 3944 0014 0022     		movs	r2, #0
 3945 0016 05EB0901 		add	r1, r5, r9
 3946 001a 04EB0A00 		add	r0, r4, r10
 3947 001e FFF7FEFF 		bl	EPD_SetPixel
 3948              	.LVL387:
 3949              	.L289:
 965:Core/Src/EPD_GUI.c ****       for (uint8_t x = 0; x < xl; x++){
 3950              		.loc 1 965 36 discriminator 2 view .LVU1082
 3951 0022 0134     		adds	r4, r4, #1
 3952              	.LVL388:
 965:Core/Src/EPD_GUI.c ****       for (uint8_t x = 0; x < xl; x++){
 3953              		.loc 1 965 36 is_stmt 0 discriminator 2 view .LVU1083
 3954 0024 E4B2     		uxtb	r4, r4
 3955              	.LVL389:
 3956              	.L291:
 965:Core/Src/EPD_GUI.c ****       for (uint8_t x = 0; x < xl; x++){
 3957              		.loc 1 965 29 is_stmt 1 discriminator 1 view .LVU1084
 3958 0026 BC42     		cmp	r4, r7
 3959 0028 05D2     		bcs	.L294
 966:Core/Src/EPD_GUI.c ****           EPD_SetPixel(x+xs, y+ys, BLACK);
 3960              		.loc 1 966 9 view .LVU1085
 966:Core/Src/EPD_GUI.c ****           EPD_SetPixel(x+xs, y+ys, BLACK);
 3961              		.loc 1 966 15 is_stmt 0 view .LVU1086
 3962 002a 06FB0483 		mla	r3, r6, r4, r8
 966:Core/Src/EPD_GUI.c ****           EPD_SetPixel(x+xs, y+ys, BLACK);
 3963              		.loc 1 966 18 view .LVU1087
 3964 002e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 966:Core/Src/EPD_GUI.c ****           EPD_SetPixel(x+xs, y+ys, BLACK);
 3965              		.loc 1 966 11 view .LVU1088
 3966 0030 002B     		cmp	r3, #0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 95


 3967 0032 F6D1     		bne	.L289
 3968 0034 EEE7     		b	.L295
 3969              	.L294:
 966:Core/Src/EPD_GUI.c ****           EPD_SetPixel(x+xs, y+ys, BLACK);
 3970              		.loc 1 966 11 view .LVU1089
 3971              	.LBE21:
 964:Core/Src/EPD_GUI.c ****     for (uint8_t y = 0; y < yl; y++){
 3972              		.loc 1 964 34 is_stmt 1 discriminator 2 view .LVU1090
 3973 0036 0135     		adds	r5, r5, #1
 3974              	.LVL390:
 964:Core/Src/EPD_GUI.c ****     for (uint8_t y = 0; y < yl; y++){
 3975              		.loc 1 964 34 is_stmt 0 discriminator 2 view .LVU1091
 3976 0038 EDB2     		uxtb	r5, r5
 3977              	.LVL391:
 3978              	.L288:
 964:Core/Src/EPD_GUI.c ****     for (uint8_t y = 0; y < yl; y++){
 3979              		.loc 1 964 27 is_stmt 1 discriminator 1 view .LVU1092
 3980 003a B542     		cmp	r5, r6
 3981 003c 01D2     		bcs	.L296
 3982              	.LBB22:
 965:Core/Src/EPD_GUI.c ****       for (uint8_t x = 0; x < xl; x++){
 3983              		.loc 1 965 20 is_stmt 0 view .LVU1093
 3984 003e 0024     		movs	r4, #0
 3985 0040 F1E7     		b	.L291
 3986              	.L296:
 3987              	.LBE22:
 3988              	.LBE20:
 968:Core/Src/EPD_GUI.c ****         }
 969:Core/Src/EPD_GUI.c ****       }
 970:Core/Src/EPD_GUI.c ****     }
 971:Core/Src/EPD_GUI.c ****   }
 3989              		.loc 1 971 3 view .LVU1094
 3990 0042 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3991              		.loc 1 971 3 view .LVU1095
 3992              		.cfi_endproc
 3993              	.LFE344:
 3995              		.global	Paint
 3996              		.section	.bss.Paint,"aw",%nobits
 3997              		.align	2
 4000              	Paint:
 4001 0000 00000000 		.space	24
 4001      00000000 
 4001      00000000 
 4001      00000000 
 4001      00000000 
 4002              		.text
 4003              	.Letext0:
 4004              		.file 2 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/ma
 4005              		.file 3 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/sy
 4006              		.file 4 "Core/Inc/Fonts/../Fonts/fonts.h"
 4007              		.file 5 "Core/Inc/EPD_GUI.h"
 4008              		.file 6 "<built-in>"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 96


DEFINED SYMBOLS
                            *ABS*:00000000 EPD_GUI.c
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:21     .text.EPD_NewImage:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:27     .text.EPD_NewImage:00000000 EPD_NewImage
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:131    .text.EPD_NewImage:0000004c $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:4000   .bss.Paint:00000000 Paint
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:136    .text.EPD_SelectImage:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:142    .text.EPD_SelectImage:00000000 EPD_SelectImage
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:159    .text.EPD_SelectImage:00000008 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:164    .text.EPD_SetRotate:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:170    .text.EPD_SetRotate:00000000 EPD_SetRotate
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:202    .text.EPD_SetRotate:00000018 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:207    .text.EPD_SetScale:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:213    .text.EPD_SetScale:00000000 EPD_SetScale
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:304    .text.EPD_SetScale:00000054 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:309    .text.EPD_SetMirroring:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:315    .text.EPD_SetMirroring:00000000 EPD_SetMirroring
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:338    .text.EPD_SetMirroring:0000000c $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:343    .text.EPD_SetPixel:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:349    .text.EPD_SetPixel:00000000 EPD_SetPixel
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:466    .text.EPD_SetPixel:0000006e $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:470    .text.EPD_SetPixel:00000072 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:719    .text.EPD_SetPixel:00000164 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:725    .text.EPD_Clear:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:731    .text.EPD_Clear:00000000 EPD_Clear
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:960    .text.EPD_Clear:000000c0 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:966    .text.EPD_ClearWindows:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:972    .text.EPD_ClearWindows:00000000 EPD_ClearWindows
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1039   .text.EPD_DrawPoint:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1045   .text.EPD_DrawPoint:00000000 EPD_DrawPoint
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1208   .text.EPD_DrawPoint:000000bc $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1213   .text.EPD_DrawLine:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1219   .text.EPD_DrawLine:00000000 EPD_DrawLine
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1446   .text.EPD_DrawLine:000000fc $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1452   .text.EPD_DrawRectangle:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1458   .text.EPD_DrawRectangle:00000000 EPD_DrawRectangle
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1588   .text.EPD_DrawRectangle:000000c0 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1593   .text.EPD_DrawCircle:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1599   .text.EPD_DrawCircle:00000000 EPD_DrawCircle
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1980   .text.EPD_DrawCircle:0000023c $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1985   .text.EPD_DrawChar:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:1991   .text.EPD_DrawChar:00000000 EPD_DrawChar
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:2183   .text.EPD_DrawChar:000000d0 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:2188   .text.EPD_DrawString_EN:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:2194   .text.EPD_DrawString_EN:00000000 EPD_DrawString_EN
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:2326   .text.EPD_DrawString_EN:00000078 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:2331   .text.EPD_DrawString_CN:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:2337   .text.EPD_DrawString_CN:00000000 EPD_DrawString_CN
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:2736   .text.EPD_DrawNum:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:2742   .text.EPD_DrawNum:00000000 EPD_DrawNum
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:2891   .text.EPD_DrawNum:000000ac $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:2897   .text.EPD_DrawNumDecimals:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:2903   .text.EPD_DrawNumDecimals:00000000 EPD_DrawNumDecimals
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3176   .text.EPD_DrawNumDecimals:00000140 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3182   .rodata.EPD_DrawDate.str1.4:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3186   .text.EPD_DrawDate:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3192   .text.EPD_DrawDate:00000000 EPD_DrawDate
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s 			page 97


C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3412   .text.EPD_DrawDate:00000190 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3418   .text.EPD_DrawTime:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3424   .text.EPD_DrawTime:00000000 EPD_DrawTime
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3580   .text.EPD_DrawTime:00000108 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3586   .text.EPD_DrawBitMap:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3592   .text.EPD_DrawBitMap:00000000 EPD_DrawBitMap
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3662   .text.EPD_DrawBitMap:0000003c $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3667   .text.EPD_DrawBitMap_Paste:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3673   .text.EPD_DrawBitMap_Paste:00000000 EPD_DrawBitMap_Paste
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3807   .text.EPD_DrawBitMap_Block:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3813   .text.EPD_DrawBitMap_Block:00000000 EPD_DrawBitMap_Block
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3898   .text.EPD_DrawBitMap_Block:00000048 $d
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3903   .text.EPD_DrawBMP:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3909   .text.EPD_DrawBMP:00000000 EPD_DrawBMP
C:\Users\kroko\AppData\Local\Temp\ccjyz4Sw.s:3997   .bss.Paint:00000000 $d

UNDEFINED SYMBOLS
memset
__aeabi_d2iz
__aeabi_i2d
__aeabi_dsub
__aeabi_d2f
